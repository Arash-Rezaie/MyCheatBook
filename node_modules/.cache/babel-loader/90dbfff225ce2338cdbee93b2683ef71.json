{"ast":null,"code":"import { Text } from \"./shape\";\nimport { Rectangle } from \"./rectangle\";\nimport { Circle } from \"./circle\";\nexport class Type extends Rectangle {\n  constructor(handler) {\n    super();\n    this.r = 9;\n    this.handler = handler;\n    this.setFillColor('#ffffe4');\n    this.setStrokeColor('#cbcac6');\n    this.setStrokeWidth(2);\n    this.setHeight(this.r * 2 + 6);\n  }\n\n  getLabel() {\n    let lbl = super.getLabel();\n\n    if (typeof lbl === 'string') {\n      lbl = new Text().alignTo(this).setOffset([this.r + 5, 4]).setLabel(lbl).setColor('black');\n    }\n\n    return lbl;\n  }\n\n  setType(type) {\n    this.type = type;\n    return this;\n  }\n\n  getTagShape(text, color) {\n    let circle = new Circle().setPosition(this.getCenterPoint()).setOffset([-this.width / 2 + this.r + 3, 0]).setRadius(this.r).setFillColor(color);\n    circle.setLabel(new Text().setPosition(circle.getCenterPoint()).setOffset([0, 4]).setLabel(text));\n    return circle;\n  }\n\n  render(canvasCtx) {\n    super.render(canvasCtx);\n    if (this.type != null) this.createTag(this.type).render(canvasCtx);\n  }\n\n  createTag(type) {\n    switch (type) {\n      case 'c':\n      case 'class':\n        return this.getTagShape('C', '#659199');\n\n      case 'i':\n      case 'interface':\n        return this.getTagShape('I', '#a1d383');\n\n      case '@':\n      case 'annotation':\n        return this.getTagShape('@', '#8ab472');\n\n      default:\n        break;\n    }\n  }\n\n}","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/drawbox/simple/type.js"],"names":["Text","Rectangle","Circle","Type","constructor","handler","r","setFillColor","setStrokeColor","setStrokeWidth","setHeight","getLabel","lbl","alignTo","setOffset","setLabel","setColor","setType","type","getTagShape","text","color","circle","setPosition","getCenterPoint","width","setRadius","render","canvasCtx","createTag"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,SAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,MAAR,QAAqB,UAArB;AAEA,OAAO,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAIhCG,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AADiB,SAFrBC,CAEqB,GAFjB,CAEiB;AAEjB,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKE,YAAL,CAAkB,SAAlB;AACA,SAAKC,cAAL,CAAoB,SAApB;AACA,SAAKC,cAAL,CAAoB,CAApB;AACA,SAAKC,SAAL,CAAe,KAAKJ,CAAL,GAAS,CAAT,GAAa,CAA5B;AACH;;AAEDK,EAAAA,QAAQ,GAAG;AACP,QAAIC,GAAG,GAAG,MAAMD,QAAN,EAAV;;AACA,QAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;AACzBA,MAAAA,GAAG,GAAG,IAAIZ,IAAJ,GACDa,OADC,CACO,IADP,EAEDC,SAFC,CAES,CAAC,KAAKR,CAAL,GAAS,CAAV,EAAa,CAAb,CAFT,EAGDS,QAHC,CAGQH,GAHR,EAIDI,QAJC,CAIQ,OAJR,CAAN;AAKH;;AACD,WAAOJ,GAAP;AACH;;AAEDK,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,SAAKA,IAAL,GAAYA,IAAZ;AACA,WAAO,IAAP;AACH;;AAEDC,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAc;AACrB,QAAIC,MAAM,GAAG,IAAIpB,MAAJ,GACRqB,WADQ,CACI,KAAKC,cAAL,EADJ,EAERV,SAFQ,CAEE,CAAC,CAAC,KAAKW,KAAN,GAAc,CAAd,GAAkB,KAAKnB,CAAvB,GAA2B,CAA5B,EAA+B,CAA/B,CAFF,EAGRoB,SAHQ,CAGE,KAAKpB,CAHP,EAIRC,YAJQ,CAIKc,KAJL,CAAb;AAKAC,IAAAA,MAAM,CAACP,QAAP,CACI,IAAIf,IAAJ,GACKuB,WADL,CACiBD,MAAM,CAACE,cAAP,EADjB,EAEKV,SAFL,CAEe,CAAC,CAAD,EAAI,CAAJ,CAFf,EAGKC,QAHL,CAGcK,IAHd,CADJ;AAMA,WAAOE,MAAP;AACH;;AAEDK,EAAAA,MAAM,CAACC,SAAD,EAAY;AACd,UAAMD,MAAN,CAAaC,SAAb;AACA,QAAI,KAAKV,IAAL,IAAa,IAAjB,EACI,KAAKW,SAAL,CAAe,KAAKX,IAApB,EAA0BS,MAA1B,CAAiCC,SAAjC;AACP;;AAEDC,EAAAA,SAAS,CAACX,IAAD,EAAO;AACZ,YAAQA,IAAR;AACI,WAAK,GAAL;AACA,WAAK,OAAL;AACI,eAAO,KAAKC,WAAL,CAAiB,GAAjB,EAAsB,SAAtB,CAAP;;AACJ,WAAK,GAAL;AACA,WAAK,WAAL;AACI,eAAO,KAAKA,WAAL,CAAiB,GAAjB,EAAsB,SAAtB,CAAP;;AACJ,WAAK,GAAL;AACA,WAAK,YAAL;AACI,eAAO,KAAKA,WAAL,CAAiB,GAAjB,EAAsB,SAAtB,CAAP;;AACJ;AACI;AAXR;AAaH;;AAjE+B","sourcesContent":["import {Text} from \"./shape\";\nimport {Rectangle} from \"./rectangle\";\nimport {Circle} from \"./circle\";\n\nexport class Type extends Rectangle {\n    type;\n    r = 9;\n\n    constructor(handler) {\n        super();\n        this.handler = handler;\n        this.setFillColor('#ffffe4');\n        this.setStrokeColor('#cbcac6');\n        this.setStrokeWidth(2);\n        this.setHeight(this.r * 2 + 6)\n    }\n\n    getLabel() {\n        let lbl = super.getLabel();\n        if (typeof lbl === 'string') {\n            lbl = new Text()\n                .alignTo(this)\n                .setOffset([this.r + 5, 4])\n                .setLabel(lbl)\n                .setColor('black')\n        }\n        return lbl;\n    }\n\n    setType(type) {\n        this.type = type;\n        return this;\n    }\n\n    getTagShape(text, color) {\n        let circle = new Circle()\n            .setPosition(this.getCenterPoint())\n            .setOffset([-this.width / 2 + this.r + 3, 0])\n            .setRadius(this.r)\n            .setFillColor(color);\n        circle.setLabel(\n            new Text()\n                .setPosition(circle.getCenterPoint())\n                .setOffset([0, 4])\n                .setLabel(text)\n        )\n        return circle;\n    }\n\n    render(canvasCtx) {\n        super.render(canvasCtx);\n        if (this.type != null)\n            this.createTag(this.type).render(canvasCtx);\n    }\n\n    createTag(type) {\n        switch (type) {\n            case 'c':\n            case 'class':\n                return this.getTagShape('C', '#659199')\n            case 'i':\n            case 'interface':\n                return this.getTagShape('I', '#a1d383')\n            case '@':\n            case 'annotation':\n                return this.getTagShape('@', '#8ab472')\n            default:\n                break;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}