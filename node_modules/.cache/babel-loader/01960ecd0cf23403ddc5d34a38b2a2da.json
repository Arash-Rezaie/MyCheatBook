{"ast":null,"code":"import { Line } from \"../simple/line\";\nimport { Text } from \"../simple/shape\";\nexport class ExtendedLine extends Line {\n  constructor(handler) {\n    super();\n    this.handler = handler;\n  }\n\n  getLabel() {\n    let lbl = super.getLabel();\n\n    if (lbl.label) {\n      lbl = this.handler.generateShape(lbl);\n      lbl.alignTo(this);\n    }\n\n    return lbl;\n  }\n\n  between(shape1, shape2, gap = 0) {\n    this.setStart([shape1, gap]);\n    this.setEnd([shape2, gap]);\n    return this;\n  }\n\n  setStart(point) {\n    return super.setStart([this.getTargetShape(point[0]), point[1]]);\n  }\n\n  setEnd(point) {\n    return super.setEnd([this.getTargetShape(point[0]), point[1]]);\n  }\n\n  setQuadraticPoint(point) {\n    return super.setQuadraticPoint([this.getTargetShape(point[0]), point[1]]);\n  }\n\n  getTargetShape(value) {\n    return typeof value === 'string' && !value.match('\\\\d+[dDrR]') ? this.handler.getTargetShape(value) : value;\n  }\n\n}\nexport class ExtendedHLine extends ExtendedLine {\n  setLength(l) {\n    l > 0 ? this.setEnd(['0D', l]) : this.setEnd(['180D', -l]);\n    return this;\n  }\n\n}\nexport class ExtendedVLine extends ExtendedLine {\n  setLength(l) {\n    l > 0 ? this.setEnd(['90D', l]) : this.setEnd(['270D', -l]);\n    return this;\n  }\n\n}\nexport class ExtendedVector extends ExtendedLine {\n  constructor(handler) {\n    super(handler);\n    this.setStrokeColor('black').setFillColor('black').setStrokeWidth(2).showArrow(1, 1);\n  }\n\n}\nexport class ExtendedHVector extends ExtendedVector {\n  setLength(l) {\n    return l > 0 ? this.setEnd(['0D', l]) : this.setEnd(['180D', -l]);\n  }\n\n  getLabel() {\n    let lbl = super.getLabel();\n\n    if (typeof lbl === 'string') {\n      lbl = new Text().alignTo(this).setLabel(lbl).setOffset([0, -6]).setFontStyle('');\n    }\n\n    return lbl;\n  }\n\n}","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/drawbox/wrappered/extended-line.js"],"names":["Line","Text","ExtendedLine","constructor","handler","getLabel","lbl","label","generateShape","alignTo","between","shape1","shape2","gap","setStart","setEnd","point","getTargetShape","setQuadraticPoint","value","match","ExtendedHLine","setLength","l","ExtendedVLine","ExtendedVector","setStrokeColor","setFillColor","setStrokeWidth","showArrow","ExtendedHVector","setLabel","setOffset","setFontStyle"],"mappings":"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","sourcesContent":["import {Line} from \"../simple/line\";\nimport {Text} from \"../simple/shape\";\n\nexport class ExtendedLine extends Line {\n    constructor(handler) {\n        super();\n        this.handler = handler;\n    }\n\n    getLabel() {\n        let lbl = super.getLabel();\n        if (lbl.label) {\n            lbl = this.handler.generateShape(lbl);\n            lbl.alignTo(this);\n        }\n        return lbl;\n    }\n\n    between(shape1, shape2, gap = 0) {\n        this.setStart([shape1, gap]);\n        this.setEnd([shape2, gap]);\n        return this;\n    }\n\n    setStart(point) {\n        return super.setStart([this.getTargetShape(point[0]), point[1]]);\n    }\n\n    setEnd(point) {\n        return super.setEnd([this.getTargetShape(point[0]), point[1]]);\n    }\n\n    setQuadraticPoint(point) {\n        return super.setQuadraticPoint([this.getTargetShape(point[0]), point[1]]);\n    }\n\n    getTargetShape(value) {\n        return (typeof value === 'string' && !value.match('\\\\d+[dDrR]')) ? this.handler.getTargetShape(value) : value;\n    }\n}\n\nexport class ExtendedHLine extends ExtendedLine {\n    setLength(l) {\n        l > 0 ?\n            this.setEnd(['0D', l]) :\n            this.setEnd(['180D', -l])\n        return this;\n    }\n}\n\nexport class ExtendedVLine extends ExtendedLine {\n    setLength(l) {\n        l > 0 ?\n            this.setEnd(['90D', l]) :\n            this.setEnd(['270D', -l])\n        return this;\n    }\n}\n\nexport class ExtendedVector extends ExtendedLine {\n    constructor(handler) {\n        super(handler);\n        this.setStrokeColor('black')\n            .setFillColor('black')\n            .setStrokeWidth(2)\n            .showArrow(1, 1);\n    }\n}\n\nexport class ExtendedHVector extends ExtendedVector {\n    setLength(l) {\n        return (l > 0) ?\n            this.setEnd(['0D', l]) :\n            this.setEnd(['180D', -l])\n    }\n\n    getLabel() {\n        let lbl = super.getLabel();\n        if (typeof lbl === 'string') {\n            lbl = new Text()\n                .alignTo(this)\n                .setLabel(lbl)\n                .setOffset([0, -6])\n                .setFontStyle('');\n        }\n        return lbl;\n    }\n}"]},"metadata":{},"sourceType":"module"}