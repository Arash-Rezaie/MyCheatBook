{"ast":null,"code":"import { Shape, Text } from \"../simple/shape\";\nimport { Rectangle } from \"../simple/rectangle\";\nimport { Circle } from \"../simple/circle\";\nexport class Type extends Rectangle {\n  constructor() {\n    super();\n    this.r = 10;\n    this.setFillColor('#ffffe4');\n    this.setStrokeColor('#cbcac6');\n    this.setStrokeWidth(2);\n    this.setHeight(this.r + 10);\n  }\n\n  setLabel(label) {\n    if (typeof label === 'string') {\n      label = new Text().setPosition(this.getCenterPoint()).setOffset([this.r + 5, 3]).setLabel(label).setColor('black');\n    }\n\n    return super.setLabel(label);\n  }\n\n  setType(type) {\n    switch (type) {\n      case 'class':\n        this.type = this.getTagShape('C', '#659199');\n        break;\n\n      case 'interface':\n        this.type = this.getTagShape('I', '#a1d383');\n        break;\n\n      case 'annotation':\n        this.type = this.getTagShape('@', '#8ab472');\n        break;\n\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  getTagShape(text, color) {\n    return new Circle().setPosition(this.getCenterPoint()).setOffset([-this.width / 2 + this.r + 2, 0]).setRadius(this.r).setFillColor(color).setLabel(text);\n  }\n\n  render(canvasCtx) {\n    super.render(canvasCtx);\n    if (this.type != null) this.type.render(canvasCtx);\n  }\n\n}","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/drawbox/extended/type.js"],"names":["Shape","Text","Rectangle","Circle","Type","constructor","r","setFillColor","setStrokeColor","setStrokeWidth","setHeight","setLabel","label","setPosition","getCenterPoint","setOffset","setColor","setType","type","getTagShape","text","color","width","setRadius","render","canvasCtx"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,IAAf,QAA0B,iBAA1B;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AAEA,OAAO,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAIhCG,EAAAA,WAAW,GAAG;AACV;AADU,SAFdC,CAEc,GAFV,EAEU;AAEV,SAAKC,YAAL,CAAkB,SAAlB;AACA,SAAKC,cAAL,CAAoB,SAApB;AACA,SAAKC,cAAL,CAAoB,CAApB;AACA,SAAKC,SAAL,CAAe,KAAKJ,CAAL,GAAS,EAAxB;AACH;;AAEDK,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,MAAAA,KAAK,GAAG,IAAIX,IAAJ,GACHY,WADG,CACS,KAAKC,cAAL,EADT,EAEHC,SAFG,CAEO,CAAC,KAAKT,CAAL,GAAS,CAAV,EAAa,CAAb,CAFP,EAGHK,QAHG,CAGMC,KAHN,EAIHI,QAJG,CAIM,OAJN,CAAR;AAKH;;AACD,WAAO,MAAML,QAAN,CAAeC,KAAf,CAAP;AACH;;AAEDK,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,YAAQA,IAAR;AACI,WAAK,OAAL;AACI,aAAKA,IAAL,GAAY,KAAKC,WAAL,CAAiB,GAAjB,EAAsB,SAAtB,CAAZ;AACA;;AACJ,WAAK,WAAL;AACI,aAAKD,IAAL,GAAY,KAAKC,WAAL,CAAiB,GAAjB,EAAsB,SAAtB,CAAZ;AACA;;AACJ,WAAK,YAAL;AACI,aAAKD,IAAL,GAAY,KAAKC,WAAL,CAAiB,GAAjB,EAAsB,SAAtB,CAAZ;AACA;;AACJ;AACI;AAXR;;AAcA,WAAO,IAAP;AACH;;AAEDA,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAc;AACrB,WAAO,IAAIlB,MAAJ,GACFU,WADE,CACU,KAAKC,cAAL,EADV,EAEFC,SAFE,CAEQ,CAAC,CAAC,KAAKO,KAAN,GAAc,CAAd,GAAkB,KAAKhB,CAAvB,GAA2B,CAA5B,EAA+B,CAA/B,CAFR,EAGFiB,SAHE,CAGQ,KAAKjB,CAHb,EAIFC,YAJE,CAIWc,KAJX,EAKFV,QALE,CAKOS,IALP,CAAP;AAMH;;AAEDI,EAAAA,MAAM,CAACC,SAAD,EAAY;AACd,UAAMD,MAAN,CAAaC,SAAb;AACA,QAAI,KAAKP,IAAL,IAAa,IAAjB,EACI,KAAKA,IAAL,CAAUM,MAAV,CAAiBC,SAAjB;AACP;;AAtD+B","sourcesContent":["import {Shape, Text} from \"../simple/shape\";\nimport {Rectangle} from \"../simple/rectangle\";\nimport {Circle} from \"../simple/circle\";\n\nexport class Type extends Rectangle {\n    type;\n    r = 10;\n\n    constructor() {\n        super();\n        this.setFillColor('#ffffe4');\n        this.setStrokeColor('#cbcac6');\n        this.setStrokeWidth(2);\n        this.setHeight(this.r + 10)\n    }\n\n    setLabel(label) {\n        if (typeof label === 'string') {\n            label = new Text()\n                .setPosition(this.getCenterPoint())\n                .setOffset([this.r + 5, 3])\n                .setLabel(label)\n                .setColor('black')\n        }\n        return super.setLabel(label);\n    }\n\n    setType(type) {\n        switch (type) {\n            case 'class':\n                this.type = this.getTagShape('C', '#659199')\n                break;\n            case 'interface':\n                this.type = this.getTagShape('I', '#a1d383')\n                break;\n            case 'annotation':\n                this.type = this.getTagShape('@', '#8ab472')\n                break;\n            default:\n                break;\n        }\n\n        return this;\n    }\n\n    getTagShape(text, color) {\n        return new Circle()\n            .setPosition(this.getCenterPoint())\n            .setOffset([-this.width / 2 + this.r + 2, 0])\n            .setRadius(this.r)\n            .setFillColor(color)\n            .setLabel(text)\n    }\n\n    render(canvasCtx) {\n        super.render(canvasCtx);\n        if (this.type != null)\n            this.type.render(canvasCtx);\n    }\n}"]},"metadata":{},"sourceType":"module"}