{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/arash/usb_stick/my-cheat-book2/src/contents/regex/regex-cheats.js\";\nimport React from \"react\";\nimport { Frame } from \"../../components/blocks\";\nimport { Bold, Bullet } from \"../../components/components\";\nexport function RegexCheats() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [getBasics(), getQualifiers(), getJavaMethods()]\n  }, void 0, true);\n}\n_c = RegexCheats;\n\nfunction getBasics() {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#fcc520',\n        fontWeight: 'bold',\n        fontSize: '20px',\n        margingBottom: '10px'\n      },\n      children: \"Character classes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '[abc]',\n      children: [\"matches \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 45\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 63\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 81\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '[^abc]',\n      children: [\"negation, matches every thing except \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this), \", \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 40\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 58\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '[a-c]',\n      children: [\"range, matches \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 52\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 70\n      }, this), \", or \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 89\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '[a-c[f-h]]',\n      children: [\"union, matches \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), \", \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 41\n      }, this), \", \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 57\n      }, this), \", \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"f\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 73\n      }, this), \", \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 89\n      }, this), \", \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"h\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 105\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '[a-c&&[b-c]]',\n      children: [\"intersection, matches \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 66\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 84\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '[a-c&&[^b-c]]',\n      children: [\"subtraction, matches \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 66\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#dea726',\n        fontWeight: 'bold',\n        fontSize: '20px',\n        margingBottom: '10px'\n      },\n      children: \"Predefined character classes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 51\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '.',\n      children: \"Any character.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\d',\n      children: [\"A digit: \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"[0-9]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\D',\n      children: [\"A non-digit: \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"[^0-9]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\s',\n      children: [\"A whitespace character: \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"[ \\\\t\\\\n\\\\x0B\\\\f\\\\r]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\S',\n      children: [\"A non-whitespace character: \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"[^\\\\s]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\w',\n      children: [\"A word character: \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"[a-zA-Z_0-9]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\W',\n      children: [\"A non-word character: \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"[^\\\\w]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#a76e1e',\n        fontWeight: 'bold',\n        fontSize: '20px',\n        margingBottom: '10px'\n      },\n      children: \"Boundary matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '^',\n      children: \"The beginning of a line.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '$',\n      children: \"The end of a line.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\b',\n      children: \"A word boundary.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\B',\n      children: \"A non-word boundary.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\A',\n      children: \"The beginning of the input.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\G',\n      children: \"The end of the previous match.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\Z',\n      children: \"The end of the input but for the final terminator, if any.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\z',\n      children: \"The end of the input.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#e14c20',\n        fontWeight: 'bold',\n        fontSize: '20px',\n        margingBottom: '10px'\n      },\n      children: \"Look around\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '(?=x)',\n      children: [\" Lookahead - Asserts that what immediately follows the current position in the string is \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '(?<=x)',\n      children: [\" Lookbehind - Asserts that what immediately precedes the current position in the string is \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '(?!x)',\n      children: [\" Negative Lookahead - Asserts that what immediately follows the current position in the string is not \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '(?<!x)',\n      children: [\" Negative Lookbehind - Asserts that what immediately precedes the current position in the string is not \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#f16738',\n        fontWeight: 'bold',\n        fontSize: '20px',\n        margingBottom: '10px'\n      },\n      children: \"Pattern flags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"Pattern.CASE_INSENSITIVE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), \" - enables case-insensitive matching.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 87\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"Pattern.COMMENTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), \" - whitespace and comments starting with \", /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"#\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 83\n    }, this), \" are ignored until the end of a line.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"Pattern.MULTILINE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), \" - one expression can match multiple lines.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 86\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"Pattern.UNIX_LINES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), \" - only the '\", /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"\\\\n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 57\n    }, this), \"' line terminator is recognized in the behavior of \", /*#__PURE__*/_jsxDEV(Bold, {\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this), \", \", /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"^\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 32\n    }, this), \" and \", /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\nfunction getJavaMethods() {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#8fc647',\n        fontWeight: 'bold',\n        fontSize: '20px',\n        margingBottom: '10px'\n      },\n      children: \"Useful java classes & methods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#79a546',\n        // fontWeight: 'bold',\n        fontSize: '20px',\n        margingBottom: '10px'\n      },\n      children: \"Pattern\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), \"A pattern is a compiler representation of a regular expression.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"Pattern compile (String regex)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 56\n    }, this), \"Compiles the given regular expression into a pattern.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"Pattern compile (String regex, int flags)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 67\n    }, this), \"Compiles the given regular expression into a pattern with the given flags.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"boolean matches(String regex)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 55\n    }, this), \"Tell whether or not this string matches the given regular expression.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"String[] split(CharacterSequence input)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 65\n    }, this), \"Splits the given input sequence aroung matches of this pattern.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"String quote(String s)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 48\n    }, this), \"Returns a literal pattern String of the specified String.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: [\"Predicate\", '<String>', \" asPredicate()\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 61\n    }, this), \"Creates a predicate which can used to match a string.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#44751c',\n        // fontWeight: 'bold',\n        fontSize: '20px',\n        margingBottom: '10px'\n      },\n      children: \"Matcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), \"An engine that performs match operations on a character sequence by interpreting a Pattern.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"boolean matches()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 43\n    }, this), \"Attempts to match the entire region against the pattern.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"boolean find()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 40\n    }, this), \"Attempts to find the next subsequence of the input sequence that matches the pattern.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"int start()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 37\n    }, this), \"Returns the start index of the previous match.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"int end()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 35\n    }, this), \"Returns the offset after the last character matched.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\nfunction getQualifiers() {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#71b1cc',\n        fontWeight: 'bold',\n        fontSize: '20px'\n      },\n      children: \"Qualifiers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: 'customTbl1',\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Greedy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reluctant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Possessive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X??\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X?+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X, once or not at all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X*?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X*+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X, zero or more times.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X+?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X, one or more times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"X\", '{n}']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"X\", '{n}', \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"X\", '{n}', \"+\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X, exactly n times.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"X\", '{n,}']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"X\", '{n,}', \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"X\", '{n,}', \"+\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X, at least n times.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"X\", '{n,m}']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"X\", '{n,m}', \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"X\", '{n,m}', \"+\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"X, at least n but not more than m times.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"Greedy - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), \"matches the longest matching group.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 70\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"Reluctant - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), \"matches the shortest group.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(Bold, {\n      children: \"Possessive - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), \"longest match or bust (no backoff).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#5f99af',\n        fontWeight: 'bold',\n        fontSize: '20px'\n      },\n      children: \"Groups & backreference\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), \"A group is a captured subsequence of characters which may be used later in the expression with a backreference.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '(...)',\n      children: \"defines a group.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\N',\n      children: \"refers to a matched group.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '(\\\\d\\\\d)',\n      children: \"a group of two digits.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '(\\\\d\\\\d)/\\\\1',\n      children: \"two digits repeated twice.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '\\\\1',\n      children: \"refers to the matched group.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#4b7792',\n        fontWeight: 'bold',\n        fontSize: '20px'\n      },\n      children: \"Logical operations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: 'XY',\n      children: [/*#__PURE__*/_jsxDEV(Bold, {\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 34\n      }, this), \" then \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"Y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: 'X|Y',\n      children: [/*#__PURE__*/_jsxDEV(Bold, {\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 35\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"Y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"RegexCheats\");","map":{"version":3,"sources":["/media/arash/usb_stick/my-cheat-book2/src/contents/regex/regex-cheats.js"],"names":["React","Frame","Bold","Bullet","RegexCheats","getBasics","getQualifiers","getJavaMethods","color","fontWeight","fontSize","margingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Frame} from \"../../components/blocks\";\nimport {Bold, Bullet} from \"../../components/components\";\n\nexport function RegexCheats() {\n    return (\n        <>\n            {getBasics()}\n            {getQualifiers()}\n            {getJavaMethods()}\n\n        </>\n    )\n}\n\nfunction getBasics() {\n    return (\n        <Frame>\n            <span style={{\n                color: '#fcc520',\n                fontWeight: 'bold',\n                fontSize: '20px',\n                margingBottom: '10px'\n            }}>Character classes</span><br/>\n            <Bullet title={'[abc]'}>matches <Bold>a</Bold> or <Bold>b</Bold> or <Bold>c</Bold>.</Bullet>\n            <Bullet title={'[^abc]'}>negation, matches every thing\n                except <Bold>a</Bold>, <Bold>b</Bold> or <Bold>c</Bold>.</Bullet>\n            <Bullet title={'[a-c]'}>range, matches <Bold>a</Bold> or <Bold>b</Bold>, or <Bold>c</Bold>.</Bullet>\n            <Bullet title={'[a-c[f-h]]'}>union,\n                matches <Bold>a</Bold>, <Bold>b</Bold>, <Bold>c</Bold>, <Bold>f</Bold>, <Bold>g</Bold>, <Bold>h</Bold>.</Bullet>\n            <Bullet title={'[a-c&&[b-c]]'}>intersection, matches <Bold>b</Bold> or <Bold>c</Bold>.</Bullet>\n            <Bullet title={'[a-c&&[^b-c]]'}>subtraction, matches <Bold>a</Bold>.</Bullet>\n            <br/><br/>\n            <span style={{\n                color: '#dea726',\n                fontWeight: 'bold',\n                fontSize: '20px',\n                margingBottom: '10px'\n            }}>Predefined character classes</span><br/>\n            <Bullet title={'.'}>Any character.</Bullet>\n            <Bullet title={'\\\\d'}>A digit: <Bold>[0-9]</Bold></Bullet>\n            <Bullet title={'\\\\D'}>A non-digit: <Bold>[^0-9]</Bold></Bullet>\n            <Bullet title={'\\\\s'}>A whitespace character: <Bold>[ \\t\\n\\x0B\\f\\r]</Bold></Bullet>\n            <Bullet title={'\\\\S'}>A non-whitespace character: <Bold>[^\\s]</Bold></Bullet>\n            <Bullet title={'\\\\w'}>A word character: <Bold>[a-zA-Z_0-9]</Bold></Bullet>\n            <Bullet title={'\\\\W'}>A non-word character: <Bold>[^\\w]</Bold></Bullet>\n            <br/><br/>\n            <span style={{\n                color: '#a76e1e',\n                fontWeight: 'bold',\n                fontSize: '20px',\n                margingBottom: '10px'\n            }}>Boundary matches</span><br/>\n            <Bullet title={'^'}>The beginning of a line.</Bullet>\n            <Bullet title={'$'}>The end of a line.</Bullet>\n            <Bullet title={'\\\\b'}>A word boundary.</Bullet>\n            <Bullet title={'\\\\B'}>A non-word boundary.</Bullet>\n            <Bullet title={'\\\\A'}>The beginning of the input.</Bullet>\n            <Bullet title={'\\\\G'}>The end of the previous match.</Bullet>\n            <Bullet title={'\\\\Z'}>The end of the input but for the final terminator, if any.</Bullet>\n            <Bullet title={'\\\\z'}>The end of the input.</Bullet>\n            <br/><br/>\n            <span style={{\n                color: '#e14c20',\n                fontWeight: 'bold',\n                fontSize: '20px',\n                margingBottom: '10px'\n            }}>Look around</span><br/>\n            <Bullet\n                title={'(?=x)'}> Lookahead - Asserts that what immediately follows the current position in the string\n                is <Bold>x</Bold></Bullet>\n            <Bullet title={'(?<=x)'}> Lookbehind - Asserts that what immediately precedes the current position in the\n                string is <Bold>x</Bold></Bullet>\n            <Bullet title={'(?!x)'}> Negative Lookahead - Asserts that what immediately follows the current position\n                in the string is not <Bold>x</Bold></Bullet>\n            <Bullet title={'(?<!x)'}> Negative Lookbehind - Asserts that what immediately precedes the current\n                position in the string is not <Bold>x</Bold></Bullet>\n            <br/><br/>\n            <span style={{\n                color: '#f16738',\n                fontWeight: 'bold',\n                fontSize: '20px',\n                margingBottom: '10px'\n            }}>Pattern flags</span><br/>\n            <Bold>Pattern.CASE_INSENSITIVE</Bold> - enables case-insensitive matching.<br/>\n            <Bold>Pattern.COMMENTS</Bold> - whitespace and comments starting with <Bold>#</Bold> are ignored until the\n            end of a line.<br/>\n            <Bold>Pattern.MULTILINE</Bold> - one expression can match multiple lines.<br/>\n            <Bold>Pattern.UNIX_LINES</Bold> - only the '<Bold>\\n</Bold>' line terminator is recognized in the behavior\n            of <Bold>.</Bold>, <Bold>^</Bold> and <Bold>$</Bold>\n        </Frame>\n    )\n}\n\nfunction getJavaMethods() {\n    return (\n        <Frame>\n                                <span style={{\n                                    color: '#8fc647',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    margingBottom: '10px'\n                                }}>Useful java classes & methods</span>\n            <br/><br/>\n            <span style={{\n                color: '#79a546',\n                // fontWeight: 'bold',\n                fontSize: '20px',\n                margingBottom: '10px'\n            }}>Pattern</span>\n            <br/>\n            A pattern is a compiler representation of a regular expression.\n            <br/><br/>\n            <Bold>Pattern compile (String regex)</Bold><br/>\n            Compiles the given regular expression into a pattern.\n            <br/><br/>\n            <Bold>Pattern compile (String regex, int flags)</Bold><br/>\n            Compiles the given regular expression into a pattern with the given flags.\n            <br/><br/>\n            <Bold>boolean matches(String regex)</Bold><br/>\n            Tell whether or not this string matches the given regular expression.\n            <br/><br/>\n            <Bold>String[] split(CharacterSequence input)</Bold><br/>\n            Splits the given input sequence aroung matches of this pattern.\n            <br/><br/>\n            <Bold>String quote(String s)</Bold><br/>\n            Returns a literal pattern String of the specified String.\n            <br/><br/>\n            <Bold>Predicate{'<String>'} asPredicate()</Bold><br/>\n            Creates a predicate which can used to match a string.\n            <br/><br/>\n            <span style={{\n                color: '#44751c',\n                // fontWeight: 'bold',\n                fontSize: '20px',\n                margingBottom: '10px'\n            }}>Matcher</span>\n            <br/>\n            An engine that performs match operations on a character sequence by interpreting a Pattern.\n            <br/><br/>\n            <Bold>boolean matches()</Bold><br/>\n            Attempts to match the entire region against the pattern.\n            <br/><br/>\n            <Bold>boolean find()</Bold><br/>\n            Attempts to find the next subsequence of the input sequence that matches the pattern.\n            <br/><br/>\n            <Bold>int start()</Bold><br/>\n            Returns the start index of the previous match.\n            <br/><br/>\n            <Bold>int end()</Bold><br/>\n            Returns the offset after the last character matched.\n        </Frame>\n    )\n}\n\nfunction getQualifiers() {\n    return (\n        <Frame>\n                                <span style={{\n                                    color: '#71b1cc',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                }}>Qualifiers</span>\n            <br/>\n            <table className={'customTbl1'}>\n                <thead>\n                <tr>\n                    <th>Greedy</th>\n                    <th>Reluctant</th>\n                    <th>Possessive</th>\n                    <th>Description</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td>X?</td>\n                    <td>X??</td>\n                    <td>X?+</td>\n                    <td>X, once or not at all</td>\n                </tr>\n                <tr>\n                    <td>X*</td>\n                    <td>X*?</td>\n                    <td>X*+</td>\n                    <td>X, zero or more times.</td>\n                </tr>\n                <tr>\n                    <td>X+</td>\n                    <td>X+?</td>\n                    <td>X++</td>\n                    <td>X, one or more times</td>\n                </tr>\n                <tr>\n                    <td>X{'{n}'}</td>\n                    <td>X{'{n}'}?</td>\n                    <td>X{'{n}'}+</td>\n                    <td>X, exactly n times.</td>\n                </tr>\n                <tr>\n                    <td>X{'{n,}'}</td>\n                    <td>X{'{n,}'}?</td>\n                    <td>X{'{n,}'}+</td>\n                    <td>X, at least n times.</td>\n                </tr>\n                <tr>\n                    <td>X{'{n,m}'}</td>\n                    <td>X{'{n,m}'}?</td>\n                    <td>X{'{n,m}'}+</td>\n                    <td>X, at least n but not more than m times.</td>\n                </tr>\n                </tbody>\n            </table>\n            <br/>\n            <Bold>Greedy - </Bold>matches the longest matching group.<br/>\n            <Bold>Reluctant - </Bold>matches the shortest group.<br/>\n            <Bold>Possessive - </Bold>longest match or bust (no backoff).\n            <br/><br/><br/>\n            <span style={{\n                color: '#5f99af',\n                fontWeight: 'bold',\n                fontSize: '20px',\n            }}>Groups & backreference</span>\n            <br/>\n            A group is a captured subsequence of characters which may be used later in the expression with a\n            backreference.\n            <br/><br/>\n            <Bullet title={'(...)'}>defines a group.</Bullet>\n            <Bullet title={'\\\\N'}>refers to a matched group.</Bullet>\n            <br/>\n            <Bullet title={'(\\\\d\\\\d)'}>a group of two digits.</Bullet>\n            <Bullet title={'(\\\\d\\\\d)/\\\\1'}>two digits repeated twice.</Bullet>\n            <Bullet title={'\\\\1'}>refers to the matched group.</Bullet>\n            <br/><br/>\n            <span style={{\n                color: '#4b7792',\n                fontWeight: 'bold',\n                fontSize: '20px',\n            }}>Logical operations</span>\n            <br/>\n            <Bullet title={'XY'}><Bold>X</Bold> then <Bold>Y</Bold></Bullet>\n            <Bullet title={'X|Y'}><Bold>X</Bold> or <Bold>Y</Bold></Bullet>\n        </Frame>\n    )\n}"]},"metadata":{},"sourceType":"module"}