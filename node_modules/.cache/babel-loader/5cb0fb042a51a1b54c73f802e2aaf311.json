{"ast":null,"code":"import { Circle } from \"../simple/circle\";\nimport { Text } from \"../simple/text\";\nimport { Vector } from \"../simple/line\";\nimport { Caption } from \"./caption\";\nexport class Node extends Circle {\n  constructor(handler) {\n    super();\n    debugger;\n    this.handler = handler;\n    this.setRadius(20).setStrokeWidth(3).setStrokeColor('black').setFillColor('yellow');\n  }\n\n  setLabel(label) {\n    if (typeof label === 'string') {\n      label = new Text().setPosition(this.getCenterPoint()).setLabel(label).setFontSize('20px').setOffset([0, 6]);\n    }\n\n    return super.setLabel(label);\n  }\n\n  connectTo(refId) {\n    this.handler.addShape(new Vector().between(this, this.handler.getTargetShape(refId), 5));\n    return this;\n  }\n\n  setCaptions(caps) {\n    if (caps[0] === undefined) caps = [caps];\n    caps.forEach((v, i) => {\n      this.handler.addShape(new Caption(this.handler).alignTo(this).setOffset(v.offset ? v.offset : [28, caps.length * -11.5 + i * 25]).setWidth(v.w).setHeight(20).setLabel(v.t).setColor(v.c).setStrokeWidth(2));\n    });\n    return this;\n  }\n\n}","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/drawbox/extended/node.js"],"names":["Circle","Text","Vector","Caption","Node","constructor","handler","setRadius","setStrokeWidth","setStrokeColor","setFillColor","setLabel","label","setPosition","getCenterPoint","setFontSize","setOffset","connectTo","refId","addShape","between","getTargetShape","setCaptions","caps","undefined","forEach","v","i","alignTo","offset","length","setWidth","w","setHeight","t","setColor","c"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,kBAArB;AACA,SAAQC,IAAR,QAAmB,gBAAnB;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,OAAO,MAAMC,IAAN,SAAmBJ,MAAnB,CAA0B;AAC7BK,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AACA;AACA,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,CAAe,EAAf,EACKC,cADL,CACoB,CADpB,EAEKC,cAFL,CAEoB,OAFpB,EAGKC,YAHL,CAGkB,QAHlB;AAIH;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,MAAAA,KAAK,GAAG,IAAIX,IAAJ,GACHY,WADG,CACS,KAAKC,cAAL,EADT,EAEHH,QAFG,CAEMC,KAFN,EAGHG,WAHG,CAGS,MAHT,EAIHC,SAJG,CAIO,CAAC,CAAD,EAAI,CAAJ,CAJP,CAAR;AAKH;;AACD,WAAO,MAAML,QAAN,CAAeC,KAAf,CAAP;AACH;;AAEDK,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,SAAKZ,OAAL,CAAaa,QAAb,CAAsB,IAAIjB,MAAJ,GACjBkB,OADiB,CACT,IADS,EACH,KAAKd,OAAL,CAAae,cAAb,CAA4BH,KAA5B,CADG,EACiC,CADjC,CAAtB;AAEA,WAAO,IAAP;AACH;;AAEDI,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,QAAIA,IAAI,CAAC,CAAD,CAAJ,KAAYC,SAAhB,EACID,IAAI,GAAG,CAACA,IAAD,CAAP;AACJA,IAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnB,WAAKrB,OAAL,CAAaa,QAAb,CACI,IAAIhB,OAAJ,CAAY,KAAKG,OAAjB,EACKsB,OADL,CACa,IADb,EAEKZ,SAFL,CAEeU,CAAC,CAACG,MAAF,GAAWH,CAAC,CAACG,MAAb,GAAsB,CAAC,EAAD,EAAMN,IAAI,CAACO,MAAL,GAAc,CAAC,IAAf,GAAuBH,CAAC,GAAG,EAAjC,CAFrC,EAGKI,QAHL,CAGcL,CAAC,CAACM,CAHhB,EAIKC,SAJL,CAIe,EAJf,EAKKtB,QALL,CAKce,CAAC,CAACQ,CALhB,EAMKC,QANL,CAMcT,CAAC,CAACU,CANhB,EAOK5B,cAPL,CAOoB,CAPpB,CADJ;AAUH,KAXD;AAYA,WAAO,IAAP;AACH;;AA5C4B","sourcesContent":["import {Circle} from \"../simple/circle\";\nimport {Text} from \"../simple/text\";\nimport {Vector} from \"../simple/line\";\nimport {Caption} from \"./caption\";\n\nexport class Node extends Circle {\n    constructor(handler) {\n        super();\n        debugger\n        this.handler = handler;\n        this.setRadius(20)\n            .setStrokeWidth(3)\n            .setStrokeColor('black')\n            .setFillColor('yellow');\n    }\n\n    setLabel(label) {\n        if (typeof label === 'string') {\n            label = new Text()\n                .setPosition(this.getCenterPoint())\n                .setLabel(label)\n                .setFontSize('20px')\n                .setOffset([0, 6]);\n        }\n        return super.setLabel(label);\n    }\n\n    connectTo(refId) {\n        this.handler.addShape(new Vector()\n            .between(this, this.handler.getTargetShape(refId), 5));\n        return this;\n    }\n\n    setCaptions(caps) {\n        if (caps[0] === undefined)\n            caps = [caps];\n        caps.forEach((v, i) => {\n            this.handler.addShape(\n                new Caption(this.handler)\n                    .alignTo(this)\n                    .setOffset(v.offset ? v.offset : [28, (caps.length * -11.5 + (i * 25))])\n                    .setWidth(v.w)\n                    .setHeight(20)\n                    .setLabel(v.t)\n                    .setColor(v.c)\n                    .setStrokeWidth(2)\n            )\n        });\n        return this;\n    }\n}"]},"metadata":{},"sourceType":"module"}