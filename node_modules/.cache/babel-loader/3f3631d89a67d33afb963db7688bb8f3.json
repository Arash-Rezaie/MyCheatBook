{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/arash/SanDisk/MyCheatBook/src/contents/git/git-cheats.js\";\nimport { Frame } from \"../../components/blocks\";\nimport React from \"react\";\nimport workFlow from \"../../res/images/git-work-flow.png\";\nimport { InfoIcon } from \"../../components/bubble\";\nimport { Blue, Bold, Bullet, Purple, Title1, Title2 } from \"../../components/components\";\nimport { DrawBoxHandler } from \"../../components/drawbox/draw-box-handler\";\nimport { DrawBoxComponent } from \"./git-components\";\nimport { Float } from \"../../components/float\";\nexport function GitCheats() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [getGitWorkFlow(), getVisualizeBasicCommands(), getConnectingToRemoteRepo(), getCommands()]\n  }, void 0, true);\n}\n_c = GitCheats;\n\nfunction getCommands() {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    title: 'Commands cheat',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'grid-git-sheet hidden-scroll-all',\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: \"GIT BASICS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git init \", /*#__PURE__*/_jsxDEV(Blue, {\n                children: '<directory>'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Create empty Git repo in specified directory. Run with no arguments to initialize the current directory as a git repository.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git clone \", '<repo>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Clone repo located at \", '<repo>', \" onto local machine. Original repo can be located on the local filesystem or on a remote machine via HTTP or SSH .\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git config\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 39\n              }, this), \"user.name \", '<name>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Define author name to be used for all commits in current repo. Devs commonly use --global flag to set config options for current user.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git add \", '<directory>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Stage all changes in \", '<directory>', \" for the next commit. Replace \", '<directory>', \" with a \", '<file>', \" to change a specific file.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git commit -m \\\"\", 'message', \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Commit the staged snapshot, but instead of launching a text editor, use \", '<message>', \" as the commit message.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"git status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"List which files are staged, unstaged, and untracked.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"git log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Display the entire commit history using the default format. For customization see additional options.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"git diff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Show unstaged changes between your index and working directory.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: \"GIT BRANCHES\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"git branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"List all of the branches in your repo. Add a \", '<branch>', \" argument to create a new branch with the name \", '<branch>', \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git checkout -b \", '<branch>']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Create and check out a new branch named \", '<branch>', \". Drop the -b flag to checkout an existing branch.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git merge \", '<branch>']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Merge \", '<branch>', \" into the current branch.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: \"REWRITING GIT HISTORY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"git commit --amend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Replace the last commit with the staged changes and last commit combined. Use with nothing staged to edit the last commit\\u2019s message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git rebase \", '<base>']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Rebase the current branch onto \", '<base>', \". \", '<base>', \" can be a commit ID, branch name, a tag, or a relative reference to HEAD .\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"git reflog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Show a log of changes to the local repository\\u2019s HEAD. Add --relative-date flag to show date info or --all to show all refs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: \"UNDOING CHANGES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git revert \", '<commit>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Create new commit that undoes all of the changes made in \", '<commit>', \" , then apply it to the current branch.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git reset \", '<file>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Remove \", '<file>', \" from the staging area, but leave the working directory unchanged. This unstages a file without overwriting any changes.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"git clean -n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Shows which files would be removed from working directory. Use the -f flag in place of the -n flag to execute the clean.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: \"REMOTE REPOSITORIES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git remote add \", '<name>', \" \", '<url>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Create a new connection to a remote repo. After adding a remote, you can use \", '<name>', \" as a shortcut for \", '<url>', \" in other commands.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git fetch \", '<remote>', \" \", '<branch>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Fetches a specific \", '<branch>', \" , from the repo. Leave off \", '<branch>', \" to fetch all remote refs. It does not change any workspace file.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git pull \", '<remote>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Fetch the specified remote\\u2019s copy of current branch and immediately merge it into the local copy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git push \", '<remote>', \" \", '<branch>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Push the branch to \", '<remote>', \" , along with necessary commits and objects. Creates named branch in the remote repo if it doesn\\u2019t exist.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: \"GIT CONFIG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git config --global user.name \", '<name>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Define the author name to be used for all commits by the current user.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git config --global user.email \", '<email>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Define the author email to be used for all commits by the current user.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git config --global alias. \", '<alias-name>', \" \", '<git-command>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Create shortcut for a Git command. E.g. alias.glog \\u201Clog --graph --oneline\\u201D will set \\u201Dgit glog\\u201D equivalent to \\u201Dgit log --graph --oneline.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git config --system core.editor \", '<editor>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Set text editor used by commands for all users on the machine. \", '<editor>', \" arg should be the command that launches the desired editor (e.g., vi).\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"git config --global --edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Open the global configuration file in a text editor for manual editing.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: \"GIT DIFF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"git diff HEAD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Show difference between working directory and last commit.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"git diff --cached\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Show difference between staged changes and last commit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: \"GIT RESET\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"git reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Reset staging area to match most recent commit, but leave the working directory unchanged.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"git reset --hard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Reset staging area and working directory to match most recent commit and overwrites all changes in the working directory.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git reset \", '<commit>']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Move the current branch tip backward to \", '<commit>', \" , reset the staging area to match, but leave the working directory alone.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git reset --hard \", '<commit>']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Same as previous, but resets both the staging area & working directory to match. Deletes uncommitted changes, and all commits after \", '<commit>', \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: \"GIT LOG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git log \", '<-limit>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Limit number of commits by \", '<limit>', \". E.g. \\u201Dgit log -5\\u201D will limit to 5 commits.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"git log --online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Condense each commit to a single line.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"git log p\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Display the full diff of each commit.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"git log --stat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Include which files were altered and the relative number of lines that were added or deleted from each of them.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git log --author=\\\"\", '<pattern>', \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Search for commits by a particular author.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git log --grep=\\\"\", '<pattern>', \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Search for commits with a commit message that matches \", '<pattern>', \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git log\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 36\n              }, this), \" \", '<since>..<untli>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Show commits that occur between \", '<since>', \" and \", '<until>', \". Args can be a commit ID, branch name, HEAD , or any other kind of revision reference.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"git log -- \", '<file>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Only display commits that have the specified file.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"git log --graph --decorate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"--graph flag draws a text based graph of commits on left side of commit msgs. --decorate adds names of branches or tags of commits shown.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: \"GIT REBASE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git -i \", '<base>']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Interactively rebase current branch onto \", '<base>', \". Launches editor to enter commands for how each commit will be transferred to the new base.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: \"GIT PULL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git pull --rebase \", '<remote>']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Fetch the remote\\u2019s copy of current branch and rebases it into the local copy. Uses git rebase instead of merge to integrate the branches.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: \"GIT PUSH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git push \", '<remote>', \" --force\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Forces the git push even if it results in a non-fast-forward merge. Do not use the --force flag unless you\\u2019re absolutely sure you know what you\\u2019re doing.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git push \", '<remote>', \" --all\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Push all of your local branches to the specified remote.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"git push \", '<remote>', \" --tags\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Tags aren\\u2019t automatically pushed when you push a branch or use the --all flag. The --tags flag sends all of your local tags to the remote repo.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\nfunction getGitWorkFlow() {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    title: 'Work flow',\n    children: [/*#__PURE__*/_jsxDEV(InfoIcon, {\n      children: [/*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Stash:',\n        children: \"It is a temporary memory. For example, you are in the middle of something, then something else comes up and you have to jump over it. This is where stash comes in and you can store your changes there temporarily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Workspace:',\n        children: \"The working directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Indexed:',\n        children: \"The state of being watched by git\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Local Repository:',\n        children: \"The place in which git stores snapshots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Remote Repository:',\n        children: \"This repository is on a server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 13\n    }, this), \"Git is a Version Control System (VCS) \", /*#__PURE__*/_jsxDEV(Purple, {\n      children: \"\\\"some call it Revision Control System\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 51\n    }, this), \". In fact, it is a container for files with the ability of tracking file history, so whenever you are willing to catch a specific version of a file, git is able to provide that file.\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Git does tracking by making hash-code out of any file. When file changes, the generated hash-code changes too, then git stores it and ignores unchanged files.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }, this), \"You have to command git to do what you desire, via some provided facilities such as:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 97\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '●',\n      children: [\"to make git aware of changes use \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 66\n      }, this), \" and \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"commit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 87\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '●',\n      children: [\"to access a file from git use \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '●',\n      children: [\"to combine files use \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"merge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '●',\n      children: [\"to send files to the remote repo use \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"push\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '●',\n      children: [\"to retrieve files from the remote repo use \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"pull\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 76\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '●',\n      children: [\"to sync local repo and the remote repo use \", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \"fetch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 76\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: workFlow,\n      alt: 'git workflow'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 467,\n    columnNumber: 9\n  }, this);\n}\n\nfunction getVisualizeBasicCommands() {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    title: 'Visualization of some commands',\n    children: [\"Git manages snapshots via a tree data structure. This part gives you a visualization of some events in it.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 21\n    }, this), \"You can also use a visualization tool to come over git scenarios such as\", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: 'https://learngitbranching.js.org/',\n      style: {\n        marginLeft: '3px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Blue, {\n        children: \"https://learngitbranching.js.org\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }, this), \" or\", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: 'https://git-school.github.io/visualizing-git/',\n      style: {\n        marginLeft: '3px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Blue, {\n        children: \"https://git-school.github.io/visualizing-git\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title1, {\n      children: \"Basic commands:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'flex-row',\n      children: [/*#__PURE__*/_jsxDEV(DrawBoxComponent, {\n        wh: [340, 250],\n        shapeFactory: new DrawBoxHandler().addShape({\n          shape: 'node',\n          id: 'c0',\n          label: 'c0',\n          pos: [30, 30]\n        }).addShape({\n          shape: 'node',\n          id: 'c1',\n          label: 'c1',\n          align: 'c0',\n          offset: [0, 90],\n          conn: 'c0',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l0',\n          align: 'c0',\n          offset: [80, 90],\n          len: 100,\n          label: 'git commit'\n        }).addShape({\n          shape: 'node',\n          id: 'c2',\n          label: 'c0',\n          align: 'l0',\n          offset: [90, -90]\n        }).addShape({\n          shape: 'node',\n          id: 'c3',\n          label: 'c1',\n          align: 'c2',\n          offset: [0, 90],\n          conn: 'c2'\n        }).addShape({\n          shape: 'node',\n          id: 'c4',\n          label: 'c2',\n          align: 'c3',\n          offset: [0, 90],\n          conn: 'c3',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Title2, {\n          children: \"commit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this), \" Each commit creates a node pointing to its previous one.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 102\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawBoxComponent, {\n        wh: [740, 170],\n        shapeFactory: new DrawBoxHandler().addShape({\n          shape: 'node',\n          id: 'c0',\n          label: 'c0',\n          pos: [30, 30]\n        }).addShape({\n          shape: 'node',\n          id: 'c1',\n          label: 'c1',\n          align: 'c0',\n          offset: [0, 90],\n          conn: 'c0',\n          captions: [{\n            t: 'main*',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l0',\n          align: 'c0',\n          offset: [80, 90],\n          len: 160,\n          label: 'git branch newBranch'\n        }).addShape({\n          shape: 'node',\n          id: 'c2',\n          label: 'c0',\n          align: 'l0',\n          offset: [110, -90]\n        }).addShape({\n          shape: 'node',\n          id: 'c3',\n          label: 'c1',\n          align: 'c2',\n          offset: [0, 90],\n          conn: 'c2',\n          captions: [{\n            t: 'main*',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'newBranch',\n            w: 80,\n            c: 'purple'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l1',\n          align: 'c2',\n          offset: [120, 90],\n          len: 160,\n          label: 'git checkout newBranch'\n        }).addShape({\n          shape: 'node',\n          id: 'c4',\n          label: 'c0',\n          align: 'l1',\n          offset: [110, -90]\n        }).addShape({\n          shape: 'node',\n          id: 'c5',\n          label: 'c1',\n          align: 'c4',\n          offset: [0, 90],\n          conn: 'c4',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'newBranch*',\n            w: 80,\n            c: 'purple'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Title2, {\n          children: \"branch:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }, this), \" A branch is simply a pointer to a specific commit. \", /*#__PURE__*/_jsxDEV(Blue, {\n          children: \"'HEAD' always points to the current commit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 97\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 56\n        }, this), /*#__PURE__*/_jsxDEV(Title2, {\n          children: \"checkout:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 21\n        }, this), \" switch to a specific branch with its \", /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 85\n        }, this), \" or its \", /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"hashcode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 25\n        }, this), \" (see '*' after branch name).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawBoxComponent, {\n        wh: [640, 340],\n        shapeFactory: new DrawBoxHandler().addShape({\n          shape: 'node',\n          id: 'c0',\n          label: 'c0',\n          pos: [100, 30]\n        }).addShape({\n          shape: 'node',\n          id: 'c1',\n          label: 'c1',\n          align: 'c0',\n          offset: [0, 90],\n          conn: 'c0'\n        }).addShape({\n          shape: 'node',\n          id: 'c2',\n          label: 'c2',\n          align: 'c1',\n          offset: [-70, 90],\n          conn: 'c1',\n          captions: {\n            t: 'myBranch',\n            w: 60,\n            c: 'pink'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c3',\n          label: 'c3',\n          align: 'c1',\n          offset: [70, 90],\n          conn: 'c1',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l0',\n          align: 'c3',\n          offset: [80, 0],\n          len: 130,\n          label: 'git merge myBranch'\n        }).addShape({\n          shape: 'node',\n          id: 'c4',\n          label: 'c0',\n          align: 'l0',\n          offset: [170, -180]\n        }).addShape({\n          shape: 'node',\n          id: 'c5',\n          label: 'c1',\n          align: 'c4',\n          offset: [0, 90],\n          conn: 'c4'\n        }).addShape({\n          shape: 'node',\n          id: 'c6',\n          label: 'c2',\n          align: 'c5',\n          offset: [-70, 90],\n          conn: 'c5',\n          captions: {\n            t: 'myBranch',\n            w: 60,\n            c: 'pink'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c7',\n          label: 'c3',\n          align: 'c5',\n          offset: [70, 90],\n          conn: 'c5'\n        }).addShape({\n          shape: 'node',\n          id: 'c8',\n          label: 'c4',\n          align: 'c7',\n          offset: [0, 90],\n          conn: 'c7',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'vect',\n          between: ['c8', 'c6', 5],\n          strokeStyle: [20, 10]\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Title2, {\n          children: \"merge:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 21\n        }, this), \" mix two different branches. The target branch will me mixed up with the current one.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawBoxComponent, {\n        wh: [650, 430],\n        shapeFactory: new DrawBoxHandler().addShape({\n          shape: 'node',\n          id: 'c0',\n          label: 'c0',\n          pos: [100, 30]\n        }).addShape({\n          shape: 'node',\n          id: 'c1',\n          label: 'c1',\n          align: 'c0',\n          offset: [0, 90],\n          conn: 'c0'\n        }).addShape({\n          shape: 'node',\n          id: 'c2',\n          label: 'c2',\n          align: 'c1',\n          offset: [-70, 90],\n          conn: 'c1'\n        }).addShape({\n          shape: 'node',\n          id: 'c3',\n          label: 'c3',\n          align: 'c2',\n          offset: [0, 90],\n          conn: 'c2',\n          captions: [{\n            t: 'myBranch',\n            w: 70,\n            c: 'pink'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'node',\n          id: 'c4',\n          label: 'c4',\n          align: 'c1',\n          offset: [70, 90],\n          conn: 'c1',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l0',\n          align: 'c4',\n          offset: [80, 0],\n          len: 110,\n          label: 'git rebase main'\n        }).addShape({\n          shape: 'node',\n          id: 'c5',\n          label: 'c0',\n          align: 'l0',\n          offset: [160, -180]\n        }).addShape({\n          shape: 'node',\n          id: 'c6',\n          label: 'c1',\n          align: 'c5',\n          offset: [0, 90],\n          conn: 'c5'\n        }).addShape({\n          shape: 'node',\n          id: 'c7',\n          label: 'c2',\n          align: 'c6',\n          offset: [-70, 90],\n          conn: 'c6',\n          strokeStyle: [5, 3]\n        }).addShape({\n          shape: 'node',\n          id: 'c8',\n          label: 'c3',\n          align: 'c7',\n          offset: [0, 90],\n          conn: 'c7',\n          strokeStyle: [5, 3]\n        }).addShape({\n          shape: 'node',\n          id: 'c9',\n          label: 'c4',\n          align: 'c6',\n          offset: [70, 90],\n          conn: 'c6',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }]\n        }).addShape({\n          shape: 'node',\n          id: 'c10',\n          label: 'c2՛',\n          align: 'c9',\n          offset: [0, 90],\n          conn: 'c9'\n        }).addShape({\n          shape: 'node',\n          id: 'c11',\n          label: 'c3՛',\n          align: 'c10',\n          offset: [0, 90],\n          conn: 'c10',\n          captions: [{\n            t: 'myBranch',\n            w: 70,\n            c: 'pink'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'vect',\n          between: ['c7', 'c10', 5],\n          q: ['0d', 50],\n          label: {\n            shape: 'text',\n            label: 'copy',\n            offset: [-1, 1]\n          },\n          color: 'red',\n          arrow: [1, 1]\n        }).addShape({\n          shape: 'vect',\n          between: ['c8', 'c11', 5],\n          q: ['0d', 50],\n          label: {\n            shape: 'text',\n            label: 'copy',\n            offset: [-1, 1]\n          },\n          color: 'red',\n          arrow: [1, 1]\n        }).addShape({\n          shape: 'cap',\n          id: 't0',\n          align: 'c7',\n          offset: [-100, 30],\n          width: 50,\n          height: 20,\n          label: {\n            shape: 'text',\n            label: 'still exist',\n            color: 'red'\n          }\n        }).addShape({\n          shape: 'line',\n          between: ['t0', 'c7'],\n          color: 'red'\n        }).addShape({\n          shape: 'line',\n          between: ['t0', 'c8'],\n          color: 'red'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Title2, {\n          children: \"rebase:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 21\n        }, this), \" alter current history line. It copies commits till a common history\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 113\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title1, {\n      children: \"Moving around:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'flex-row',\n      children: [/*#__PURE__*/_jsxDEV(DrawBoxComponent, {\n        wh: [860, 340],\n        shapeFactory: new DrawBoxHandler().addShape({\n          shape: 'node',\n          id: 'c0',\n          label: 'c0',\n          pos: [30, 30]\n        }).addShape({\n          shape: 'node',\n          id: 'c1',\n          label: 'c1',\n          align: 'c0',\n          offset: [0, 90],\n          conn: 'c0'\n        }).addShape({\n          shape: 'node',\n          id: 'c2',\n          label: 'c2',\n          align: 'c1',\n          offset: [0, 90],\n          conn: 'c1'\n        }).addShape({\n          shape: 'node',\n          id: 'c3',\n          label: 'c3',\n          align: 'c2',\n          offset: [0, 90],\n          conn: 'c2',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l0',\n          align: 'c1',\n          offset: [80, 50],\n          len: 130,\n          label: 'git checkout main^'\n        }).addShape({\n          shape: 'node',\n          id: 'c4',\n          label: 'c0',\n          align: 'l0',\n          offset: [100, -140]\n        }).addShape({\n          shape: 'node',\n          id: 'c5',\n          label: 'c1',\n          align: 'c4',\n          offset: [0, 90],\n          conn: 'c4'\n        }).addShape({\n          shape: 'node',\n          id: 'c6',\n          label: 'c2',\n          align: 'c5',\n          offset: [0, 90],\n          conn: 'c5',\n          captions: {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c7',\n          label: 'c3',\n          align: 'c6',\n          offset: [0, 90],\n          conn: 'c6',\n          captions: {\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }\n        }).addShape({\n          shape: 'hvect',\n          id: 'l1',\n          align: 'c5',\n          offset: [80, 50],\n          len: 130,\n          label: 'git checkout HEAD^'\n        }).addShape({\n          shape: 'node',\n          id: 'c8',\n          label: 'c0',\n          align: 'l1',\n          offset: [110, -140]\n        }).addShape({\n          shape: 'node',\n          id: 'c9',\n          label: 'c1',\n          align: 'c8',\n          offset: [0, 90],\n          conn: 'c8',\n          captions: {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c10',\n          label: 'c2',\n          align: 'c9',\n          offset: [0, 90],\n          conn: 'c9'\n        }).addShape({\n          shape: 'node',\n          id: 'c11',\n          label: 'c3',\n          align: 'c10',\n          offset: [0, 90],\n          conn: 'c10',\n          captions: {\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }\n        }).addShape({\n          shape: 'hvect',\n          id: 'l2',\n          align: 'c9',\n          offset: [80, 50],\n          len: 130,\n          label: 'git checkout main~3'\n        }).addShape({\n          shape: 'node',\n          id: 'c12',\n          label: 'c0',\n          align: 'l2',\n          offset: [100, -140],\n          captions: {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c13',\n          label: 'c1',\n          align: 'c12',\n          offset: [0, 90],\n          conn: 'c12'\n        }).addShape({\n          shape: 'node',\n          id: 'c14',\n          label: 'c2',\n          align: 'c13',\n          offset: [0, 90],\n          conn: 'c13'\n        }).addShape({\n          shape: 'node',\n          id: 'c15',\n          label: 'c3',\n          align: 'c14',\n          offset: [0, 90],\n          conn: 'c14',\n          captions: {\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Title2, {\n          children: \"relative movement:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 21\n        }, this), \"Relative commits are powerful, but we will introduce two simple ones here:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 95\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 100\n        }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n          title: '1.',\n          children: [\"Moving upwards one commit at a time with \", '^']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n          title: '2.',\n          children: [\"Moving upwards a number of times with \", '~<num>']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawBoxComponent, {\n        wh: [400, 250],\n        shapeFactory: new DrawBoxHandler().addShape({\n          shape: 'node',\n          id: 'c0',\n          label: 'c0',\n          pos: [30, 30]\n        }).addShape({\n          shape: 'node',\n          id: 'c1',\n          label: 'c1',\n          align: 'c0',\n          offset: [0, 90],\n          conn: 'c0'\n        }).addShape({\n          shape: 'node',\n          id: 'c2',\n          label: 'c2',\n          align: 'c1',\n          offset: [0, 90],\n          conn: 'c1',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l0',\n          align: 'c1',\n          offset: [80, 0],\n          len: 160,\n          label: 'git branch -f main HEAD~2'\n        }).addShape({\n          shape: 'node',\n          id: 'c3',\n          label: 'c0',\n          align: 'l0',\n          offset: [120, -90],\n          captions: {\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c4',\n          label: 'c1',\n          align: 'c3',\n          offset: [0, 90],\n          conn: 'c3'\n        }).addShape({\n          shape: 'node',\n          id: 'c5',\n          label: 'c2',\n          align: 'c4',\n          offset: [0, 90],\n          conn: 'c4',\n          captions: {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Title2, {\n          children: \"reassign a branch to a commit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 68\n        }, this), \" git branch -f main HEAD~2\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 99\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawBoxComponent, {\n        wh: [880, 430],\n        shapeFactory: new DrawBoxHandler().addShape({\n          shape: 'node',\n          id: 'c0',\n          label: 'c0',\n          pos: [30, 30]\n        }).addShape({\n          shape: 'node',\n          id: 'c1',\n          label: 'c1',\n          align: 'c0',\n          offset: [0, 90],\n          conn: 'c0'\n        }).addShape({\n          shape: 'node',\n          id: 'c2',\n          label: 'c2',\n          align: 'c1',\n          offset: [0, 90],\n          conn: 'c1',\n          captions: {\n            t: 'bug',\n            w: 30,\n            c: 'blue'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c3',\n          label: 'c3',\n          align: 'c2',\n          offset: [0, 90],\n          conn: 'c2',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l0',\n          align: 'c1',\n          offset: [80, 50],\n          len: 160,\n          label: 'git reset bug^'\n        }).addShape({\n          shape: 'node',\n          id: 'c4',\n          label: 'c0',\n          align: 'l0',\n          offset: [120, -140]\n        }).addShape({\n          shape: 'node',\n          id: 'c5',\n          label: 'c1',\n          align: 'c4',\n          offset: [0, 90],\n          conn: 'c4',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'node',\n          id: 'c6',\n          label: 'c2',\n          align: 'c5',\n          offset: [0, 90],\n          conn: 'c5',\n          captions: {\n            t: 'bug',\n            w: 30,\n            c: 'blue'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c7',\n          label: 'c3',\n          align: 'c6',\n          offset: [0, 90],\n          conn: 'c6',\n          strokeStyle: [5, 9]\n        }).addShape({\n          shape: 'node',\n          id: 'c8',\n          label: 'c0',\n          align: 'c4',\n          offset: [200, 0]\n        }).addShape({\n          shape: 'node',\n          id: 'c9',\n          label: 'c1',\n          align: 'c8',\n          offset: [0, 90],\n          conn: 'c8'\n        }).addShape({\n          shape: 'node',\n          id: 'c10',\n          label: 'c2',\n          align: 'c9',\n          offset: [0, 90],\n          conn: 'c9',\n          captions: {\n            t: 'bug',\n            w: 30,\n            c: 'blue'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c11',\n          label: 'c3',\n          align: 'c10',\n          offset: [0, 90],\n          conn: 'c10',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l1',\n          align: 'c9',\n          offset: [80, 50],\n          len: 160,\n          label: 'git revert bug^'\n        }).addShape({\n          shape: 'node',\n          id: 'c12',\n          label: 'c0',\n          align: 'l1',\n          offset: [120, -140]\n        }).addShape({\n          shape: 'node',\n          id: 'c13',\n          label: 'c1',\n          align: 'c12',\n          offset: [0, 90],\n          conn: 'c12'\n        }).addShape({\n          shape: 'node',\n          id: 'c14',\n          label: 'c2',\n          align: 'c13',\n          offset: [0, 90],\n          conn: 'c13',\n          captions: {\n            t: 'bug',\n            w: 30,\n            c: 'blue'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c15',\n          label: 'c3',\n          align: 'c14',\n          offset: [0, 90],\n          conn: 'c14'\n        }).addShape({\n          shape: 'node',\n          id: 'c16',\n          label: 'c1՛',\n          align: 'c15',\n          offset: [0, 90],\n          conn: 'c15',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'vline',\n          align: 'c4',\n          offset: [140, -20],\n          len: 400,\n          strokeColor: 'red'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Title2, {\n          children: \"reverse a branch:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 21\n        }, this), \" go back in history is done by \", /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 24\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"revert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 47\n        }, this), \", reset alters current branch to a one in history while revert copies the history in front. On remote repository, reset may break others plan.\", /*#__PURE__*/_jsxDEV(Float, {\n          l: 130,\n          t: 320,\n          lineTo: [287, 335],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '120px'\n            },\n            children: \"just like if C7 had never happened\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Float, {\n          l: 230,\n          t: 380,\n          lineTo: [325, 349],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '200px'\n            },\n            children: [\"What if others are using commit?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 87\n            }, this), \"That's why 'reset' doesn't work on remote repository.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Float, {\n          l: 650,\n          t: 380,\n          lineTo: [775, 405],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '80px'\n            },\n            children: \"copy of c1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title1, {\n      children: \"Next level:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'flex-row',\n      children: [/*#__PURE__*/_jsxDEV(DrawBoxComponent, {\n        wh: [650, 430],\n        shapeFactory: new DrawBoxHandler().addShape({\n          shape: 'node',\n          id: 'c0',\n          label: 'c0',\n          pos: [100, 30]\n        }).addShape({\n          shape: 'node',\n          id: 'c1',\n          label: 'c1',\n          align: 'c0',\n          offset: [0, 90],\n          conn: 'c0'\n        }).addShape({\n          shape: 'node',\n          id: 'c2',\n          label: 'c2',\n          align: 'c1',\n          offset: [-70, 90],\n          conn: 'c1'\n        }).addShape({\n          shape: 'node',\n          id: 'c3',\n          label: 'c3',\n          align: 'c2',\n          offset: [0, 90],\n          conn: 'c2'\n        }).addShape({\n          shape: 'node',\n          id: 'c4',\n          label: 'c4',\n          align: 'c3',\n          offset: [0, 90],\n          conn: 'c3',\n          captions: {\n            t: 'bug',\n            w: 40,\n            c: 'pink'\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c5',\n          label: 'c5',\n          align: 'c1',\n          offset: [70, 90],\n          conn: 'c1',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'hvect',\n          id: 'l0',\n          align: 'c5',\n          offset: [80, 0],\n          len: 140,\n          label: 'git cherry-pick c2 c4'\n        }).addShape({\n          shape: 'node',\n          id: 'c6',\n          label: 'c0',\n          align: 'l0',\n          offset: [170, -180]\n        }).addShape({\n          shape: 'node',\n          id: 'c7',\n          label: 'c1',\n          align: 'c6',\n          offset: [0, 90],\n          conn: 'c6'\n        }).addShape({\n          shape: 'node',\n          id: 'c8',\n          label: 'c2',\n          align: 'c7',\n          offset: [-70, 90],\n          conn: 'c7'\n        }).addShape({\n          shape: 'node',\n          id: 'c9',\n          label: 'c3',\n          align: 'c8',\n          offset: [0, 90],\n          conn: 'c8'\n        }).addShape({\n          shape: 'node',\n          id: 'c10',\n          label: 'c4',\n          align: 'c9',\n          offset: [0, 90],\n          conn: 'c9',\n          captions: {\n            t: 'bug',\n            w: 40,\n            c: 'pink',\n            offset: [-70, -10]\n          }\n        }).addShape({\n          shape: 'node',\n          id: 'c11',\n          label: 'c5',\n          align: 'c7',\n          offset: [70, 90],\n          conn: 'c7'\n        }).addShape({\n          shape: 'node',\n          id: 'c12',\n          label: 'c2՛',\n          align: 'c11',\n          offset: [0, 90],\n          conn: 'c11'\n        }).addShape({\n          shape: 'node',\n          id: 'c13',\n          label: 'c4՛',\n          align: 'c12',\n          offset: [0, 90],\n          conn: 'c12',\n          captions: [{\n            t: 'main',\n            w: 40,\n            c: 'orange'\n          }, {\n            t: 'HEAD',\n            w: 40,\n            c: 'green'\n          }]\n        }).addShape({\n          shape: 'vect',\n          between: ['c8', 'c12', 5],\n          arrow: [1, 1],\n          color: 'red',\n          label: {\n            shape: 'text',\n            offset: [6, -6],\n            label: 'copy'\n          }\n        }).addShape({\n          shape: 'vect',\n          between: ['c10', 'c13', 5],\n          arrow: [1, 1],\n          color: 'red',\n          label: {\n            shape: 'text',\n            offset: [0, -5],\n            label: 'copy'\n          }\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Title2, {\n          children: \"cherry-pick: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 21\n        }, this), \"use \", 'cherry-pick <commit1> <commit2> <...>', \" to copy a bunch of commits under HEAD without their history.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title2, {\n          children: \"interactive rebase (reordering, emitting, ... commits): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 94\n        }, this), \"this is done by '-i'. for example: git \", /*#__PURE__*/_jsxDEV(Blue, {\n          children: \"rebase -i HEAD~4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 89\n        }, this), \"this command shows all information about 4 commit before HEAD in a file and you can edit this file by the help of prompted guid as you wish, then, boooooom, all of changes will be applied at once.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 499,\n    columnNumber: 9\n  }, this);\n}\n\nfunction getConnectingToRemoteRepo() {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    title: 'Connecting to remote repository',\n    children: [\"After adding a remote repository by git remote add \", '<url>', \", you have to provide a username and password. Some ways are available:\", /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '1.',\n      children: \"Just let git asks you. If username and password are required git will ask you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '2.',\n      children: [\"Mention username & password inline:\", /*#__PURE__*/_jsxDEV(Bold, {\n        children: \" git clone https://username:password@github.com/username/repository.git\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '3.',\n      children: [\"Use global configurations, so they will be available in all git transactions (\", /*#__PURE__*/_jsxDEV(Purple, {\n        children: \"global key work make configuration globally. You can emmit it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 17\n      }, this), \"):\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 98\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: '●',\n        level: 1,\n        children: /*#__PURE__*/_jsxDEV(Bold, {\n          children: [\"git config --global user.name \\\"Your Name\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 66\n          }, this), \"git config --global user.email \\\"youremail@yourdomain.com\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: '●',\n        level: 1,\n        children: [\"to test it: \", /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"git config --list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '4.',\n      children: [\"Connect through ssh session. This way involve a pair of private & public key:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 111\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Ⅰ. check key existence:',\n        level: 1,\n        children: [/*#__PURE__*/_jsxDEV(Bold, {\n          children: \"ls -al ~/.ssh\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 69\n        }, this), \". If you want to use the generated file, ignore generating new one\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Ⅱ. generate new key:',\n        level: 1,\n        children: [\"the following commands create a ssh-key file. By default it will be stored in home directory. ex. \\\"~/.ssh/id_ed25519.pub\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 93\n        }, this), /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"ssh-keygen -t ed25519 -C \\\"your_email@example.com\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 21\n        }, this), \" or\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 86\n        }, this), /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"ssh-keygen -t rsa -b 4096 -C \\\"your_email@example.com\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: '● ssh key file location:',\n        level: 2,\n        children: \"you can choose a location for ssh key file \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: '● passphrase:',\n        level: 2,\n        children: \"if someone reaches your computer, then the connection is no more secure, so you can define a password for accessing the connection at this level. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Ⅲ. add ssh-key to the ssh-agent:',\n        level: 1,\n        children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: '● start ssh-agent: ',\n        level: 2,\n        children: /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"eval \\\"$(ssh-agent -s)\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: '● add ssh-key to ssh-agent: ',\n        level: 2,\n        children: /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"ssh-add ~/.ssh/generated-ssh-key-file-name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Ⅳ. identify the ssh-key to your server repo: ',\n        level: 1,\n        children: \"in Github, copy your ssh-key into \\\"your profile > settings > SSH and GPG keys\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n        title: 'Ⅴ. test the ssh conn: ',\n        level: 1,\n        children: /*#__PURE__*/_jsxDEV(Bold, {\n          children: \"ssh -T git@github.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 900,\n    columnNumber: 9\n  }, this);\n} // function get() {\n//     return (\n//         <Frame title={''}></Frame>\n//     )\n// }\n\n\nvar _c;\n\n$RefreshReg$(_c, \"GitCheats\");","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/contents/git/git-cheats.js"],"names":["Frame","React","workFlow","InfoIcon","Blue","Bold","Bullet","Purple","Title1","Title2","DrawBoxHandler","DrawBoxComponent","Float","GitCheats","getGitWorkFlow","getVisualizeBasicCommands","getConnectingToRemoteRepo","getCommands","marginLeft","addShape","shape","id","label","pos","align","offset","conn","captions","t","w","c","len","between","strokeStyle","q","color","arrow","width","height","strokeColor"],"mappings":"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","sourcesContent":["import {Frame} from \"../../components/blocks\";\nimport React from \"react\";\nimport workFlow from \"../../res/images/git-work-flow.png\";\nimport {InfoIcon} from \"../../components/bubble\";\nimport {Blue, Bold, Bullet, Purple, Title1, Title2} from \"../../components/components\";\nimport {DrawBoxHandler} from \"../../components/drawbox/draw-box-handler\";\nimport {DrawBoxComponent} from \"./git-components\";\nimport {Float} from \"../../components/float\";\n\nexport function GitCheats() {\n    return (\n        <>\n            {getGitWorkFlow()}\n            {getVisualizeBasicCommands()}\n            {getConnectingToRemoteRepo()}\n            {getCommands()}\n            {/*{get()}*/}\n        </>\n    )\n}\n\nfunction getCommands() {\n    return (\n        <Frame title={'Commands cheat'}>\n            <div className={'grid-git-sheet hidden-scroll-all'}>\n                <table>\n                    <thead>\n                    <tr>\n                        <td colSpan={2}>GIT BASICS</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>git init <Blue>{'<directory>'}</Blue></td>\n                        <td>\n                            Create empty Git repo in specified directory. Run with no arguments to initialize the\n                            current directory as a git repository.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git clone {'<repo>'}</td>\n                        <td>\n                            Clone repo located at {'<repo>'} onto local machine. Original repo can be located on the\n                            local filesystem or on a remote machine via HTTP or SSH .\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git config<br/>user.name {'<name>'}</td>\n                        <td>\n                            Define author name to be used for all commits in current repo. Devs commonly use --global\n                            flag to set config options for current user.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git add {'<directory>'}</td>\n                        <td>\n                            Stage all changes in {'<directory>'} for the next commit. Replace {'<directory>'} with\n                            a {'<file>'} to change a specific file.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git commit -m \"{'message'}\"</td>\n                        <td>\n                            Commit the staged snapshot, but instead of launching a text editor, use {'<message>'} as the\n                            commit message.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git status</td>\n                        <td>\n                            List which files are staged, unstaged, and untracked.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git log</td>\n                        <td>\n                            Display the entire commit history using the default format. For customization see additional\n                            options.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git diff</td>\n                        <td>\n                            Show unstaged changes between your index and working directory.\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                {/*--------------------------------------------------*/}\n                <div>\n                    <table>\n                        <thead>\n                        <tr>\n                            <td colSpan={2}>GIT BRANCHES</td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>git branch</td>\n                            <td>\n                                List all of the branches in your repo. Add a {'<branch>'} argument to create a new\n                                branch\n                                with the name {'<branch>'}.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git checkout -b {'<branch>'}</td>\n                            <td>\n                                Create and check out a new branch named {'<branch>'}. Drop the -b flag to checkout an\n                                existing branch.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git merge {'<branch>'}</td>\n                            <td>\n                                Merge {'<branch>'} into the current branch.\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table>\n                        <thead>\n                        <tr>\n                            <td colSpan={2}>REWRITING GIT HISTORY</td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>git commit --amend</td>\n                            <td>\n                                Replace the last commit with the staged changes and last commit combined. Use with\n                                nothing\n                                staged to edit the last commit’s message.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git rebase {'<base>'}</td>\n                            <td>\n                                Rebase the current branch onto {'<base>'}. {'<base>'} can be a commit ID, branch name, a\n                                tag, or a relative reference to HEAD .\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git reflog</td>\n                            <td>\n                                Show a log of changes to the local repository’s HEAD. Add --relative-date flag to show\n                                date\n                                info or --all to show all refs.\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n                {/*--------------------------------------------------*/}\n                <table>\n                    <thead>\n                    <tr>\n                        <td colSpan={2}>UNDOING CHANGES</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>git revert {'<commit>'}</td>\n                        <td>\n                            Create new commit that undoes all of the changes made in {'<commit>'} , then apply it to\n                            the\n                            current branch.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git reset {'<file>'}</td>\n                        <td>\n                            Remove {'<file>'} from the staging area, but leave the working directory unchanged. This\n                            unstages a file without overwriting any changes.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git clean -n</td>\n                        <td>\n                            Shows which files would be removed from working directory. Use the -f flag in place of\n                            the\n                            -n flag to execute the clean.\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <table>\n                    <thead>\n                    <tr>\n                        <td colSpan={2}>REMOTE REPOSITORIES</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>git remote add {'<name>'} {'<url>'}</td>\n                        <td>\n                            Create a new connection to a remote repo. After adding a remote, you can use {'<name>'} as a\n                            shortcut for {'<url>'} in other commands.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git fetch {'<remote>'} {'<branch>'}</td>\n                        <td>\n                            Fetches a specific {'<branch>'} , from the repo. Leave off {'<branch>'} to fetch all remote\n                            refs. It does not change any workspace file.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git pull {'<remote>'}</td>\n                        <td>\n                            Fetch the specified remote’s copy of current branch and immediately merge it into the local\n                            copy.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git push {'<remote>'} {'<branch>'}</td>\n                        <td>\n                            Push the branch to {'<remote>'} , along with necessary commits and objects. Creates named\n                            branch in the remote repo if it doesn’t exist.\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                {/*--------------------------------------------------*/}\n                <table>\n                    <thead>\n                    <tr>\n                        <td colSpan={2}>GIT CONFIG</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>git config --global user.name {'<name>'}</td>\n                        <td>\n                            Define the author name to be used for all commits by the current user.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git config --global user.email {'<email>'}</td>\n                        <td>\n                            Define the author email to be used for all commits by the current user.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git config --global alias. {'<alias-name>'} {'<git-command>'}</td>\n                        <td>\n                            Create shortcut for a Git command. E.g. alias.glog “log --graph --oneline” will set ”git\n                            glog” equivalent to ”git log --graph --oneline.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git config --system core.editor {'<editor>'}</td>\n                        <td>\n                            Set text editor used by commands for all users on the machine. {'<editor>'} arg should be\n                            the command that launches the desired editor (e.g., vi).\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git config --global --edit</td>\n                        <td>\n                            Open the global configuration file in a text editor for manual editing.\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <div>\n                    <table>\n                        <thead>\n                        <tr>\n                            <td colSpan={2}>GIT DIFF</td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>git diff HEAD</td>\n                            <td>\n                                Show difference between working directory and last commit.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git diff --cached</td>\n                            <td>\n                                Show difference between staged changes and last commit\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table>\n                        <thead>\n                        <tr>\n                            <td colSpan={2}>GIT RESET</td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>git reset</td>\n                            <td>\n                                Reset staging area to match most recent commit, but leave the working directory\n                                unchanged.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git reset --hard</td>\n                            <td>\n                                Reset staging area and working directory to match most recent commit and overwrites all\n                                changes in the working directory.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git reset {'<commit>'}</td>\n                            <td>\n                                Move the current branch tip backward to {'<commit>'} , reset the staging area to match,\n                                but\n                                leave the working directory alone.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git reset --hard {'<commit>'}</td>\n                            <td>\n                                Same as previous, but resets both the staging area & working directory to match. Deletes\n                                uncommitted changes, and all commits after {'<commit>'}.\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n                {/*--------------------------------------------------*/}\n                <table>\n                    <thead>\n                    <tr>\n                        <td colSpan={2}>GIT LOG</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>git log {'<-limit>'}</td>\n                        <td>\n                            Limit number of commits by {'<limit>'}. E.g. ”git log -5” will limit to 5 commits.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git log --online</td>\n                        <td>\n                            Condense each commit to a single line.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git log p</td>\n                        <td>\n                            Display the full diff of each commit.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git log --stat</td>\n                        <td>\n                            Include which files were altered and the relative number of lines that were added or deleted\n                            from each of them.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git log --author=\"{'<pattern>'}\"</td>\n                        <td>\n                            Search for commits by a particular author.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git log --grep=\"{'<pattern>'}\"</td>\n                        <td>\n                            Search for commits with a commit message that matches {'<pattern>'}.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git log<br/> {'<since>..<untli>'}</td>\n                        <td>\n                            Show commits that occur between {'<since>'} and {'<until>'}. Args can be a commit ID, branch\n                            name, HEAD , or any other kind of revision reference.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git log -- {'<file>'}</td>\n                        <td>\n                            Only display commits that have the specified file.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>git log --graph --decorate</td>\n                        <td>\n                            --graph flag draws a text based graph of commits on left side of commit msgs. --decorate\n                            adds names of branches or tags of commits shown.\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <div>\n                    <table>\n                        <thead>\n                        <tr>\n                            <td colSpan={2}>GIT REBASE</td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>git -i {'<base>'}</td>\n                            <td>\n                                Interactively rebase current branch onto {'<base>'}. Launches editor to enter commands\n                                for\n                                how each commit will be transferred to the new base.\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table>\n                        <thead>\n                        <tr>\n                            <td colSpan={2}>GIT PULL</td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>git pull --rebase {'<remote>'}</td>\n                            <td>\n                                Fetch the remote’s copy of current branch and rebases it into the local copy. Uses git\n                                rebase instead of merge to integrate the branches.\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table>\n                        <thead>\n                        <tr>\n                            <td colSpan={2}>GIT PUSH</td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>git push {'<remote>'} --force</td>\n                            <td>\n                                Forces the git push even if it results in a non-fast-forward merge. Do not use the\n                                --force\n                                flag unless you’re absolutely sure you know what you’re doing.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git push {'<remote>'} --all</td>\n                            <td>\n                                Push all of your local branches to the specified remote.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>git push {'<remote>'} --tags</td>\n                            <td>\n                                Tags aren’t automatically pushed when you push a branch or use the --all flag. The\n                                --tags\n                                flag sends all of your local tags to the remote repo.\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Frame>\n    )\n}\n\nfunction getGitWorkFlow() {\n    return (\n        <Frame title={'Work flow'}>\n            <InfoIcon>\n                <Bullet title={'Stash:'}>It is a temporary memory. For example, you are in the middle of something, then\n                    something else comes up and you have to jump over it. This is where stash comes in and you can store\n                    your changes there temporarily</Bullet>\n                <Bullet title={'Workspace:'}>The working directory</Bullet>\n                <Bullet title={'Indexed:'}>The state of being watched by git</Bullet>\n                <Bullet title={'Local Repository:'}>The place in which git stores snapshots</Bullet>\n                <Bullet title={'Remote Repository:'}>This repository is on a server</Bullet>\n            </InfoIcon>\n            Git is a Version Control System (VCS) <Purple>\"some call it Revision Control System\"</Purple>. In fact, it\n            is a container for files with the ability of tracking file history, so whenever you are willing to catch a\n            specific version of a file, git is able to provide that file.\n            <p>\n                Git does tracking by making hash-code out of any file. When file changes, the generated hash-code\n                changes too, then git stores it and ignores unchanged files.\n            </p>\n            You have to command git to do what you desire, via some provided facilities such as:<br/>\n            <Bullet title={'●'}>to make git aware of changes use <Bold>add</Bold> and <Bold>commit</Bold></Bullet>\n            <Bullet title={'●'}>to access a file from git use <Bold>checkout</Bold></Bullet>\n            <Bullet title={'●'}>to combine files use <Bold>merge</Bold></Bullet>\n            <Bullet title={'●'}>to send files to the remote repo use <Bold>push</Bold></Bullet>\n            <Bullet title={'●'}>to retrieve files from the remote repo use <Bold>pull</Bold></Bullet>\n            <Bullet title={'●'}>to sync local repo and the remote repo use <Bold>fetch</Bold></Bullet>\n            <br/><br/>\n            <img src={workFlow} alt={'git workflow'}/>\n        </Frame>\n    )\n}\n\nfunction getVisualizeBasicCommands() {\n    return (\n        <Frame title={'Visualization of some commands'}>\n            Git manages snapshots via a tree data structure. This part gives you a visualization of some events in\n            it.<br/><br/>\n            You can also use a visualization tool to come over git scenarios such as\n            <a href={'https://learngitbranching.js.org/'}\n               style={{marginLeft: '3px'}}><Blue>https://learngitbranching.js.org</Blue></a> or\n            <a href={'https://git-school.github.io/visualizing-git/'}\n               style={{marginLeft: '3px'}}><Blue>https://git-school.github.io/visualizing-git</Blue></a>\n            <Title1>Basic commands:</Title1>\n            <div className={'flex-row'}>\n                <DrawBoxComponent wh={[340, 250]} shapeFactory=\n                    {\n                        new DrawBoxHandler()\n                            .addShape({shape: 'node', id: 'c0', label: 'c0', pos: [30, 30]})\n                            .addShape({\n                                shape: 'node', id: 'c1', label: 'c1', align: 'c0', offset: [0, 90], conn: 'c0',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l0', align: 'c0', offset: [80, 90], len: 100,\n                                label: 'git commit'\n                            })\n                            .addShape({shape: 'node', id: 'c2', label: 'c0', align: 'l0', offset: [90, -90]})\n                            .addShape({\n                                shape: 'node', id: 'c3', label: 'c1', align: 'c2', offset: [0, 90], conn: 'c2',\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c4', label: 'c2', align: 'c3', offset: [0, 90], conn: 'c3',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                    }>\n                    <Title2>commit:</Title2> Each commit creates a node pointing to its previous one.<br/>\n                </DrawBoxComponent>\n                <DrawBoxComponent wh={[740, 170]} shapeFactory=\n                    {\n                        new DrawBoxHandler()\n                            .addShape({shape: 'node', id: 'c0', label: 'c0', pos: [30, 30]})\n                            .addShape({\n                                shape: 'node', id: 'c1', label: 'c1', align: 'c0', offset: [0, 90], conn: 'c0',\n                                captions: [{t: 'main*', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l0', align: 'c0', offset: [80, 90], len: 160,\n                                label: 'git branch newBranch'\n                            })\n                            .addShape({shape: 'node', id: 'c2', label: 'c0', align: 'l0', offset: [110, -90]})\n                            .addShape({\n                                shape: 'node', id: 'c3', label: 'c1', align: 'c2', offset: [0, 90], conn: 'c2',\n                                captions: [{t: 'main*', w: 40, c: 'orange'}, {t: 'newBranch', w: 80, c: 'purple'},\n                                    {t: 'HEAD', w: 40, c: 'green'},]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l1', align: 'c2', offset: [120, 90], len: 160,\n                                label: 'git checkout newBranch'\n                            })\n                            .addShape({shape: 'node', id: 'c4', label: 'c0', align: 'l1', offset: [110, -90]})\n                            .addShape({\n                                shape: 'node', id: 'c5', label: 'c1', align: 'c4', offset: [0, 90], conn: 'c4',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'newBranch*', w: 80, c: 'purple'},\n                                    {t: 'HEAD', w: 40, c: 'green'},]\n                            })\n                    }>\n                    <Title2>branch:</Title2> A branch is simply a pointer to a specific commit. <Blue>'HEAD' always\n                    points to the current commit</Blue><br/>\n                    <Title2>checkout:</Title2> switch to a specific branch with its <Bold>name</Bold> or\n                    its <Bold>hashcode</Bold> (see '*' after branch name).<br/>\n                </DrawBoxComponent>\n                <DrawBoxComponent wh={[640, 340]} shapeFactory=\n                    {\n                        new DrawBoxHandler()\n                            .addShape({shape: 'node', id: 'c0', label: 'c0', pos: [100, 30]})\n                            .addShape({shape: 'node', id: 'c1', label: 'c1', align: 'c0', offset: [0, 90], conn: 'c0'})\n                            .addShape({\n                                shape: 'node', id: 'c2', label: 'c2', align: 'c1', offset: [-70, 90], conn: 'c1',\n                                captions: {t: 'myBranch', w: 60, c: 'pink'}\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c3', label: 'c3', align: 'c1', offset: [70, 90], conn: 'c1',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l0', align: 'c3', offset: [80, 0], len: 130,\n                                label: 'git merge myBranch'\n                            })\n                            .addShape({shape: 'node', id: 'c4', label: 'c0', align: 'l0', offset: [170, -180]})\n                            .addShape({shape: 'node', id: 'c5', label: 'c1', align: 'c4', offset: [0, 90], conn: 'c4'})\n                            .addShape({\n                                shape: 'node', id: 'c6', label: 'c2', align: 'c5', offset: [-70, 90], conn: 'c5',\n                                captions: {t: 'myBranch', w: 60, c: 'pink'}\n                            })\n                            .addShape({shape: 'node', id: 'c7', label: 'c3', align: 'c5', offset: [70, 90], conn: 'c5'})\n                            .addShape({\n                                shape: 'node', id: 'c8', label: 'c4', align: 'c7', offset: [0, 90], conn: 'c7',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({shape: 'vect', between: ['c8', 'c6', 5], strokeStyle: [20, 10]})\n                    }>\n                    <Title2>merge:</Title2> mix two different branches. The target branch will me mixed up with the\n                    current one.<br/>\n                </DrawBoxComponent>\n                <DrawBoxComponent wh={[650, 430]} shapeFactory=\n                    {\n                        new DrawBoxHandler()\n                            .addShape({shape: 'node', id: 'c0', label: 'c0', pos: [100, 30]})\n                            .addShape({shape: 'node', id: 'c1', label: 'c1', align: 'c0', offset: [0, 90], conn: 'c0'})\n                            .addShape({\n                                shape: 'node', id: 'c2', label: 'c2', align: 'c1', offset: [-70, 90], conn: 'c1',\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c3', label: 'c3', align: 'c2', offset: [0, 90], conn: 'c2',\n                                captions: [{t: 'myBranch', w: 70, c: 'pink'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c4', label: 'c4', align: 'c1', offset: [70, 90], conn: 'c1',\n                                captions: [{t: 'main', w: 40, c: 'orange'}]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l0', align: 'c4', offset: [80, 0], len: 110,\n                                label: 'git rebase main'\n                            })\n                            .addShape({shape: 'node', id: 'c5', label: 'c0', align: 'l0', offset: [160, -180]})\n                            .addShape({shape: 'node', id: 'c6', label: 'c1', align: 'c5', offset: [0, 90], conn: 'c5'})\n                            .addShape({\n                                shape: 'node', id: 'c7', label: 'c2', align: 'c6', offset: [-70, 90], conn: 'c6',\n                                strokeStyle: [5, 3]\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c8', label: 'c3', align: 'c7', offset: [0, 90], conn: 'c7',\n                                strokeStyle: [5, 3]\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c9', label: 'c4', align: 'c6', offset: [70, 90], conn: 'c6',\n                                captions: [{t: 'main', w: 40, c: 'orange'}]\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c10', label: 'c2՛', align: 'c9', offset: [0, 90], conn: 'c9',\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c11', label: 'c3՛', align: 'c10', offset: [0, 90], conn: 'c10',\n                                captions: [{t: 'myBranch', w: 70, c: 'pink'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'vect', between: ['c7', 'c10', 5], q: ['0d', 50],\n                                label: {shape: 'text', label: 'copy', offset: [-1, 1]}, color: 'red', arrow: [1, 1]\n                            })\n                            .addShape({\n                                shape: 'vect', between: ['c8', 'c11', 5], q: ['0d', 50],\n                                label: {shape: 'text', label: 'copy', offset: [-1, 1]}, color: 'red', arrow: [1, 1]\n                            })\n                            .addShape({\n                                shape: 'cap', id: 't0', align: 'c7', offset: [-100, 30], width: 50, height: 20,\n                                label: {shape: 'text', label: 'still exist', color: 'red'}\n                            })\n                            .addShape({shape: 'line', between: ['t0', 'c7'], color: 'red'})\n                            .addShape({shape: 'line', between: ['t0', 'c8'], color: 'red'})\n                    }>\n                    <Title2>rebase:</Title2> alter current history line. It copies commits till a common history<br/>\n                </DrawBoxComponent>\n            </div>\n            <Title1>Moving around:</Title1>\n            <div className={'flex-row'}>\n                <DrawBoxComponent wh={[860, 340]} shapeFactory=\n                    {\n                        new DrawBoxHandler()\n                            .addShape({shape: 'node', id: 'c0', label: 'c0', pos: [30, 30]})\n                            .addShape({shape: 'node', id: 'c1', label: 'c1', align: 'c0', offset: [0, 90], conn: 'c0'})\n                            .addShape({shape: 'node', id: 'c2', label: 'c2', align: 'c1', offset: [0, 90], conn: 'c1'})\n                            .addShape({\n                                shape: 'node', id: 'c3', label: 'c3', align: 'c2', offset: [0, 90], conn: 'c2',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l0', align: 'c1', offset: [80, 50], len: 130,\n                                label: 'git checkout main^'\n                            })\n                            .addShape({shape: 'node', id: 'c4', label: 'c0', align: 'l0', offset: [100, -140]})\n                            .addShape({shape: 'node', id: 'c5', label: 'c1', align: 'c4', offset: [0, 90], conn: 'c4'})\n                            .addShape({\n                                shape: 'node', id: 'c6', label: 'c2', align: 'c5', offset: [0, 90], conn: 'c5',\n                                captions: {t: 'HEAD', w: 40, c: 'green'}\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c7', label: 'c3', align: 'c6', offset: [0, 90], conn: 'c6',\n                                captions: {t: 'main', w: 40, c: 'orange'}\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l1', align: 'c5', offset: [80, 50], len: 130,\n                                label: 'git checkout HEAD^'\n                            })\n                            .addShape({shape: 'node', id: 'c8', label: 'c0', align: 'l1', offset: [110, -140]})\n                            .addShape({\n                                shape: 'node', id: 'c9', label: 'c1', align: 'c8', offset: [0, 90], conn: 'c8',\n                                captions: {t: 'HEAD', w: 40, c: 'green'}\n                            })\n                            .addShape({shape: 'node', id: 'c10', label: 'c2', align: 'c9', offset: [0, 90], conn: 'c9'})\n                            .addShape({\n                                shape: 'node', id: 'c11', label: 'c3', align: 'c10', offset: [0, 90], conn: 'c10',\n                                captions: {t: 'main', w: 40, c: 'orange'}\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l2', align: 'c9', offset: [80, 50], len: 130,\n                                label: 'git checkout main~3'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c12', label: 'c0', align: 'l2', offset: [100, -140],\n                                captions: {t: 'HEAD', w: 40, c: 'green'}\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c13', label: 'c1', align: 'c12', offset: [0, 90], conn: 'c12'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c14', label: 'c2', align: 'c13', offset: [0, 90], conn: 'c13'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c15', label: 'c3', align: 'c14', offset: [0, 90], conn: 'c14',\n                                captions: {t: 'main', w: 40, c: 'orange'}\n                            })\n                    }>\n                    <Title2>relative movement:</Title2>\n                    Relative commits are powerful, but we will introduce two simple ones here:<br/><br/>\n                    <Bullet title={'1.'}>Moving upwards one commit at a time with {'^'}</Bullet>\n                    <Bullet title={'2.'}>Moving upwards a number of times with {'~<num>'}</Bullet>\n                </DrawBoxComponent>\n                <DrawBoxComponent wh={[400, 250]} shapeFactory=\n                    {\n                        new DrawBoxHandler()\n                            .addShape({shape: 'node', id: 'c0', label: 'c0', pos: [30, 30]})\n                            .addShape({shape: 'node', id: 'c1', label: 'c1', align: 'c0', offset: [0, 90], conn: 'c0'})\n                            .addShape({\n                                shape: 'node', id: 'c2', label: 'c2', align: 'c1', offset: [0, 90], conn: 'c1',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l0', align: 'c1', offset: [80, 0], len: 160,\n                                label: 'git branch -f main HEAD~2'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c3', label: 'c0', align: 'l0', offset: [120, -90],\n                                captions: {t: 'main', w: 40, c: 'orange'}\n                            })\n                            .addShape({shape: 'node', id: 'c4', label: 'c1', align: 'c3', offset: [0, 90], conn: 'c3'})\n                            .addShape({\n                                shape: 'node', id: 'c5', label: 'c2', align: 'c4', offset: [0, 90], conn: 'c4',\n                                captions: {t: 'HEAD', w: 40, c: 'green'}\n                            })\n                    }>\n                    <Title2>reassign a branch to a commit:</Title2><br/> git branch -f main HEAD~2<br/>\n                </DrawBoxComponent>\n                <DrawBoxComponent wh={[880, 430]} shapeFactory=\n                    {\n                        new DrawBoxHandler()\n                            .addShape({shape: 'node', id: 'c0', label: 'c0', pos: [30, 30]})\n                            .addShape({shape: 'node', id: 'c1', label: 'c1', align: 'c0', offset: [0, 90], conn: 'c0'})\n                            .addShape({\n                                shape: 'node', id: 'c2', label: 'c2', align: 'c1', offset: [0, 90], conn: 'c1',\n                                captions: {t: 'bug', w: 30, c: 'blue'}\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c3', label: 'c3', align: 'c2', offset: [0, 90], conn: 'c2',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l0', align: 'c1', offset: [80, 50], len: 160,\n                                label: 'git reset bug^'\n                            })\n                            .addShape({shape: 'node', id: 'c4', label: 'c0', align: 'l0', offset: [120, -140]})\n                            .addShape({\n                                shape: 'node', id: 'c5', label: 'c1', align: 'c4', offset: [0, 90], conn: 'c4',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c6', label: 'c2', align: 'c5', offset: [0, 90], conn: 'c5',\n                                captions: {t: 'bug', w: 30, c: 'blue'}\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c7', label: 'c3', align: 'c6', offset: [0, 90], conn: 'c6',\n                                strokeStyle: [5, 9],\n                            })\n                            .addShape({shape: 'node', id: 'c8', label: 'c0', align: 'c4', offset: [200, 0]})\n                            .addShape({shape: 'node', id: 'c9', label: 'c1', align: 'c8', offset: [0, 90], conn: 'c8'})\n                            .addShape({\n                                shape: 'node', id: 'c10', label: 'c2', align: 'c9', offset: [0, 90], conn: 'c9',\n                                captions: {t: 'bug', w: 30, c: 'blue'}\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c11', label: 'c3', align: 'c10', offset: [0, 90], conn: 'c10',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l1', align: 'c9', offset: [80, 50], len: 160,\n                                label: 'git revert bug^'\n                            })\n                            .addShape({shape: 'node', id: 'c12', label: 'c0', align: 'l1', offset: [120, -140]})\n                            .addShape({\n                                shape: 'node', id: 'c13', label: 'c1', align: 'c12', offset: [0, 90], conn: 'c12'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c14', label: 'c2', align: 'c13', offset: [0, 90], conn: 'c13',\n                                captions: {t: 'bug', w: 30, c: 'blue'}\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c15', label: 'c3', align: 'c14', offset: [0, 90], conn: 'c14'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c16', label: 'c1՛', align: 'c15', offset: [0, 90], conn: 'c15',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({shape: 'vline', align: 'c4', offset: [140, -20], len: 400, strokeColor: 'red'})\n                    }>\n                    <Title2>reverse a branch:</Title2> go back in history is done\n                    by <Bold>reset</Bold> and <Bold>revert</Bold>, reset alters current branch to a one in history while\n                    revert copies the history in front. On remote repository, reset may break others plan.\n                    <Float l={130} t={320} lineTo={[287, 335]}>\n                        <div style={{width: '120px'}}>just like if C7 had never happened</div>\n                    </Float>\n                    <Float l={230} t={380} lineTo={[325, 349]}>\n                        <div style={{width: '200px'}}>What if others are using commit?<br/>That's why 'reset' doesn't\n                            work on remote repository.\n                        </div>\n                    </Float>\n                    <Float l={650} t={380} lineTo={[775, 405]}>\n                        <div style={{width: '80px'}}>copy of c1</div>\n                    </Float>\n                </DrawBoxComponent>\n            </div>\n            <Title1>Next level:</Title1>\n            <div className={'flex-row'}>\n                <DrawBoxComponent wh={[650, 430]} shapeFactory=\n                    {\n                        new DrawBoxHandler()\n                            .addShape({shape: 'node', id: 'c0', label: 'c0', pos: [100, 30]})\n                            .addShape({\n                                shape: 'node', id: 'c1', label: 'c1', align: 'c0', offset: [0, 90], conn: 'c0'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c2', label: 'c2', align: 'c1', offset: [-70, 90], conn: 'c1'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c3', label: 'c3', align: 'c2', offset: [0, 90], conn: 'c2'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c4', label: 'c4', align: 'c3', offset: [0, 90], conn: 'c3',\n                                captions: {t: 'bug', w: 40, c: 'pink'}\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c5', label: 'c5', align: 'c1', offset: [70, 90], conn: 'c1',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'hvect', id: 'l0', align: 'c5', offset: [80, 0], len: 140,\n                                label: 'git cherry-pick c2 c4'\n                            })\n                            .addShape({shape: 'node', id: 'c6', label: 'c0', align: 'l0', offset: [170, -180]})\n                            .addShape({\n                                shape: 'node', id: 'c7', label: 'c1', align: 'c6', offset: [0, 90], conn: 'c6'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c8', label: 'c2', align: 'c7', offset: [-70, 90], conn: 'c7'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c9', label: 'c3', align: 'c8', offset: [0, 90], conn: 'c8'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c10', label: 'c4', align: 'c9', offset: [0, 90], conn: 'c9',\n                                captions: {t: 'bug', w: 40, c: 'pink', offset: [-70, -10]}\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c11', label: 'c5', align: 'c7', offset: [70, 90], conn: 'c7'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c12', label: 'c2՛', align: 'c11', offset: [0, 90], conn: 'c11'\n                            })\n                            .addShape({\n                                shape: 'node', id: 'c13', label: 'c4՛', align: 'c12', offset: [0, 90], conn: 'c12',\n                                captions: [{t: 'main', w: 40, c: 'orange'}, {t: 'HEAD', w: 40, c: 'green'}]\n                            })\n                            .addShape({\n                                shape: 'vect', between: ['c8', 'c12', 5], arrow: [1, 1], color: 'red',\n                                label: {shape: 'text', offset: [6, -6], label: 'copy'}\n                            })\n                            .addShape({\n                                shape: 'vect', between: ['c10', 'c13', 5], arrow: [1, 1], color: 'red',\n                                label: {shape: 'text', offset: [0, -5], label: 'copy'}\n                            })\n                    }>\n                    <Title2>cherry-pick: </Title2>use {'cherry-pick <commit1> <commit2> <...>'} to copy a bunch of\n                    commits under HEAD without their history.\n                </DrawBoxComponent>\n                <div style={{width: '50em'}}>\n                    <Title2>interactive rebase (reordering, emitting, ... commits): </Title2><br/>\n                    this is done by '-i'. for example: git <Blue>rebase -i HEAD~4</Blue><br/>\n                    this command shows all information about 4 commit before HEAD in a file and you can edit this file\n                    by the help of prompted guid as you wish, then, boooooom, all of changes will be applied at once.\n                </div>\n            </div>\n        </Frame>\n    )\n}\n\nfunction getConnectingToRemoteRepo() {\n    return (\n        <Frame title={'Connecting to remote repository'}>\n            After adding a remote repository by git remote add {'<url>'}, you have to provide a username and password.\n            Some ways are available:\n            <Bullet title={'1.'}>Just let git asks you. If username and password are required git will ask you.</Bullet>\n            <Bullet title={'2.'}>Mention username & password inline:\n                <Bold> git clone https://username:password@github.com/username/repository.git</Bold>\n            </Bullet>\n            <Bullet title={'3.'}>Use global configurations, so they will be available in all git transactions (\n                <Purple>global key work make configuration globally. You can emmit it.</Purple>):<br/>\n                <Bullet title={'●'} level={1}>\n                    <Bold>\n                        git config --global user.name \"Your Name\"<br/>\n                        git config --global user.email \"youremail@yourdomain.com\"\n                    </Bold>\n                </Bullet>\n                <Bullet title={'●'} level={1}>to test it: <Bold>git config --list</Bold></Bullet>\n            </Bullet>\n            <Bullet title={'4.'}>Connect through ssh session. This way involve a pair of private & public key:<br/>\n                <Bullet title={'Ⅰ. check key existence:'} level={1}><Bold>ls -al ~/.ssh\"</Bold>. If you want to use the\n                    generated file, ignore generating new one</Bullet>\n                <Bullet title={'Ⅱ. generate new key:'} level={1}>the following commands create a ssh-key file. By\n                    default it will be stored in home directory. ex. \"~/.ssh/id_ed25519.pub\"<br/>\n                    <Bold>ssh-keygen -t ed25519 -C \"your_email@example.com\"</Bold> or<br/>\n                    <Bold>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"</Bold>\n                </Bullet>\n                <Bullet title={'● ssh key file location:'} level={2}>you can choose a location for ssh key\n                    file </Bullet>\n                <Bullet title={'● passphrase:'} level={2}>if someone reaches your computer, then the connection is\n                    no more secure, so you can define a password for accessing the connection at this level. </Bullet>\n                <Bullet title={'Ⅲ. add ssh-key to the ssh-agent:'} level={1}><br/></Bullet>\n                <Bullet title={'● start ssh-agent: '} level={2}><Bold>eval \"$(ssh-agent -s)\"</Bold></Bullet>\n                <Bullet title={'● add ssh-key to ssh-agent: '} level={2}><Bold>ssh-add\n                    ~/.ssh/generated-ssh-key-file-name</Bold>\n                </Bullet>\n                <Bullet title={'Ⅳ. identify the ssh-key to your server repo: '} level={1}>in Github, copy your ssh-key\n                    into \"your profile > settings > SSH and GPG keys\"\n                </Bullet>\n                <Bullet title={'Ⅴ. test the ssh conn: '} level={1}><Bold>ssh -T git@github.com</Bold></Bullet>\n            </Bullet>\n        </Frame>\n    )\n}\n\n// function get() {\n//     return (\n//         <Frame title={''}></Frame>\n//     )\n// }"]},"metadata":{},"sourceType":"module"}