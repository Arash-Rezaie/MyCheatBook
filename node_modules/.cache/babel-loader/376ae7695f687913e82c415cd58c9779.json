{"ast":null,"code":"import { Line } from \"../simple/line\";\nimport { Text } from \"../simple/shape\";\nexport class ExtendedLine extends Line {\n  constructor(handler) {\n    super();\n    this.handler = handler;\n  }\n\n  setLabel(label) {\n    return label.label ? super.setLabel(this.handler.generateShape(label)) : super.setLabel(label);\n  }\n\n  between(shape1, shape2, gap = 0) {\n    try {\n      this.setStart([shape1, gap]);\n      this.setEnd([shape2, gap]);\n      return this;\n    } catch (e) {\n      debugger;\n    }\n  }\n\n  getTargetShape(shape) {\n    return typeof shape === 'string' ? this.handler.getTargetShape(shape) : shape;\n  }\n\n}\nexport class ExtendedHLine extends ExtendedLine {\n  setLength(l) {\n    l > 0 ? this.setEnd(['0D', l]) : this.setEnd(['180D', -l]);\n    return this;\n  }\n\n}\nexport class ExtendedVLine extends ExtendedLine {\n  setLength(l) {\n    l > 0 ? this.setEnd(['90D', l]) : this.setEnd(['270D', -l]);\n    return this;\n  }\n\n}\nexport class ExtendedVector extends ExtendedLine {\n  constructor(handler) {\n    super(handler);\n    this.setStrokeColor('black').setFillColor('black').setStrokeWidth(2).showArrow(1, 1);\n  }\n\n}\nexport class ExtendedHVector extends ExtendedVector {\n  setLength(l) {\n    return l > 0 ? this.setEnd(['0D', l]) : this.setEnd(['180D', -l]);\n  }\n\n  setLabel(label) {\n    if (typeof label === 'string') {\n      label = new Text().setPosition(this.getCenterPoint()).setLabel(label).setOffset([0, -6]).setFontStyle('');\n    } else {\n      label = this.handler.generateShape(label);\n    }\n\n    return super.setLabel(label);\n  }\n\n}","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/drawbox/extended/extended-line.js"],"names":["Line","Text","ExtendedLine","constructor","handler","setLabel","label","generateShape","between","shape1","shape2","gap","setStart","setEnd","e","getTargetShape","shape","ExtendedHLine","setLength","l","ExtendedVLine","ExtendedVector","setStrokeColor","setFillColor","setStrokeWidth","showArrow","ExtendedHVector","setPosition","getCenterPoint","setOffset","setFontStyle"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,gBAAnB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,OAAO,MAAMC,YAAN,SAA2BF,IAA3B,CAAgC;AACnCG,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AACA,SAAKA,OAAL,GAAeA,OAAf;AACH;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,WAAQA,KAAK,CAACA,KAAP,GAAgB,MAAMD,QAAN,CAAe,KAAKD,OAAL,CAAaG,aAAb,CAA2BD,KAA3B,CAAf,CAAhB,GAAoE,MAAMD,QAAN,CAAeC,KAAf,CAA3E;AACH;;AAEDE,EAAAA,OAAO,CAACC,MAAD,EAASC,MAAT,EAAiBC,GAAG,GAAG,CAAvB,EAA0B;AAC7B,QAAI;AACA,WAAKC,QAAL,CAAc,CAACH,MAAD,EAASE,GAAT,CAAd;AACA,WAAKE,MAAL,CAAY,CAACH,MAAD,EAASC,GAAT,CAAZ;AACA,aAAO,IAAP;AACH,KAJD,CAIC,OAAOG,CAAP,EAAS;AACN;AACH;AACJ;;AAEDC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClB,WAAQ,OAAOA,KAAP,KAAiB,QAAlB,GAA8B,KAAKZ,OAAL,CAAaW,cAAb,CAA4BC,KAA5B,CAA9B,GAAmEA,KAA1E;AACH;;AAtBkC;AAyBvC,OAAO,MAAMC,aAAN,SAA4Bf,YAA5B,CAAyC;AAC5CgB,EAAAA,SAAS,CAACC,CAAD,EAAI;AACTA,IAAAA,CAAC,GAAG,CAAJ,GACI,KAAKN,MAAL,CAAY,CAAC,IAAD,EAAOM,CAAP,CAAZ,CADJ,GAEI,KAAKN,MAAL,CAAY,CAAC,MAAD,EAAS,CAACM,CAAV,CAAZ,CAFJ;AAGA,WAAO,IAAP;AACH;;AAN2C;AAShD,OAAO,MAAMC,aAAN,SAA4BlB,YAA5B,CAAyC;AAC5CgB,EAAAA,SAAS,CAACC,CAAD,EAAI;AACTA,IAAAA,CAAC,GAAG,CAAJ,GACI,KAAKN,MAAL,CAAY,CAAC,KAAD,EAAQM,CAAR,CAAZ,CADJ,GAEI,KAAKN,MAAL,CAAY,CAAC,MAAD,EAAS,CAACM,CAAV,CAAZ,CAFJ;AAGA,WAAO,IAAP;AACH;;AAN2C;AAShD,OAAO,MAAME,cAAN,SAA6BnB,YAA7B,CAA0C;AAC7CC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAMA,OAAN;AACA,SAAKkB,cAAL,CAAoB,OAApB,EACKC,YADL,CACkB,OADlB,EAEKC,cAFL,CAEoB,CAFpB,EAGKC,SAHL,CAGe,CAHf,EAGkB,CAHlB;AAIH;;AAP4C;AAUjD,OAAO,MAAMC,eAAN,SAA8BL,cAA9B,CAA6C;AAChDH,EAAAA,SAAS,CAACC,CAAD,EAAI;AACT,WAAQA,CAAC,GAAG,CAAL,GACH,KAAKN,MAAL,CAAY,CAAC,IAAD,EAAOM,CAAP,CAAZ,CADG,GAEH,KAAKN,MAAL,CAAY,CAAC,MAAD,EAAS,CAACM,CAAV,CAAZ,CAFJ;AAGH;;AAEDd,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,MAAAA,KAAK,GAAG,IAAIL,IAAJ,GACH0B,WADG,CACS,KAAKC,cAAL,EADT,EAEHvB,QAFG,CAEMC,KAFN,EAGHuB,SAHG,CAGO,CAAC,CAAD,EAAI,CAAC,CAAL,CAHP,EAIHC,YAJG,CAIU,EAJV,CAAR;AAKH,KAND,MAMO;AACHxB,MAAAA,KAAK,GAAG,KAAKF,OAAL,CAAaG,aAAb,CAA2BD,KAA3B,CAAR;AACH;;AACD,WAAO,MAAMD,QAAN,CAAeC,KAAf,CAAP;AACH;;AAlB+C","sourcesContent":["import {Line} from \"../simple/line\";\nimport {Text} from \"../simple/shape\";\n\nexport class ExtendedLine extends Line {\n    constructor(handler) {\n        super();\n        this.handler = handler;\n    }\n\n    setLabel(label) {\n        return (label.label) ? super.setLabel(this.handler.generateShape(label)) : super.setLabel(label);\n    }\n\n    between(shape1, shape2, gap = 0) {\n        try {\n            this.setStart([shape1, gap]);\n            this.setEnd([shape2, gap]);\n            return this;\n        }catch (e){\n            debugger\n        }\n    }\n\n    getTargetShape(shape) {\n        return (typeof shape === 'string') ? this.handler.getTargetShape(shape) : shape;\n    }\n}\n\nexport class ExtendedHLine extends ExtendedLine {\n    setLength(l) {\n        l > 0 ?\n            this.setEnd(['0D', l]) :\n            this.setEnd(['180D', -l])\n        return this;\n    }\n}\n\nexport class ExtendedVLine extends ExtendedLine {\n    setLength(l) {\n        l > 0 ?\n            this.setEnd(['90D', l]) :\n            this.setEnd(['270D', -l])\n        return this;\n    }\n}\n\nexport class ExtendedVector extends ExtendedLine {\n    constructor(handler) {\n        super(handler);\n        this.setStrokeColor('black')\n            .setFillColor('black')\n            .setStrokeWidth(2)\n            .showArrow(1, 1);\n    }\n}\n\nexport class ExtendedHVector extends ExtendedVector {\n    setLength(l) {\n        return (l > 0) ?\n            this.setEnd(['0D', l]) :\n            this.setEnd(['180D', -l])\n    }\n\n    setLabel(label) {\n        if (typeof label === 'string') {\n            label = new Text()\n                .setPosition(this.getCenterPoint())\n                .setLabel(label)\n                .setOffset([0, -6])\n                .setFontStyle('');\n        } else {\n            label = this.handler.generateShape(label);\n        }\n        return super.setLabel(label);\n    }\n}"]},"metadata":{},"sourceType":"module"}