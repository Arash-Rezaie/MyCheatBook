{"ast":null,"code":"import { Rectangle } from \"../simple/rectangle\";\nimport { Text } from \"../simple/shape\";\nimport { ExtendedLine } from \"./extended-line\";\nexport class Caption extends Rectangle {\n  constructor(handler) {\n    super();\n    this.handler = handler;\n  }\n\n  getLabel() {\n    let lbl = super.getLabel();\n\n    if (typeof lbl === 'string') {\n      lbl = new Text().setLabel(lbl).setOffset([0, 5]).setFontStyle('bold');\n    } else {\n      lbl = this.handler.generateShape(lbl);\n    }\n\n    return lbl.alignTo(this);\n  }\n\n  connectTo(refId) {\n    this.drawBox.addDirectShape(new ExtendedLine(this.handler).between(this, this.handler.getTargetShape(refId), 5).setStrokeColor('red').setFillColor('red').setStrokeWidth(1));\n    return this;\n  }\n\n}","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/drawbox/wrappered/caption.js"],"names":["Rectangle","Text","ExtendedLine","Caption","constructor","handler","getLabel","lbl","setLabel","setOffset","setFontStyle","generateShape","alignTo","connectTo","refId","drawBox","addDirectShape","between","getTargetShape","setStrokeColor","setFillColor","setStrokeWidth"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,qBAAxB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AAEA,OAAO,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AACnCI,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AACA,SAAKA,OAAL,GAAeA,OAAf;AACH;;AAEDC,EAAAA,QAAQ,GAAG;AACP,QAAIC,GAAG,GAAG,MAAMD,QAAN,EAAV;;AACA,QAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;AACzBA,MAAAA,GAAG,GAAG,IAAIN,IAAJ,GACDO,QADC,CACQD,GADR,EAEDE,SAFC,CAES,CAAC,CAAD,EAAI,CAAJ,CAFT,EAGDC,YAHC,CAGY,MAHZ,CAAN;AAIH,KALD,MAKO;AACHH,MAAAA,GAAG,GAAG,KAAKF,OAAL,CAAaM,aAAb,CAA2BJ,GAA3B,CAAN;AACH;;AACD,WAAOA,GAAG,CAACK,OAAJ,CAAY,IAAZ,CAAP;AACH;;AAEDC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,SAAKC,OAAL,CAAaC,cAAb,CAA4B,IAAId,YAAJ,CAAiB,KAAKG,OAAtB,EACvBY,OADuB,CACf,IADe,EACT,KAAKZ,OAAL,CAAaa,cAAb,CAA4BJ,KAA5B,CADS,EAC2B,CAD3B,EAEvBK,cAFuB,CAER,KAFQ,EAGvBC,YAHuB,CAGV,KAHU,EAIvBC,cAJuB,CAIR,CAJQ,CAA5B;AAKA,WAAO,IAAP;AACH;;AA1BkC","sourcesContent":["import {Rectangle} from \"../simple/rectangle\";\nimport {Text} from \"../simple/shape\";\nimport {ExtendedLine} from \"./extended-line\";\n\nexport class Caption extends Rectangle {\n    constructor(handler) {\n        super();\n        this.handler = handler;\n    }\n\n    getLabel() {\n        let lbl = super.getLabel();\n        if (typeof lbl === 'string') {\n            lbl = new Text()\n                .setLabel(lbl)\n                .setOffset([0, 5])\n                .setFontStyle('bold');\n        } else {\n            lbl = this.handler.generateShape(lbl);\n        }\n        return lbl.alignTo(this);\n    }\n\n    connectTo(refId) {\n        this.drawBox.addDirectShape(new ExtendedLine(this.handler)\n            .between(this, this.handler.getTargetShape(refId), 5)\n            .setStrokeColor('red')\n            .setFillColor('red')\n            .setStrokeWidth(1));\n        return this;\n    }\n}"]},"metadata":{},"sourceType":"module"}