{"ast":null,"code":"export class Utils {\n  //30deg\n  //360deg\n  static getAngle(x1, y1, x2, y2) {\n    let dx = x2 - x1;\n    let dy = y2 - y1;\n    return Math.atan2(dy, dx);\n  }\n\n  static getAngleByPoint(p1, p2) {\n    return Utils.getAngle(p1[0], p1[1], p2[0], p2[1]);\n  }\n\n  static normalizeDegree(deg) {\n    if (deg > 360) deg %= 360;else if (deg < 0) deg = deg % 360 + 360;\n    return deg;\n  }\n\n  static normalizeRadian(rad) {\n    if (rad > Utils._2PI) rad %= Utils._2PI;else if (rad < 0) rad = rad % Utils._2PI + Utils._2PI;\n    return rad;\n  }\n\n  static rad2Deg(rad) {\n    return 180 * rad / Math.PI;\n  }\n\n  static deg2Rad(deg) {\n    return Math.PI * deg / 180;\n  }\n\n  static getPointByAngle(basePoint, angle, length) {\n    let d = Utils.rad2Deg(angle);\n    return [basePoint[0] + length * Math.cos(angle), basePoint[1] + length * Math.sin(angle)];\n  }\n\n}\nUtils._PI6 = Math.PI / 6;\nUtils._2PI = 2 * Math.PI;","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/tools/utils.js"],"names":["Utils","getAngle","x1","y1","x2","y2","dx","dy","Math","atan2","getAngleByPoint","p1","p2","normalizeDegree","deg","normalizeRadian","rad","_2PI","rad2Deg","PI","deg2Rad","getPointByAngle","basePoint","angle","length","d","cos","sin","_PI6"],"mappings":"AAAA,OAAO,MAAMA,KAAN,CAAY;AACc;AACA;AAE7B,SAAOC,QAAP,CAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgC;AAC5B,QAAIC,EAAE,GAAGF,EAAE,GAAGF,EAAd;AACA,QAAIK,EAAE,GAAGF,EAAE,GAAGF,EAAd;AACA,WAAOK,IAAI,CAACC,KAAL,CAAWF,EAAX,EAAeD,EAAf,CAAP;AACH;;AAED,SAAOI,eAAP,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+B;AAC3B,WAAOZ,KAAK,CAACC,QAAN,CAAeU,EAAE,CAAC,CAAD,CAAjB,EAAsBA,EAAE,CAAC,CAAD,CAAxB,EAA6BC,EAAE,CAAC,CAAD,CAA/B,EAAoCA,EAAE,CAAC,CAAD,CAAtC,CAAP;AACH;;AAED,SAAOC,eAAP,CAAuBC,GAAvB,EAA4B;AACxB,QAAIA,GAAG,GAAG,GAAV,EACIA,GAAG,IAAI,GAAP,CADJ,KAEK,IAAIA,GAAG,GAAG,CAAV,EACDA,GAAG,GAAGA,GAAG,GAAG,GAAN,GAAY,GAAlB;AACJ,WAAOA,GAAP;AACH;;AAED,SAAOC,eAAP,CAAuBC,GAAvB,EAA4B;AACxB,QAAIA,GAAG,GAAGhB,KAAK,CAACiB,IAAhB,EACID,GAAG,IAAIhB,KAAK,CAACiB,IAAb,CADJ,KAEK,IAAID,GAAG,GAAG,CAAV,EACDA,GAAG,GAAGA,GAAG,GAAGhB,KAAK,CAACiB,IAAZ,GAAmBjB,KAAK,CAACiB,IAA/B;AACJ,WAAOD,GAAP;AACH;;AAED,SAAOE,OAAP,CAAeF,GAAf,EAAoB;AAChB,WAAO,MAAMA,GAAN,GAAYR,IAAI,CAACW,EAAxB;AACH;;AAED,SAAOC,OAAP,CAAeN,GAAf,EAAoB;AAChB,WAAON,IAAI,CAACW,EAAL,GAAUL,GAAV,GAAgB,GAAvB;AACH;;AAED,SAAOO,eAAP,CAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiD;AAC7C,QAAIC,CAAC,GAAGzB,KAAK,CAACkB,OAAN,CAAcK,KAAd,CAAR;AACA,WAAO,CAACD,SAAS,CAAC,CAAD,CAAT,GAAeE,MAAM,GAAGhB,IAAI,CAACkB,GAAL,CAASH,KAAT,CAAzB,EAA0CD,SAAS,CAAC,CAAD,CAAT,GAAeE,MAAM,GAAGhB,IAAI,CAACmB,GAAL,CAASJ,KAAT,CAAlE,CAAP;AACH;;AAzCc;AAANvB,K,CACF4B,I,GAAOpB,IAAI,CAACW,EAAL,GAAU,C;AADfnB,K,CAEFiB,I,GAAO,IAAIT,IAAI,CAACW,E","sourcesContent":["export class Utils {\n    static _PI6 = Math.PI / 6;   //30deg\n    static _2PI = 2 * Math.PI;   //360deg\n\n    static getAngle(x1, y1, x2, y2) {\n        let dx = x2 - x1;\n        let dy = y2 - y1;\n        return Math.atan2(dy, dx);\n    }\n\n    static getAngleByPoint(p1, p2) {\n        return Utils.getAngle(p1[0], p1[1], p2[0], p2[1]);\n    }\n\n    static normalizeDegree(deg) {\n        if (deg > 360)\n            deg %= 360;\n        else if (deg < 0)\n            deg = deg % 360 + 360;\n        return deg;\n    }\n\n    static normalizeRadian(rad) {\n        if (rad > Utils._2PI)\n            rad %= Utils._2PI;\n        else if (rad < 0)\n            rad = rad % Utils._2PI + Utils._2PI;\n        return rad;\n    }\n\n    static rad2Deg(rad) {\n        return 180 * rad / Math.PI;\n    }\n\n    static deg2Rad(deg) {\n        return Math.PI * deg / 180;\n    }\n\n    static getPointByAngle(basePoint, angle, length) {\n        let d = Utils.rad2Deg(angle);\n        return [basePoint[0] + length * Math.cos(angle), basePoint[1] + length * Math.sin(angle)];\n    }\n}"]},"metadata":{},"sourceType":"module"}