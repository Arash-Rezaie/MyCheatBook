{"ast":null,"code":"export class DrawBox {\n  constructor() {\n    this.lst = [];\n  }\n\n  addShape(shape) {\n    this.lst.push(shape);\n    return this;\n  }\n\n  render(canvas) {\n    let ctx = canvas.getContext('2d');\n    this.len = this.lst.length;\n    this.ctx = ctx;\n    this.lst.forEach(v => v.render(ctx));\n    this.finished = true;\n    this.resumeRender();\n  }\n\n  resumeRender() {\n    if (this.finished) {\n      let l = this.lst.length;\n\n      for (let i = this.len; i < l; i++) {\n        this.lst[i].render(this.ctx);\n      }\n\n      this.len = l;\n    }\n  }\n\n}","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/drawbox/draw-box.js"],"names":["DrawBox","lst","addShape","shape","push","render","canvas","ctx","getContext","len","length","forEach","v","finished","resumeRender","l","i"],"mappings":"AAAA,OAAO,MAAMA,OAAN,CAAc;AAAA;AAAA,SACjBC,GADiB,GACX,EADW;AAAA;;AAGjBC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,SAAKF,GAAL,CAASG,IAAT,CAAcD,KAAd;AACA,WAAO,IAAP;AACH;;AAEDE,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,QAAIC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAV;AACA,SAAKC,GAAL,GAAW,KAAKR,GAAL,CAASS,MAApB;AACA,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKN,GAAL,CAASU,OAAT,CAAiBC,CAAC,IAAIA,CAAC,CAACP,MAAF,CAASE,GAAT,CAAtB;AACA,SAAKM,QAAL,GAAgB,IAAhB;AACA,SAAKC,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKD,QAAT,EAAmB;AACf,UAAIE,CAAC,GAAG,KAAKd,GAAL,CAASS,MAAjB;;AACA,WAAK,IAAIM,CAAC,GAAG,KAAKP,GAAlB,EAAuBO,CAAC,GAAGD,CAA3B,EAA8BC,CAAC,EAA/B,EAAmC;AAC/B,aAAKf,GAAL,CAASe,CAAT,EAAYX,MAAZ,CAAmB,KAAKE,GAAxB;AACH;;AACD,WAAKE,GAAL,GAAWM,CAAX;AACH;AACJ;;AAzBgB","sourcesContent":["export class DrawBox {\n    lst = [];\n\n    addShape(shape) {\n        this.lst.push(shape);\n        return this;\n    }\n\n    render(canvas) {\n        let ctx = canvas.getContext('2d');\n        this.len = this.lst.length;\n        this.ctx = ctx;\n        this.lst.forEach(v => v.render(ctx));\n        this.finished = true;\n        this.resumeRender();\n    }\n\n    resumeRender() {\n        if (this.finished) {\n            let l = this.lst.length;\n            for (let i = this.len; i < l; i++) {\n                this.lst[i].render(this.ctx);\n            }\n            this.len = l;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}