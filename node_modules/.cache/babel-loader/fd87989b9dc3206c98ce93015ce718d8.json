{"ast":null,"code":"import _get from\"/media/arash/SanDisk/MyCheatBook/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"/media/arash/SanDisk/MyCheatBook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/media/arash/SanDisk/MyCheatBook/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/media/arash/SanDisk/MyCheatBook/node_modules/@babel/runtime/helpers/esm/createSuper\";import _classCallCheck from\"/media/arash/SanDisk/MyCheatBook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/media/arash/SanDisk/MyCheatBook/node_modules/@babel/runtime/helpers/esm/createClass\";var _pi6=Math.PI/6;//30deg\n// const _pi2 = Math.PI / 2;   //90deg\n// const _3pi2 = 3 * _pi2;     //270deg\nvar _2pi=2*Math.PI;//360deg\nfunction getAngle(x1,y1,x2,y2){var dx=x2-x1;var dy=y2-y1;return Math.atan2(dy,dx);}function normalizeDegree(deg){if(deg>360)deg%=360;else if(deg<0)deg=deg%360+360;return deg;}function normalizeRadian(rad){if(rad>_2pi)rad%=_2pi;else if(rad<0)rad=rad%_2pi+_2pi;return rad;}// function rad2Deg(rad) {\n//     return 180 * rad / Math.PI;\n// }\nfunction deg2Rad(deg){return Math.PI*normalizeDegree(deg)/180;}var Shape=/*#__PURE__*/function(){function Shape(){_classCallCheck(this,Shape);this.fillColor=undefined;this.label=undefined;this.strokeWidth=0;this.strokeColor='#000';this.strokeStyle=[1,0];this.offset=[0,0];this.basePosition=[0,0];this.xy=[0,0];}/**\n     * calculate final position\n     */_createClass(Shape,[{key:\"calculateFinalPosition\",value:function calculateFinalPosition(){this.xy=[this.basePosition[0]+this.offset[0],this.basePosition[1]+this.offset[1]];}/**\n     * @param fillColor internal color. ex. 'black' or '#000' or rgb(0,0,0) or hsl(0,0%,0%)\n     * @returns {Shape}\n     */},{key:\"setFillColor\",value:function setFillColor(fillColor){this.fillColor=fillColor;return this;}/**\n     * @param strokeWidth int value\n     * @returns {Shape}\n     */},{key:\"setStrokeWidth\",value:function setStrokeWidth(strokeWidth){this.strokeWidth=strokeWidth;return this;}/**\n     * set both fill color and stroke color\n     * @param color [green, blue, red, yellow, purple, brown, orange, pink]\n     * @return {Shape}\n     */},{key:\"setColor\",value:function setColor(color){this.setFillColor(Shape.colors[color][0]);this.setStrokeColor(Shape.colors[color][1]);return this;}/**\n     * @param strokeColor stroke color. ex. 'black' or '#000' or rgb(0,0,0) or hsl(0,0%,0%)\n     * @returns {Shape}\n     */},{key:\"setStrokeColor\",value:function setStrokeColor(strokeColor){this.strokeColor=strokeColor;return this;}/**\n     * make line dashed\n     * @param strokeStyle [int,int]. It means [fill, empty]\n     * @returns {Shape}\n     */},{key:\"setStrokeStyle\",value:function setStrokeStyle(strokeStyle){this.strokeStyle=strokeStyle;return this;}/**\n     * label is going to be shown at center of this shape\n     * @param label string or Text object\n     * @returns {Shape}\n     */},{key:\"setLabel\",value:function setLabel(label){if(typeof label===\"string\"){label=new Text().setPosition(this.getCenterPoint()).setLabel(label);}this.label=label;return this;}/**\n     * @param position [x,y]\n     * @returns {Shape}\n     */},{key:\"setPosition\",value:function setPosition(position){this.basePosition=position;this.calculateFinalPosition();return this;}/**\n     * @param offset [xOffset,yOffset]\n     * @returns {Shape}\n     */},{key:\"setOffset\",value:function setOffset(offset){this.offset=offset;this.calculateFinalPosition();return this;}/**\n     * @param shape another shape object\n     * @returns {Shape}\n     */},{key:\"alignTo\",value:function alignTo(shape){this.setPosition(shape.getCenterPoint());return this;}/**\n     * get final position\n     * @returns {*[]}\n     */},{key:\"getPosition\",value:function getPosition(){return this.xy;}/**\n     * get center point of this shape\n     */},{key:\"getCenterPoint\",value:function getCenterPoint(){return this.getPosition();}},{key:\"getExternalPoint\",value:function getExternalPoint(angle,gap){return this.getPosition();}/**\n     * render label object\n     * @param ctx\n     */},{key:\"showLabel\",value:function showLabel(ctx){var p=this.getCenterPoint();this.label.setPosition(p);this.label.render(ctx);}/**\n     * apply configurations\n     * @param canvasCtx\n     */},{key:\"render\",value:function render(canvasCtx){canvasCtx.fillStyle=this.fillColor;canvasCtx.lineWidth=this.strokeWidth;canvasCtx.strokeStyle=this.strokeColor;canvasCtx.setLineDash(this.strokeStyle);if(this.fillColor)canvasCtx.fill();if(this.strokeWidth>0)canvasCtx.stroke();if(this.label)this.showLabel(canvasCtx);}}]);return Shape;}();Shape.colors={'green':['rgb(51, 204, 51)','rgb(0, 153, 51)'],'blue':['rgb(51, 102, 255)','rgb(0, 0, 255)'],'red':['rgb(255,0,0)','rgb(137,16,16)'],'yellow':['rgb(255, 255, 102)','rgb(255, 204, 0)'],'purple':['rgb(153, 51, 255)','rgb(121,7,191)'],'brown':['rgb(153, 102, 0)','rgb(102, 51, 0)'],'orange':['rgb(255, 153, 51)','rgb(255, 102, 0)'],'pink':['rgb(255, 102, 153)','rgb(255, 51, 153)']};export var Text=/*#__PURE__*/function(_Shape){_inherits(Text,_Shape);var _super=_createSuper(Text);function Text(){var _this;_classCallCheck(this,Text);_this=_super.call(this);_this.setFillColor('black');_this.setFontSize('12px');_this.setFontStyle('');return _this;}_createClass(Text,[{key:\"setLabel\",value:function setLabel(label){this.txt=label;return this;}/**\n     * @param fontSize ex. 12px\n     * @returns {Text}\n     */},{key:\"setFontSize\",value:function setFontSize(fontSize){this.fontSize=fontSize;return this;}/**\n     * @param fontStyle ex. 'italic' or 'bold' or both 'italic bold'\n     * * @returns {Text}\n     */},{key:\"setFontStyle\",value:function setFontStyle(fontStyle){this.fontStyle=fontStyle;return this;}},{key:\"render\",value:function render(canvasCtx){canvasCtx.beginPath();_get(_getPrototypeOf(Text.prototype),\"render\",this).call(this,canvasCtx);canvasCtx.font=this.fontStyle+' '+this.fontSize+\" Arial\";canvasCtx.textAlign=\"center\";var c=this.getPosition();canvasCtx.fillText(this.txt,c[0],c[1]);canvasCtx.closePath();}}]);return Text;}(Shape);export var Circle=/*#__PURE__*/function(_Shape2){_inherits(Circle,_Shape2);var _super2=_createSuper(Circle);function Circle(){_classCallCheck(this,Circle);return _super2.apply(this,arguments);}_createClass(Circle,[{key:\"setRadius\",value:function setRadius(radius){this.r=radius;return this;}},{key:\"getExternalPoint\",value:function getExternalPoint(angle,gap){var c=this.getPosition();return[c[0]+(this.r+gap)*Math.cos(angle),c[1]+(this.r+gap)*Math.sin(angle)];}},{key:\"render\",value:function render(canvasCtx){canvasCtx.beginPath();var c=this.getPosition();canvasCtx.arc(c[0],c[1],this.r,0,_2pi);canvasCtx.closePath();_get(_getPrototypeOf(Circle.prototype),\"render\",this).call(this,canvasCtx);}}]);return Circle;}(Shape);export var Line=/*#__PURE__*/function(_Shape3){_inherits(Line,_Shape3);var _super3=_createSuper(Line);function Line(){var _this2;_classCallCheck(this,Line);_this2=_super3.call(this);_this2.setStrokeWidth(1);return _this2;}/**\n     * @param shape1 shape 1\n     * @param shape2 shape 2\n     * @param gap the gap between line and target shapes. gap>=0\n     */_createClass(Line,[{key:\"between\",value:function between(shape1,shape2){var gap=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var c1=shape1.getCenterPoint();var c2=shape2.getCenterPoint();c1=shape1.getExternalPoint(getAngle(c1[0],c1[1],c2[0],c2[1]),gap);c2=shape2.getExternalPoint(getAngle(c2[0],c2[1],c1[0],c1[1]),gap);this.setPosition(c1);this.lineTo(c2);return this;}/**\n     * @param point [x,y] or [intR, length] for radian or [intD, length] for degree\n     */},{key:\"lineTo\",value:function lineTo(point){if(typeof point[0]==='string'){var i=point[0].length-1;var c=point[0][i];var v=Number(point[0].substring(0,i));if(c==='R'||c==='r'){this.secondP=this.getTargetPoint(v,point[1]);}else if(c==='D'||c==='d'){this.secondP=this.getTargetPoint(deg2Rad(v),point[1]);}else{throw new Error('wrong input');}}else{this.secondP=point;}}},{key:\"getTargetPoint\",value:function getTargetPoint(r,d){var p=this.getPosition();return[p[0]+Math.cos(r)*d,p[1]+Math.sin(r)*d];}},{key:\"getCenterPoint\",value:function getCenterPoint(){var p=this.getPosition();return[(p[0]+this.secondP[0])/2,(p[1]+this.secondP[1])/2];}/**\n     * show arrows on the line\n     * @param direction 0 or 1\n     * @param places array of float values, each is 0 - 1;\n     * @return Shape\n     */},{key:\"showArrow\",value:function showArrow(direction,places){this.direction=direction;this.places=places;return this;}},{key:\"drawArrow\",value:function drawArrow(canvasCtx,length,angle,x,y){canvasCtx.beginPath();var p1=[x+length*Math.cos(angle-_pi6),y+length*Math.sin(angle-_pi6)];var p2=[x+length*Math.cos(angle+_pi6),y+length*Math.sin(angle+_pi6)];canvasCtx.moveTo(x,y);canvasCtx.lineTo(p1[0],p1[1]);canvasCtx.lineTo(p2[0],p2[1]);canvasCtx.closePath();_get(_getPrototypeOf(Line.prototype),\"render\",this).call(this,canvasCtx);}},{key:\"render\",value:function render(canvasCtx){var p1=this.getPosition();canvasCtx.beginPath();canvasCtx.moveTo(p1[0],p1[1]);canvasCtx.lineTo(this.secondP[0],this.secondP[1]);canvasCtx.closePath();_get(_getPrototypeOf(Line.prototype),\"render\",this).call(this,canvasCtx);if(this.direction!==undefined&&this.places!==undefined){if(!this.places[0])this.places=[this.places];var angle=this.direction?getAngle(this.secondP[0],this.secondP[1],p1[0],p1[1]):getAngle(p1[0],p1[1],this.secondP[0],this.secondP[1]);for(var i=0;i<this.places.length;i++){var x=p1[0]+(this.secondP[0]-p1[0])*this.places[i];var y=p1[1]+(this.secondP[1]-p1[1])*this.places[i];this.drawArrow(canvasCtx,10,angle,x,y);}}}}]);return Line;}(Shape);export var Rectangle=/*#__PURE__*/function(_Shape4){_inherits(Rectangle,_Shape4);var _super4=_createSuper(Rectangle);function Rectangle(){_classCallCheck(this,Rectangle);return _super4.apply(this,arguments);}_createClass(Rectangle,[{key:\"setWidth\",value:function setWidth(width){this.width=width;return this;}},{key:\"setHeight\",value:function setHeight(height){this.height=height;return this;}},{key:\"getCenterPoint\",value:function getCenterPoint(){var p=this.getPosition();return[p[0]+this.width/2,p[1]+this.height/2];}},{key:\"getExternalPoint\",value:function getExternalPoint(angle,gap){var c=this.getCenterPoint();var p=this.getPosition();var rbc=getAngle(c[0],c[1],p[0]+this.width,p[1]+this.height);//right-bottom corner\nvar lbc=Math.PI-rbc;//left-bottom corner\nvar ltc=Math.PI+rbc;//left-top corner\nvar rtc=_2pi-rbc;//right-top corner\nangle=normalizeRadian(angle);//get angle between 0 - ~629\nif(angle>=rbc&&angle<lbc){//cross bottom edge\nreturn this.getTBTarget(c,angle,gap,1);}else if(angle>=lbc&&angle<ltc){//cross left edge\nreturn this.getLRTarget(c,angle,gap,-1);}else if(angle>=ltc&&angle<rtc){//cross top edge\nreturn this.getTBTarget(c,angle,gap,-1);}else{//cross right edge\nreturn this.getLRTarget(c,angle,gap,1);}}},{key:\"getTBTarget\",value:function getTBTarget(c,angle,gap,sign){var l=this.height/2/Math.sin(angle);l+=sign*gap;return[c[0]+sign*l*Math.cos(angle),c[1]+sign*l*Math.sin(angle)];}},{key:\"getLRTarget\",value:function getLRTarget(c,angle,gap,sign){var l=this.width/2/Math.cos(angle);l+=sign*gap;return[c[0]+sign*l*Math.cos(angle),c[1]+sign*l*Math.sin(angle)];}},{key:\"render\",value:function render(canvasCtx){canvasCtx.beginPath();var p=this.getPosition();canvasCtx.rect(p[0],p[1],this.width,this.height);canvasCtx.closePath();_get(_getPrototypeOf(Rectangle.prototype),\"render\",this).call(this,canvasCtx);}}]);return Rectangle;}(Shape);export var DrawBox=/*#__PURE__*/function(){function DrawBox(){_classCallCheck(this,DrawBox);this.lst=[];}_createClass(DrawBox,[{key:\"addShape\",value:function addShape(shape){this.lst.push(shape);return this;}},{key:\"render\",value:function render(canvas){var ctx=canvas.getContext('2d');this.lst.forEach(function(v){return v.render(ctx);});}}]);return DrawBox;}();","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/draw-box.js"],"names":["_pi6","Math","PI","_2pi","getAngle","x1","y1","x2","y2","dx","dy","atan2","normalizeDegree","deg","normalizeRadian","rad","deg2Rad","Shape","fillColor","undefined","label","strokeWidth","strokeColor","strokeStyle","offset","basePosition","xy","color","setFillColor","colors","setStrokeColor","Text","setPosition","getCenterPoint","setLabel","position","calculateFinalPosition","shape","getPosition","angle","gap","ctx","p","render","canvasCtx","fillStyle","lineWidth","setLineDash","fill","stroke","showLabel","setFontSize","setFontStyle","txt","fontSize","fontStyle","beginPath","font","textAlign","c","fillText","closePath","Circle","radius","r","cos","sin","arc","Line","setStrokeWidth","shape1","shape2","c1","c2","getExternalPoint","lineTo","point","i","length","v","Number","substring","secondP","getTargetPoint","Error","d","direction","places","x","y","p1","p2","moveTo","drawArrow","Rectangle","width","height","rbc","lbc","ltc","rtc","getTBTarget","getLRTarget","sign","l","rect","DrawBox","lst","push","canvas","getContext","forEach"],"mappings":"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","sourcesContent":["const _pi6 = Math.PI / 6;   //30deg\n// const _pi2 = Math.PI / 2;   //90deg\n// const _3pi2 = 3 * _pi2;     //270deg\nconst _2pi = 2 * Math.PI;   //360deg\n\nfunction getAngle(x1, y1, x2, y2) {\n    let dx = x2 - x1;\n    let dy = y2 - y1;\n    return Math.atan2(dy, dx);\n}\n\nfunction normalizeDegree(deg) {\n    if (deg > 360)\n        deg %= 360;\n    else if (deg < 0)\n        deg = deg % 360 + 360;\n    return deg;\n}\n\nfunction normalizeRadian(rad) {\n    if (rad > _2pi)\n        rad %= _2pi;\n    else if (rad < 0)\n        rad = rad % _2pi + _2pi;\n    return rad;\n}\n\n// function rad2Deg(rad) {\n//     return 180 * rad / Math.PI;\n// }\n\nfunction deg2Rad(deg) {\n    return Math.PI * normalizeDegree(deg) / 180;\n}\n\nclass Shape {\n    static colors = {\n        'green': ['rgb(51, 204, 51)', 'rgb(0, 153, 51)'],\n        'blue': ['rgb(51, 102, 255)', 'rgb(0, 0, 255)'],\n        'red': ['rgb(255,0,0)', 'rgb(137,16,16)'],\n        'yellow': ['rgb(255, 255, 102)', 'rgb(255, 204, 0)'],\n        'purple': ['rgb(153, 51, 255)', 'rgb(121,7,191)'],\n        'brown': ['rgb(153, 102, 0)', 'rgb(102, 51, 0)'],\n        'orange': ['rgb(255, 153, 51)', 'rgb(255, 102, 0)'],\n        'pink': ['rgb(255, 102, 153)', 'rgb(255, 51, 153)'],\n    };\n\n    constructor() {\n        this.fillColor = undefined;\n        this.label = undefined;\n        this.strokeWidth = 0;\n        this.strokeColor = '#000';\n        this.strokeStyle = [1, 0];\n        this.offset = [0, 0];\n        this.basePosition = [0, 0];\n        this.xy = [0, 0];\n    }\n\n    /**\n     * calculate final position\n     */\n    calculateFinalPosition() {\n        this.xy = [this.basePosition[0] + this.offset[0], this.basePosition[1] + this.offset[1]];\n    }\n\n    /**\n     * @param fillColor internal color. ex. 'black' or '#000' or rgb(0,0,0) or hsl(0,0%,0%)\n     * @returns {Shape}\n     */\n    setFillColor(fillColor) {\n        this.fillColor = fillColor;\n        return this;\n    }\n\n    /**\n     * @param strokeWidth int value\n     * @returns {Shape}\n     */\n    setStrokeWidth(strokeWidth) {\n        this.strokeWidth = strokeWidth;\n        return this;\n    }\n\n    /**\n     * set both fill color and stroke color\n     * @param color [green, blue, red, yellow, purple, brown, orange, pink]\n     * @return {Shape}\n     */\n    setColor(color) {\n        this.setFillColor(Shape.colors[color][0]);\n        this.setStrokeColor(Shape.colors[color][1]);\n        return this;\n    }\n\n    /**\n     * @param strokeColor stroke color. ex. 'black' or '#000' or rgb(0,0,0) or hsl(0,0%,0%)\n     * @returns {Shape}\n     */\n    setStrokeColor(strokeColor) {\n        this.strokeColor = strokeColor;\n        return this;\n    }\n\n    /**\n     * make line dashed\n     * @param strokeStyle [int,int]. It means [fill, empty]\n     * @returns {Shape}\n     */\n    setStrokeStyle(strokeStyle) {\n        this.strokeStyle = strokeStyle;\n        return this;\n    }\n\n    /**\n     * label is going to be shown at center of this shape\n     * @param label string or Text object\n     * @returns {Shape}\n     */\n    setLabel(label) {\n        if (typeof label === \"string\") {\n            label = new Text()\n                .setPosition(this.getCenterPoint())\n                .setLabel(label)\n        }\n        this.label = label;\n        return this;\n    }\n\n    /**\n     * @param position [x,y]\n     * @returns {Shape}\n     */\n    setPosition(position) {\n        this.basePosition = position;\n        this.calculateFinalPosition();\n        return this;\n    }\n\n    /**\n     * @param offset [xOffset,yOffset]\n     * @returns {Shape}\n     */\n    setOffset(offset) {\n        this.offset = offset;\n        this.calculateFinalPosition();\n        return this;\n    }\n\n    /**\n     * @param shape another shape object\n     * @returns {Shape}\n     */\n    alignTo(shape) {\n        this.setPosition(shape.getCenterPoint());\n        return this;\n    }\n\n    /**\n     * get final position\n     * @returns {*[]}\n     */\n    getPosition() {\n        return this.xy;\n    }\n\n    /**\n     * get center point of this shape\n     */\n    getCenterPoint() {\n        return this.getPosition();\n    }\n\n    getExternalPoint(angle, gap) {\n        return this.getPosition();\n    }\n\n    /**\n     * render label object\n     * @param ctx\n     */\n    showLabel(ctx) {\n        let p = this.getCenterPoint();\n        this.label.setPosition(p);\n        this.label.render(ctx);\n    }\n\n    /**\n     * apply configurations\n     * @param canvasCtx\n     */\n    render(canvasCtx) {\n        canvasCtx.fillStyle = this.fillColor;\n        canvasCtx.lineWidth = this.strokeWidth;\n        canvasCtx.strokeStyle = this.strokeColor;\n        canvasCtx.setLineDash(this.strokeStyle);\n        if (this.fillColor)\n            canvasCtx.fill();\n        if (this.strokeWidth > 0)\n            canvasCtx.stroke();\n        if (this.label)\n            this.showLabel(canvasCtx);\n    }\n}\n\nexport class Text extends Shape {\n    constructor() {\n        super();\n        this.setFillColor('black');\n        this.setFontSize('12px');\n        this.setFontStyle('');\n    }\n\n    setLabel(label) {\n        this.txt = label;\n        return this;\n    }\n\n    /**\n     * @param fontSize ex. 12px\n     * @returns {Text}\n     */\n    setFontSize(fontSize) {\n        this.fontSize = fontSize;\n        return this;\n    }\n\n    /**\n     * @param fontStyle ex. 'italic' or 'bold' or both 'italic bold'\n     * * @returns {Text}\n     */\n    setFontStyle(fontStyle) {\n        this.fontStyle = fontStyle;\n        return this;\n    }\n\n    render(canvasCtx) {\n        canvasCtx.beginPath();\n        super.render(canvasCtx);\n        canvasCtx.font = this.fontStyle + ' ' + this.fontSize + \" Arial\";\n        canvasCtx.textAlign = \"center\";\n        let c = this.getPosition();\n        canvasCtx.fillText(this.txt, c[0], c[1]);\n        canvasCtx.closePath();\n    }\n}\n\nexport class Circle extends Shape {\n\n    setRadius(radius) {\n        this.r = radius;\n        return this;\n    }\n\n    getExternalPoint(angle, gap) {\n        let c = this.getPosition();\n        return [c[0] + (this.r + gap) * Math.cos(angle), c[1] + (this.r + gap) * Math.sin(angle)]\n    }\n\n    render(canvasCtx) {\n        canvasCtx.beginPath();\n        let c = this.getPosition();\n        canvasCtx.arc(c[0], c[1], this.r, 0, _2pi);\n        canvasCtx.closePath();\n        super.render(canvasCtx);\n    }\n}\n\nexport class Line extends Shape {\n    constructor() {\n        super();\n        this.setStrokeWidth(1);\n    }\n\n    /**\n     * @param shape1 shape 1\n     * @param shape2 shape 2\n     * @param gap the gap between line and target shapes. gap>=0\n     */\n    between(shape1, shape2, gap = 0) {\n        let c1 = shape1.getCenterPoint();\n        let c2 = shape2.getCenterPoint();\n        c1 = shape1.getExternalPoint(getAngle(c1[0], c1[1], c2[0], c2[1]), gap);\n        c2 = shape2.getExternalPoint(getAngle(c2[0], c2[1], c1[0], c1[1]), gap);\n        this.setPosition(c1);\n        this.lineTo(c2);\n        return this;\n    }\n\n    /**\n     * @param point [x,y] or [intR, length] for radian or [intD, length] for degree\n     */\n    lineTo(point) {\n        if (typeof point[0] === 'string') {\n            let i = point[0].length - 1;\n            let c = point[0][i];\n            let v = Number(point[0].substring(0, i));\n            if (c === 'R' || c === 'r') {\n                this.secondP = this.getTargetPoint(v, point[1]);\n            } else if (c === 'D' || c === 'd') {\n                this.secondP = this.getTargetPoint(deg2Rad(v), point[1]);\n            } else {\n                throw new Error('wrong input');\n            }\n        } else {\n            this.secondP = point;\n        }\n    }\n\n    getTargetPoint(r, d) {\n        let p = this.getPosition();\n        return [p[0] + Math.cos(r) * d, p[1] + Math.sin(r) * d];\n    }\n\n    getCenterPoint() {\n        let p = this.getPosition();\n        return [(p[0] + this.secondP[0]) / 2, (p[1] + this.secondP[1]) / 2]\n    }\n\n    /**\n     * show arrows on the line\n     * @param direction 0 or 1\n     * @param places array of float values, each is 0 - 1;\n     * @return Shape\n     */\n    showArrow(direction, places) {\n        this.direction = direction;\n        this.places = places;\n        return this;\n    }\n\n    drawArrow(canvasCtx, length, angle, x, y) {\n        canvasCtx.beginPath();\n        let p1 = [x + length * Math.cos(angle - _pi6), y + length * Math.sin(angle - _pi6)];\n        let p2 = [x + length * Math.cos(angle + _pi6), y + length * Math.sin(angle + _pi6)];\n        canvasCtx.moveTo(x, y);\n        canvasCtx.lineTo(p1[0], p1[1]);\n        canvasCtx.lineTo(p2[0], p2[1]);\n        canvasCtx.closePath();\n        super.render(canvasCtx);\n    }\n\n    render(canvasCtx) {\n        let p1 = this.getPosition();\n        canvasCtx.beginPath();\n        canvasCtx.moveTo(p1[0], p1[1]);\n        canvasCtx.lineTo(this.secondP[0], this.secondP[1]);\n        canvasCtx.closePath();\n        super.render(canvasCtx);\n        if (this.direction !== undefined && this.places !== undefined) {\n            if (!this.places[0])\n                this.places = [this.places];\n            let angle = this.direction ? getAngle(this.secondP[0], this.secondP[1], p1[0], p1[1]) : getAngle(p1[0], p1[1], this.secondP[0], this.secondP[1]);\n            for (let i = 0; i < this.places.length; i++) {\n                let x = p1[0] + (this.secondP[0] - p1[0]) * this.places[i];\n                let y = p1[1] + (this.secondP[1] - p1[1]) * this.places[i];\n                this.drawArrow(canvasCtx, 10, angle, x, y);\n            }\n        }\n    }\n}\n\nexport class Rectangle extends Shape {\n\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n\n    getCenterPoint() {\n        let p = this.getPosition();\n        return [p[0] + this.width / 2, p[1] + this.height / 2]\n    }\n\n    getExternalPoint(angle, gap) {\n        let c = this.getCenterPoint();\n        let p = this.getPosition();\n        let rbc = getAngle(c[0], c[1], p[0] + this.width, p[1] + this.height);//right-bottom corner\n        let lbc = Math.PI - rbc;//left-bottom corner\n        let ltc = Math.PI + rbc;//left-top corner\n        let rtc = _2pi - rbc;//right-top corner\n\n        angle = normalizeRadian(angle);//get angle between 0 - ~629\n\n        if (angle >= rbc && angle < lbc) {//cross bottom edge\n            return this.getTBTarget(c, angle, gap, 1);\n        } else if (angle >= lbc && angle < ltc) {//cross left edge\n            return this.getLRTarget(c, angle, gap, -1);\n        } else if (angle >= ltc && angle < rtc) {//cross top edge\n            return this.getTBTarget(c, angle, gap, -1);\n        } else {//cross right edge\n            return this.getLRTarget(c, angle, gap, 1);\n        }\n    }\n\n    getTBTarget(c, angle, gap, sign) {\n        let l = (this.height / 2) / Math.sin(angle);\n        l += sign * gap;\n        return [c[0] + sign * l * Math.cos(angle), c[1] + sign * l * Math.sin(angle)];\n    }\n\n    getLRTarget(c, angle, gap, sign) {\n        let l = (this.width / 2) / Math.cos(angle)\n        l += sign * gap;\n        return [c[0] + sign * l * Math.cos(angle), c[1] + sign * l * Math.sin(angle)];\n    }\n\n    render(canvasCtx) {\n        canvasCtx.beginPath();\n        let p = this.getPosition();\n        canvasCtx.rect(p[0], p[1], this.width, this.height);\n        canvasCtx.closePath();\n        super.render(canvasCtx);\n    }\n}\n\nexport class DrawBox {\n    lst = [];\n\n    addShape(shape) {\n        this.lst.push(shape);\n        return this;\n    }\n\n    render(canvas) {\n        let ctx = canvas.getContext('2d');\n        this.lst.forEach(v => v.render(ctx));\n    }\n}"]},"metadata":{},"sourceType":"module"}