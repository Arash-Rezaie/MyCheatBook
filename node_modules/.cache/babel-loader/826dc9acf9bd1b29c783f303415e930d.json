{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/arash/usb_stick/my-cheat-book2/src/components/float.js\";\nimport React from \"react\";\n/**\n * !!unsafe!!\n * Chrome and Firefox result are not the same when you use float for texts. It is recommended to hire this component on fixed coordination elements such as images\n * props:<br>\n *     l:number<br>\n *     t:number<br>\n *     edge:[top,right,bottom,left]<br>\n *\n */\n\nexport class Float extends React.Component {\n  constructor(props) {\n    super(props);\n    if (this.props.lineTo) this.r = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.lineTo) this.drawLink();\n  }\n\n  getDistance(p1, p2) {\n    return Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n  }\n\n  drawLink() {\n    let viewInfo = this.prepareView();\n    let targetPoint = this.getBestTargetPoint(viewInfo.anchor, viewInfo.contentRect);\n    let points = this.getLine(viewInfo.anchor, targetPoint.coordination, targetPoint.edge);\n    let ctx = viewInfo.canvasElm.getContext('2d');\n    this.drawCircle(ctx, points[0]);\n    this.drawCircle(ctx, points[points.length - 1]);\n    this.drawLine(ctx, points);\n  }\n\n  prepareView() {\n    let cr = this.r.current.getBoundingClientRect();\n    let canvasElm = this.r.current.previousSibling;\n    let vr = canvasElm.getBoundingClientRect();\n    let rr = {\n      l: Math.min(vr.left, cr.left),\n      r: Math.max(vr.right, cr.right) + Float.dtPadding,\n      t: Math.min(vr.top, cr.top),\n      b: Math.max(vr.bottom, cr.bottom) + Float.dtPadding\n    };\n    rr.w = rr.r - rr.l;\n    rr.h = rr.b - rr.t;\n    let rootElm = this.r.current.parentElement;\n    rootElm.style.width = rr.w;\n    rootElm.style.height = rr.h;\n    canvasElm.style.left = 0;\n    canvasElm.style.top = 0;\n    canvasElm.width = rr.w;\n    canvasElm.height = rr.h;\n    return {\n      canvasElm: canvasElm,\n      anchor: [this.props.lineTo[0] - rootElm.offsetLeft, this.props.lineTo[1] - rootElm.offsetTop],\n      contentRect: {\n        left: this.r.current.offsetLeft,\n        top: this.r.current.offsetTop,\n        right: this.r.current.offsetLeft + cr.width,\n        bottom: this.r.current.offsetTop + cr.height\n      }\n    };\n  }\n\n  getBestTargetPoint(anchor, targetRect) {\n    let centerPoint = [(targetRect.left + targetRect.right) / 2, (targetRect.top + targetRect.bottom) / 2];\n    let pointsToCheck = {\n      left: [targetRect.left, centerPoint[1]],\n      //left edge center\n      right: [targetRect.right, centerPoint[1]],\n      //right edge center\n      top: [centerPoint[0], targetRect.top],\n      //top edge center\n      bottom: [centerPoint[0], targetRect.bottom] //bottom edge center\n\n    };\n    let selectedEdge;\n\n    if (this.props.edge) {\n      selectedEdge = this.props.edge;\n    } else {\n      let minD = Infinity;\n      let e, d;\n\n      for (e in pointsToCheck) {\n        d = this.getDistance(anchor, pointsToCheck[e]);\n\n        if (d < minD) {\n          minD = d;\n          selectedEdge = e;\n        }\n      }\n    }\n\n    return {\n      edge: selectedEdge,\n      coordination: pointsToCheck[selectedEdge]\n    };\n  }\n\n  getLine(p1, p2, edge) {\n    return [p1, edge === 'left' || edge === 'right' ? [p1[0] + (p2[0] - p1[0]) / 3, p2[1]] : [p2[0], p1[1] + (p2[1] - p1[1]) / 3], p2];\n  }\n\n  drawCircle(ctx, p) {\n    ctx.beginPath();\n    ctx.arc(p[0], p[1], Float.padding, 0, 2 * Math.PI, false);\n    ctx.fillStyle = Float.color;\n    ctx.fill();\n  }\n\n  drawLine(ctx, p) {\n    ctx.moveTo(p[0][0], p[0][1]);\n\n    for (let i = 1; i < p.length; i++) {\n      ctx.lineTo(p[i][0], p[i][1]);\n    }\n\n    ctx.strokeStyle = Float.color;\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  }\n\n  render() {\n    let view;\n\n    if (this.props.lineTo) {\n      let rr = {\n        l: Math.min(this.props.lineTo[0], this.props.l) - Float.tPadding,\n        t: Math.min(this.props.lineTo[1], this.props.t) - Float.tPadding\n      }; //root rect\n\n      let cr = {\n        l: this.props.l - rr.l,\n        t: this.props.t - rr.t\n      }; //canvas rect\n\n      let vr = {\n        l: this.props.lineTo[0] - rr.l,\n        t: this.props.lineTo[1] - rr.t\n      }; //view rect\n\n      view = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'float-root',\n        style: {\n          left: rr.l,\n          top: rr.t\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          width: 0,\n          height: 0,\n          style: {\n            left: vr.l,\n            top: vr.t\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'float',\n          ref: this.r,\n          style: {\n            left: cr.l,\n            top: cr.t\n          },\n          children: this.props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this);\n    } else {\n      view = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'float',\n        style: {\n          left: this.props.l,\n          top: this.props.t\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 20\n      }, this);\n    }\n\n    return view;\n  }\n\n}\nFloat.padding = 2;\nFloat.tPadding = 3 * Float.padding;\nFloat.dtPadding = 2 * Float.tPadding;\nFloat.color = '#1d72aa';","map":{"version":3,"sources":["/media/arash/usb_stick/my-cheat-book2/src/components/float.js"],"names":["React","Float","Component","constructor","props","lineTo","r","createRef","componentDidMount","drawLink","getDistance","p1","p2","Math","pow","viewInfo","prepareView","targetPoint","getBestTargetPoint","anchor","contentRect","points","getLine","coordination","edge","ctx","canvasElm","getContext","drawCircle","length","drawLine","cr","current","getBoundingClientRect","previousSibling","vr","rr","l","min","left","max","right","dtPadding","t","top","b","bottom","w","h","rootElm","parentElement","style","width","height","offsetLeft","offsetTop","targetRect","centerPoint","pointsToCheck","selectedEdge","minD","Infinity","e","d","p","beginPath","arc","padding","PI","fillStyle","color","fill","moveTo","i","strokeStyle","lineWidth","stroke","render","view","tPadding","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAMvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAI,KAAKA,KAAL,CAAWC,MAAf,EACI,KAAKC,CAAL,gBAASN,KAAK,CAACO,SAAN,EAAT;AACP;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKJ,KAAL,CAAWC,MAAf,EACI,KAAKI,QAAL;AACP;;AAEDC,EAAAA,WAAW,CAACC,EAAD,EAAKC,EAAL,EAAS;AAChB,WAAOC,IAAI,CAACC,GAAL,CAASF,EAAE,CAAC,CAAD,CAAF,GAAQD,EAAE,CAAC,CAAD,CAAnB,EAAwB,CAAxB,IAA6BE,IAAI,CAACC,GAAL,CAASF,EAAE,CAAC,CAAD,CAAF,GAAQD,EAAE,CAAC,CAAD,CAAnB,EAAwB,CAAxB,CAApC;AACH;;AAEDF,EAAAA,QAAQ,GAAG;AACP,QAAIM,QAAQ,GAAG,KAAKC,WAAL,EAAf;AACA,QAAIC,WAAW,GAAG,KAAKC,kBAAL,CAAwBH,QAAQ,CAACI,MAAjC,EAAyCJ,QAAQ,CAACK,WAAlD,CAAlB;AACA,QAAIC,MAAM,GAAG,KAAKC,OAAL,CAAaP,QAAQ,CAACI,MAAtB,EAA8BF,WAAW,CAACM,YAA1C,EAAwDN,WAAW,CAACO,IAApE,CAAb;AAEA,QAAIC,GAAG,GAAGV,QAAQ,CAACW,SAAT,CAAmBC,UAAnB,CAA8B,IAA9B,CAAV;AACA,SAAKC,UAAL,CAAgBH,GAAhB,EAAqBJ,MAAM,CAAC,CAAD,CAA3B;AACA,SAAKO,UAAL,CAAgBH,GAAhB,EAAqBJ,MAAM,CAACA,MAAM,CAACQ,MAAP,GAAgB,CAAjB,CAA3B;AACA,SAAKC,QAAL,CAAcL,GAAd,EAAmBJ,MAAnB;AACH;;AAEDL,EAAAA,WAAW,GAAG;AACV,QAAIe,EAAE,GAAG,KAAKzB,CAAL,CAAO0B,OAAP,CAAeC,qBAAf,EAAT;AACA,QAAIP,SAAS,GAAG,KAAKpB,CAAL,CAAO0B,OAAP,CAAeE,eAA/B;AACA,QAAIC,EAAE,GAAGT,SAAS,CAACO,qBAAV,EAAT;AACA,QAAIG,EAAE,GAAG;AACLC,MAAAA,CAAC,EAAExB,IAAI,CAACyB,GAAL,CAASH,EAAE,CAACI,IAAZ,EAAkBR,EAAE,CAACQ,IAArB,CADE;AAELjC,MAAAA,CAAC,EAAEO,IAAI,CAAC2B,GAAL,CAASL,EAAE,CAACM,KAAZ,EAAmBV,EAAE,CAACU,KAAtB,IAA+BxC,KAAK,CAACyC,SAFnC;AAGLC,MAAAA,CAAC,EAAE9B,IAAI,CAACyB,GAAL,CAASH,EAAE,CAACS,GAAZ,EAAiBb,EAAE,CAACa,GAApB,CAHE;AAILC,MAAAA,CAAC,EAAEhC,IAAI,CAAC2B,GAAL,CAASL,EAAE,CAACW,MAAZ,EAAoBf,EAAE,CAACe,MAAvB,IAAiC7C,KAAK,CAACyC;AAJrC,KAAT;AAMAN,IAAAA,EAAE,CAACW,CAAH,GAAOX,EAAE,CAAC9B,CAAH,GAAO8B,EAAE,CAACC,CAAjB;AACAD,IAAAA,EAAE,CAACY,CAAH,GAAOZ,EAAE,CAACS,CAAH,GAAOT,EAAE,CAACO,CAAjB;AAEA,QAAIM,OAAO,GAAG,KAAK3C,CAAL,CAAO0B,OAAP,CAAekB,aAA7B;AACAD,IAAAA,OAAO,CAACE,KAAR,CAAcC,KAAd,GAAsBhB,EAAE,CAACW,CAAzB;AACAE,IAAAA,OAAO,CAACE,KAAR,CAAcE,MAAd,GAAuBjB,EAAE,CAACY,CAA1B;AAEAtB,IAAAA,SAAS,CAACyB,KAAV,CAAgBZ,IAAhB,GAAuB,CAAvB;AACAb,IAAAA,SAAS,CAACyB,KAAV,CAAgBP,GAAhB,GAAsB,CAAtB;AACAlB,IAAAA,SAAS,CAAC0B,KAAV,GAAkBhB,EAAE,CAACW,CAArB;AACArB,IAAAA,SAAS,CAAC2B,MAAV,GAAmBjB,EAAE,CAACY,CAAtB;AACA,WAAO;AACHtB,MAAAA,SAAS,EAAEA,SADR;AAEHP,MAAAA,MAAM,EAAE,CAAC,KAAKf,KAAL,CAAWC,MAAX,CAAkB,CAAlB,IAAuB4C,OAAO,CAACK,UAAhC,EAA4C,KAAKlD,KAAL,CAAWC,MAAX,CAAkB,CAAlB,IAAuB4C,OAAO,CAACM,SAA3E,CAFL;AAGHnC,MAAAA,WAAW,EAAE;AACTmB,QAAAA,IAAI,EAAE,KAAKjC,CAAL,CAAO0B,OAAP,CAAesB,UADZ;AAETV,QAAAA,GAAG,EAAE,KAAKtC,CAAL,CAAO0B,OAAP,CAAeuB,SAFX;AAGTd,QAAAA,KAAK,EAAE,KAAKnC,CAAL,CAAO0B,OAAP,CAAesB,UAAf,GAA4BvB,EAAE,CAACqB,KAH7B;AAITN,QAAAA,MAAM,EAAE,KAAKxC,CAAL,CAAO0B,OAAP,CAAeuB,SAAf,GAA2BxB,EAAE,CAACsB;AAJ7B;AAHV,KAAP;AAUH;;AAEDnC,EAAAA,kBAAkB,CAACC,MAAD,EAASqC,UAAT,EAAqB;AACnC,QAAIC,WAAW,GAAG,CAAC,CAACD,UAAU,CAACjB,IAAX,GAAkBiB,UAAU,CAACf,KAA9B,IAAuC,CAAxC,EAA2C,CAACe,UAAU,CAACZ,GAAX,GAAiBY,UAAU,CAACV,MAA7B,IAAuC,CAAlF,CAAlB;AACA,QAAIY,aAAa,GAAG;AAChBnB,MAAAA,IAAI,EAAE,CAACiB,UAAU,CAACjB,IAAZ,EAAkBkB,WAAW,CAAC,CAAD,CAA7B,CADU;AACwB;AACxChB,MAAAA,KAAK,EAAE,CAACe,UAAU,CAACf,KAAZ,EAAmBgB,WAAW,CAAC,CAAD,CAA9B,CAFS;AAE0B;AAC1Cb,MAAAA,GAAG,EAAE,CAACa,WAAW,CAAC,CAAD,CAAZ,EAAiBD,UAAU,CAACZ,GAA5B,CAHW;AAGsB;AACtCE,MAAAA,MAAM,EAAE,CAACW,WAAW,CAAC,CAAD,CAAZ,EAAiBD,UAAU,CAACV,MAA5B,CAJQ,CAI4B;;AAJ5B,KAApB;AAOA,QAAIa,YAAJ;;AACA,QAAI,KAAKvD,KAAL,CAAWoB,IAAf,EAAqB;AACjBmC,MAAAA,YAAY,GAAG,KAAKvD,KAAL,CAAWoB,IAA1B;AACH,KAFD,MAEO;AACH,UAAIoC,IAAI,GAAGC,QAAX;AACA,UAAIC,CAAJ,EAAOC,CAAP;;AACA,WAAKD,CAAL,IAAUJ,aAAV,EAAyB;AACrBK,QAAAA,CAAC,GAAG,KAAKrD,WAAL,CAAiBS,MAAjB,EAAyBuC,aAAa,CAACI,CAAD,CAAtC,CAAJ;;AACA,YAAIC,CAAC,GAAGH,IAAR,EAAc;AACVA,UAAAA,IAAI,GAAGG,CAAP;AACAJ,UAAAA,YAAY,GAAGG,CAAf;AACH;AACJ;AACJ;;AAED,WAAO;AAACtC,MAAAA,IAAI,EAAEmC,YAAP;AAAqBpC,MAAAA,YAAY,EAAEmC,aAAa,CAACC,YAAD;AAAhD,KAAP;AACH;;AAEDrC,EAAAA,OAAO,CAACX,EAAD,EAAKC,EAAL,EAASY,IAAT,EAAe;AAClB,WAAO,CACHb,EADG,EAEFa,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,OAA7B,GAAwC,CAACb,EAAE,CAAC,CAAD,CAAF,GAAQ,CAACC,EAAE,CAAC,CAAD,CAAF,GAAQD,EAAE,CAAC,CAAD,CAAX,IAAkB,CAA3B,EAA8BC,EAAE,CAAC,CAAD,CAAhC,CAAxC,GAA+E,CAACA,EAAE,CAAC,CAAD,CAAH,EAAQD,EAAE,CAAC,CAAD,CAAF,GAAQ,CAACC,EAAE,CAAC,CAAD,CAAF,GAAQD,EAAE,CAAC,CAAD,CAAX,IAAkB,CAAlC,CAF5E,EAGHC,EAHG,CAAP;AAIH;;AAEDgB,EAAAA,UAAU,CAACH,GAAD,EAAMuC,CAAN,EAAS;AACfvC,IAAAA,GAAG,CAACwC,SAAJ;AACAxC,IAAAA,GAAG,CAACyC,GAAJ,CAAQF,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,EAAoB/D,KAAK,CAACkE,OAA1B,EAAmC,CAAnC,EAAsC,IAAItD,IAAI,CAACuD,EAA/C,EAAmD,KAAnD;AACA3C,IAAAA,GAAG,CAAC4C,SAAJ,GAAgBpE,KAAK,CAACqE,KAAtB;AACA7C,IAAAA,GAAG,CAAC8C,IAAJ;AACH;;AAEDzC,EAAAA,QAAQ,CAACL,GAAD,EAAMuC,CAAN,EAAS;AACbvC,IAAAA,GAAG,CAAC+C,MAAJ,CAAWR,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAX,EAAoBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAApB;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,CAAC,CAACnC,MAAtB,EAA8B4C,CAAC,EAA/B,EAAmC;AAC/BhD,MAAAA,GAAG,CAACpB,MAAJ,CAAW2D,CAAC,CAACS,CAAD,CAAD,CAAK,CAAL,CAAX,EAAoBT,CAAC,CAACS,CAAD,CAAD,CAAK,CAAL,CAApB;AACH;;AACDhD,IAAAA,GAAG,CAACiD,WAAJ,GAAkBzE,KAAK,CAACqE,KAAxB;AACA7C,IAAAA,GAAG,CAACkD,SAAJ,GAAgB,CAAhB;AACAlD,IAAAA,GAAG,CAACmD,MAAJ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAJ;;AACA,QAAI,KAAK1E,KAAL,CAAWC,MAAf,EAAuB;AACnB,UAAI+B,EAAE,GAAG;AACLC,QAAAA,CAAC,EAAExB,IAAI,CAACyB,GAAL,CAAS,KAAKlC,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAT,EAA+B,KAAKD,KAAL,CAAWiC,CAA1C,IAA+CpC,KAAK,CAAC8E,QADnD;AAELpC,QAAAA,CAAC,EAAE9B,IAAI,CAACyB,GAAL,CAAS,KAAKlC,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAT,EAA+B,KAAKD,KAAL,CAAWuC,CAA1C,IAA+C1C,KAAK,CAAC8E;AAFnD,OAAT,CADmB,CAIjB;;AACF,UAAIhD,EAAE,GAAG;AAACM,QAAAA,CAAC,EAAE,KAAKjC,KAAL,CAAWiC,CAAX,GAAeD,EAAE,CAACC,CAAtB;AAAyBM,QAAAA,CAAC,EAAE,KAAKvC,KAAL,CAAWuC,CAAX,GAAeP,EAAE,CAACO;AAA9C,OAAT,CALmB,CAKuC;;AAC1D,UAAIR,EAAE,GAAG;AAACE,QAAAA,CAAC,EAAE,KAAKjC,KAAL,CAAWC,MAAX,CAAkB,CAAlB,IAAuB+B,EAAE,CAACC,CAA9B;AAAiCM,QAAAA,CAAC,EAAE,KAAKvC,KAAL,CAAWC,MAAX,CAAkB,CAAlB,IAAuB+B,EAAE,CAACO;AAA9D,OAAT,CANmB,CAMuD;;AAC1EmC,MAAAA,IAAI,gBACA;AAAK,QAAA,SAAS,EAAE,YAAhB;AAA8B,QAAA,KAAK,EAAE;AAACvC,UAAAA,IAAI,EAAEH,EAAE,CAACC,CAAV;AAAaO,UAAAA,GAAG,EAAER,EAAE,CAACO;AAArB,SAArC;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAE,CAAf;AAAkB,UAAA,MAAM,EAAE,CAA1B;AAA6B,UAAA,KAAK,EAAE;AAACJ,YAAAA,IAAI,EAAEJ,EAAE,CAACE,CAAV;AAAaO,YAAAA,GAAG,EAAET,EAAE,CAACQ;AAArB;AAApC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAE,OAAhB;AAAyB,UAAA,GAAG,EAAE,KAAKrC,CAAnC;AACK,UAAA,KAAK,EAAE;AAACiC,YAAAA,IAAI,EAAER,EAAE,CAACM,CAAV;AAAaO,YAAAA,GAAG,EAAEb,EAAE,CAACY;AAArB,WADZ;AAAA,oBACsC,KAAKvC,KAAL,CAAW4E;AADjD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAfD,MAeO;AACHF,MAAAA,IAAI,gBAAG;AAAK,QAAA,SAAS,EAAE,OAAhB;AACK,QAAA,KAAK,EAAE;AAACvC,UAAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWiC,CAAlB;AAAqBO,UAAAA,GAAG,EAAE,KAAKxC,KAAL,CAAWuC;AAArC,SADZ;AAAA,kBACsD,KAAKvC,KAAL,CAAW4E;AADjE;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH;;AACD,WAAOF,IAAP;AACH;;AA1IsC;AAA9B7E,K,CACFkE,O,GAAU,C;AADRlE,K,CAEF8E,Q,GAAW,IAAI9E,KAAK,CAACkE,O;AAFnBlE,K,CAGFyC,S,GAAY,IAAIzC,KAAK,CAAC8E,Q;AAHpB9E,K,CAIFqE,K,GAAQ,S","sourcesContent":["import React from \"react\";\n\n/**\n * !!unsafe!!\n * Chrome and Firefox result are not the same when you use float for texts. It is recommended to hire this component on fixed coordination elements such as images\n * props:<br>\n *     l:number<br>\n *     t:number<br>\n *     edge:[top,right,bottom,left]<br>\n *\n */\nexport class Float extends React.Component {\n    static padding = 2;\n    static tPadding = 3 * Float.padding;\n    static dtPadding = 2 * Float.tPadding;\n    static color = '#1d72aa';\n\n    constructor(props) {\n        super(props);\n        if (this.props.lineTo)\n            this.r = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.lineTo)\n            this.drawLink();\n    }\n\n    getDistance(p1, p2) {\n        return Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    }\n\n    drawLink() {\n        let viewInfo = this.prepareView();\n        let targetPoint = this.getBestTargetPoint(viewInfo.anchor, viewInfo.contentRect);\n        let points = this.getLine(viewInfo.anchor, targetPoint.coordination, targetPoint.edge);\n\n        let ctx = viewInfo.canvasElm.getContext('2d');\n        this.drawCircle(ctx, points[0]);\n        this.drawCircle(ctx, points[points.length - 1]);\n        this.drawLine(ctx, points);\n    }\n\n    prepareView() {\n        let cr = this.r.current.getBoundingClientRect();\n        let canvasElm = this.r.current.previousSibling;\n        let vr = canvasElm.getBoundingClientRect();\n        let rr = {\n            l: Math.min(vr.left, cr.left),\n            r: Math.max(vr.right, cr.right) + Float.dtPadding,\n            t: Math.min(vr.top, cr.top),\n            b: Math.max(vr.bottom, cr.bottom) + Float.dtPadding\n        };\n        rr.w = rr.r - rr.l;\n        rr.h = rr.b - rr.t;\n\n        let rootElm = this.r.current.parentElement;\n        rootElm.style.width = rr.w;\n        rootElm.style.height = rr.h;\n\n        canvasElm.style.left = 0;\n        canvasElm.style.top = 0;\n        canvasElm.width = rr.w;\n        canvasElm.height = rr.h;\n        return {\n            canvasElm: canvasElm,\n            anchor: [this.props.lineTo[0] - rootElm.offsetLeft, this.props.lineTo[1] - rootElm.offsetTop],\n            contentRect: {\n                left: this.r.current.offsetLeft,\n                top: this.r.current.offsetTop,\n                right: this.r.current.offsetLeft + cr.width,\n                bottom: this.r.current.offsetTop + cr.height\n            }\n        };\n    }\n\n    getBestTargetPoint(anchor, targetRect) {\n        let centerPoint = [(targetRect.left + targetRect.right) / 2, (targetRect.top + targetRect.bottom) / 2,];\n        let pointsToCheck = {\n            left: [targetRect.left, centerPoint[1]],//left edge center\n            right: [targetRect.right, centerPoint[1]],//right edge center\n            top: [centerPoint[0], targetRect.top],//top edge center\n            bottom: [centerPoint[0], targetRect.bottom],//bottom edge center\n        };\n\n        let selectedEdge;\n        if (this.props.edge) {\n            selectedEdge = this.props.edge;\n        } else {\n            let minD = Infinity;\n            let e, d;\n            for (e in pointsToCheck) {\n                d = this.getDistance(anchor, pointsToCheck[e]);\n                if (d < minD) {\n                    minD = d;\n                    selectedEdge = e;\n                }\n            }\n        }\n\n        return {edge: selectedEdge, coordination: pointsToCheck[selectedEdge]};\n    }\n\n    getLine(p1, p2, edge) {\n        return [\n            p1,\n            (edge === 'left' || edge === 'right') ? [p1[0] + (p2[0] - p1[0]) / 3, p2[1]] : [p2[0], p1[1] + (p2[1] - p1[1]) / 3],\n            p2];\n    }\n\n    drawCircle(ctx, p) {\n        ctx.beginPath();\n        ctx.arc(p[0], p[1], Float.padding, 0, 2 * Math.PI, false);\n        ctx.fillStyle = Float.color;\n        ctx.fill();\n    };\n\n    drawLine(ctx, p) {\n        ctx.moveTo(p[0][0], p[0][1]);\n        for (let i = 1; i < p.length; i++) {\n            ctx.lineTo(p[i][0], p[i][1]);\n        }\n        ctx.strokeStyle = Float.color;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n    }\n\n    render() {\n        let view;\n        if (this.props.lineTo) {\n            let rr = {\n                l: Math.min(this.props.lineTo[0], this.props.l) - Float.tPadding,\n                t: Math.min(this.props.lineTo[1], this.props.t) - Float.tPadding\n            };//root rect\n            let cr = {l: this.props.l - rr.l, t: this.props.t - rr.t};//canvas rect\n            let vr = {l: this.props.lineTo[0] - rr.l, t: this.props.lineTo[1] - rr.t};//view rect\n            view = (\n                <div className={'float-root'} style={{left: rr.l, top: rr.t}}>\n                    <canvas width={0} height={0} style={{left: vr.l, top: vr.t}}/>\n                    <div className={'float'} ref={this.r}\n                         style={{left: cr.l, top: cr.t}}>{this.props.children}</div>\n                </div>\n            )\n            ;\n        } else {\n            view = <div className={'float'}\n                        style={{left: this.props.l, top: this.props.t}}>{this.props.children}</div>\n        }\n        return view;\n    }\n}"]},"metadata":{},"sourceType":"module"}