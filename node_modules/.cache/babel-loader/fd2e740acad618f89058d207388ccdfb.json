{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/arash/SanDisk/MyCheatBook/src/components/blocks.js\";\nimport React from \"react\";\nimport '../res/styles/highlight.css';\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport java from 'highlight.js/lib/languages/java';\nimport xml from 'highlight.js/lib/languages/xml';\nimport bash from 'highlight.js/lib/languages/bash';\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('java', java);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('bash', bash);\nhljs.initHighlightingOnLoad();\n\nclass Block extends React.Component {\n  getStyleClass() {}\n\n  render() {\n    let extraClsName = this.props.title ? 'block-top-gap ' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'block ' + extraClsName + this.getStyleClass(),\n      style: this.props.style,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'block-header',\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/**\n * @param props title:string\n */\n\n\nexport class Frame extends Block {\n  getStyleClass() {\n    return 'frame';\n  }\n\n}\n\nclass Code extends React.Component {\n  constructor(props) {\n    super(props);\n    this.r = /*#__PURE__*/React.createRef();\n  }\n\n  getStyleClass() {\n    return 'code';\n  }\n\n  getTitleText() {\n    let title = '';\n    if (this.props.title) title = this.getLanguage();\n    if (this.props.description) title += ' (' + this.props.description + ')';\n    return title.length === 0 ? undefined : '- ' + title + ' ---';\n  }\n\n  getLanguage() {}\n\n  componentDidMount() {\n    this.correctIndention();\n    hljs.highlightBlock(this.r.current);\n  }\n\n  correctIndention() {\n    let str = this.r.current.innerHTML;\n    let k,\n        result,\n        indent = 0;\n    let m2 = str.search(/(?<=\\n *)\\S/g); //the first char after \\n\n\n    if (m2 <= 0) {\n      //content is only 1 line\n      result = str.trimStart();\n    } else {\n      //content is more than 1 line\n      let m1 = str.search(/\\n *\\S/g) + 1; //the first \\n\n\n      indent = m2 - m1;\n      m1 = str.search(/(?<=\\S *)\\n/g);\n      result = str.substr(0, m1).trimStart();\n      let l = str.length;\n\n      while (m1 < l) {\n        m2 = str.indexOf('\\n', m1) + 1;\n        k = m1 + indent;\n        if (m2 <= 0) m2 = l;\n        result += k < m2 ? str.substr(k, m2 - k) : '\\n';\n        m1 = m2;\n      }\n    }\n\n    this.r.current.innerHTML = result.trimEnd();\n  }\n\n  countStartingWhitSpace(str, start) {\n    let k;\n\n    for (k = start; k < str.length && str[k] === ' '; k++);\n\n    return k - start;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'code-header',\n        children: this.getTitleText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n        className: this.getLanguage(),\n        ref: this.r,\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/**\n * @param props title:boolean, description:string\n */\n\n\nexport class Java extends Code {\n  getLanguage() {\n    return 'java';\n  }\n\n}\n/**\n * @param props title:boolean, description:string\n */\n\nexport class Xml extends Code {\n  getLanguage() {\n    return 'xml';\n  }\n\n}\n/**\n * @param props title:boolean, description:string\n */\n\nexport class Javascript extends Code {\n  getLanguage() {\n    return 'javascript';\n  }\n\n}\nexport class Bash extends Code {\n  getLanguage() {\n    return 'bash';\n  }\n\n}\n/**\n * @param props title:String\n */\n\nexport class GenericCode extends Code {\n  getLanguage() {\n    return this.props.title;\n  }\n\n}","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/blocks.js"],"names":["React","hljs","javascript","java","xml","bash","registerLanguage","initHighlightingOnLoad","Block","Component","getStyleClass","render","extraClsName","props","title","style","children","Frame","Code","constructor","r","createRef","getTitleText","getLanguage","description","length","undefined","componentDidMount","correctIndention","highlightBlock","current","str","innerHTML","k","result","indent","m2","search","trimStart","m1","substr","l","indexOf","trimEnd","countStartingWhitSpace","start","Java","Xml","Javascript","Bash","GenericCode"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport '../res/styles/highlight.css';\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport java from 'highlight.js/lib/languages/java';\nimport xml from 'highlight.js/lib/languages/xml';\nimport bash from 'highlight.js/lib/languages/bash';\n\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('java', java);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('bash', bash);\nhljs.initHighlightingOnLoad();\n\nclass Block extends React.Component {\n    getStyleClass() {\n    }\n\n    render() {\n        let extraClsName = this.props.title ? 'block-top-gap ' : '';\n        return (\n            <div className={'block ' + extraClsName + this.getStyleClass()} style={this.props.style}>\n                <span className={'block-header'}>{this.props.title}</span>\n                <div>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\n/**\n * @param props title:string\n */\nexport class Frame extends Block {\n    getStyleClass() {\n        return 'frame'\n    }\n}\n\nclass Code extends React.Component {\n    constructor(props) {\n        super(props);\n        this.r = React.createRef();\n    }\n\n    getStyleClass() {\n        return 'code';\n    }\n\n    getTitleText() {\n        let title = '';\n        if (this.props.title)\n            title = this.getLanguage();\n        if (this.props.description)\n            title += ' (' + this.props.description + ')';\n        return title.length === 0 ? undefined : '- ' + title + ' ---';\n    }\n\n    getLanguage() {\n    }\n\n    componentDidMount() {\n        this.correctIndention();\n        hljs.highlightBlock(this.r.current);\n    }\n\n    correctIndention() {\n        let str = this.r.current.innerHTML;\n        let k, result, indent = 0;\n\n        let m2 = str.search(/(?<=\\n *)\\S/g); //the first char after \\n\n        if (m2 <= 0) {//content is only 1 line\n            result = str.trimStart();\n        } else {//content is more than 1 line\n            let m1 = str.search(/\\n *\\S/g) + 1; //the first \\n\n            indent = m2 - m1;\n            m1 = str.search(/(?<=\\S *)\\n/g);\n            result = str.substr(0, m1).trimStart();\n\n            let l = str.length;\n            while (m1 < l) {\n                m2 = str.indexOf('\\n', m1) + 1;\n                k = m1 + indent;\n                if (m2 <= 0)\n                    m2 = l;\n                result += k < m2 ? str.substr(k, m2 - k) : '\\n';\n                m1 = m2;\n            }\n        }\n        this.r.current.innerHTML = result.trimEnd();\n    }\n\n    countStartingWhitSpace(str, start) {\n        let k;\n        for (k = start; k < str.length && str[k] === ' '; k++) ;\n        return k - start;\n    }\n\n    render() {\n        return (\n            <pre>\n                <span className={'code-header'}>{this.getTitleText()}</span>\n                <code className={this.getLanguage()} ref={this.r}>{this.props.children}</code>\n            </pre>\n        )\n    }\n}\n\n/**\n * @param props title:boolean, description:string\n */\nexport class Java extends Code {\n    getLanguage() {\n        return 'java'\n    }\n}\n\n/**\n * @param props title:boolean, description:string\n */\nexport class Xml extends Code {\n    getLanguage() {\n        return 'xml'\n    }\n}\n\n/**\n * @param props title:boolean, description:string\n */\nexport class Javascript extends Code {\n    getLanguage() {\n        return 'javascript'\n    }\n}\n\nexport class Bash extends Code {\n    getLanguage() {\n        return 'bash'\n    }\n}\n\n/**\n * @param props title:String\n */\nexport class GenericCode extends Code {\n    getLanguage() {\n        return this.props.title;\n    }\n}"]},"metadata":{},"sourceType":"module"}