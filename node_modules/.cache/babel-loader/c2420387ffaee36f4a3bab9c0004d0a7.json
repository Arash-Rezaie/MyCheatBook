{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/arash/usb_stick/my-cheat-book/src/contents/tomcat/tomcat-cheats.js\";\nimport React from \"react\";\nimport { Frame, GenericCode } from \"../../components/blocks\";\nimport { Blue, Bullet, Highlight, Important } from \"../../components/components\";\nimport { InfoIcon } from \"../../components/bubble\";\nexport function TomcatCheats() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [getTomcatStructure(), getWeblogicFeatures()]\n  }, void 0, true);\n}\n_c = TomcatCheats;\n\nfunction getTomcatStructure() {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    title: 'Tomcat',\n    children: [/*#__PURE__*/_jsxDEV(InfoIcon, {\n      children: [/*#__PURE__*/_jsxDEV(Blue, {\n        children: \"What is the difference between tomcat, weblogic, jboss, \\u2026?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 88\n      }, this), \"The difference is up to their container. The most important thing about application server is its container.\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Container provides an isolated environment which executes our application along its all dependencies. Therefor any technology inside the application must be supported by the container.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 103\n        }, this), \"For example, consider that tomcat container does not supports EJB. So you can not serve an ejb application with the help of tomcat. To do that, one option is using TomEE.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 96\n        }, this), \"Let's say we are going to include JSF into our application. If you are planning to hire weblogic, then you have to Mojara instead of JSF\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 74\n        }, this), \"In fact each company is free to implement a technology as it's willing but they have to follow a specification. That's why we should take care of hired technologies.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Important, {\n          children: [\"As Tomcat is heavy to load and execute, it is recommended to use \", /*#__PURE__*/_jsxDEV(Highlight, {\n            children: \"Pivotal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), \" or \", /*#__PURE__*/_jsxDEV(Highlight, {\n            children: \"Jetty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 59\n          }, this), \" in development time.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GenericCode, {\n      title: 'Tomcat structure',\n      children: `\n                catalina root\n                ├── bin\n                │   ├── shutdown.bat\n                │   ├── shutdown.sh\n                │   ├── startup.bat\n                │   ├── startup.sh\n                │   ├── ...\n                ├── BUILDING.txt\n                ├── conf\n                │   ├── Catalina\n                │   ├── catalina.policy\n                │   ├── catalina.properties\n                │   ├── context.xml\n                │   ├── jaspic-providers.xml\n                │   ├── jaspic-providers.xsd\n                │   ├── logging.properties\n                │   ├── server.xml\n                │   ├── tomcat-users.xml\n                │   ├── tomcat-users.xsd\n                │   └── web.xml\n                ├── CONTRIBUTING.md\n                ├── lib //All jars in this dir shares among all applications\n                │   ├── servlet-api.jar\n                │   ├── websocket-api.jar\n                │   └── ...\n                ├── LICENSE\n                ├── logs\n                │   ├── catalina.2020-04-05.log\n                │   └── ...\n                ├── NOTICE\n                ├── original libs.zip\n                ├── README.md\n                ├── RELEASE-NOTES\n                ├── RUNNING.txt\n                ├── temp //Tomcat temp files. Useless for us\n                │   └── safeToDelete.tmp\n                ├── webapps //Put war or exploded files here\n                │   ├── docs\n                │   ├── host-manager\n                │   ├── manager\n                │   └── ROOT\n                └── work\n                └── Catalina\n                `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\nfunction getWeblogicFeatures() {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    title: 'weblogic features',\n    children: [/*#__PURE__*/_jsxDEV(Bullet, {\n      title: '1. Coherence:',\n      children: \" cache server for session. Clustering for session, if all servers go down, user will not be logged out.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '2. SLA:',\n      children: \" promises to keep success on a gate way for example 80% and on the other 70%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bullet, {\n      title: '3. CICD:',\n      children: \" let\\u2019s say we update the project,-\\u2192 logged in user will not thrown out and new users will be on new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TomcatCheats\");","map":{"version":3,"sources":["/media/arash/usb_stick/my-cheat-book/src/contents/tomcat/tomcat-cheats.js"],"names":["React","Frame","GenericCode","Blue","Bullet","Highlight","Important","InfoIcon","TomcatCheats","getTomcatStructure","getWeblogicFeatures"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,WAAf,QAAiC,yBAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,SAAjC,QAAiD,6BAAjD;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC3B,sBACI;AAAA,eACKC,kBAAkB,EADvB,EAEKC,mBAAmB,EAFxB;AAAA,kBADJ;AAMH;KAPeF,Y;;AAShB,SAASC,kBAAT,GAA8B;AAC1B,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAE,QAAd;AAAA,4BACI,QAAC,QAAD;AAAA,8BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAC2E;AAAA;AAAA;AAAA;AAAA,cAD3E,+HAKI;AAAA,4NAGsF;AAAA;AAAA;AAAA;AAAA,gBAHtF,6LAK+E;AAAA;AAAA;AAAA;AAAA,gBAL/E,2JAOoD;AAAA;AAAA;AAAA;AAAA,gBAPpD,eAOyD;AAAA;AAAA;AAAA;AAAA,gBAPzD;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAgBI;AAAA,+BAAG,QAAC,SAAD;AAAA,uGACK,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,uBACuC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAqBI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAE,kBAApB;AAAA,gBACM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CY;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuEH;;AAED,SAASC,mBAAT,GAA+B;AAC3B,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAE,mBAAd;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH","sourcesContent":["import React from \"react\";\nimport {Frame, GenericCode} from \"../../components/blocks\";\nimport {Blue, Bullet, Highlight, Important} from \"../../components/components\";\nimport {InfoIcon} from \"../../components/bubble\";\n\nexport function TomcatCheats() {\n    return (\n        <>\n            {getTomcatStructure()}\n            {getWeblogicFeatures()}\n        </>\n    )\n}\n\nfunction getTomcatStructure() {\n    return (\n        <Frame title={'Tomcat'}>\n            <InfoIcon>\n                <Blue>What is the difference between tomcat, weblogic, jboss, …?</Blue><br/>\n                The difference is up to their container. The most important thing about application server is its\n                container.\n\n                <p>\n                    Container provides an isolated environment which executes our application along its all\n                    dependencies.\n                    Therefor any technology inside the application must be supported by the container.<br/>\n                    For example, consider that tomcat container does not supports EJB. So you can not serve an ejb\n                    application with the help of tomcat. To do that, one option is using TomEE.<br/>\n                    Let's say we are going to include JSF into our application. If you are planning to hire\n                    weblogic, then you have to Mojara instead of JSF<br/><br/>\n                    In fact each company is free to implement a technology as it's willing but they have to follow a\n                    specification. That's why we should take care of hired technologies.\n                </p>\n                <p><Important>As Tomcat is heavy to load and execute, it is recommended to\n                    use <Highlight>Pivotal</Highlight> or <Highlight>Jetty</Highlight> in development\n                    time.</Important></p>\n            </InfoIcon>\n            <GenericCode title={'Tomcat structure'}>\n                {`\n                catalina root\n                ├── bin\n                │   ├── shutdown.bat\n                │   ├── shutdown.sh\n                │   ├── startup.bat\n                │   ├── startup.sh\n                │   ├── ...\n                ├── BUILDING.txt\n                ├── conf\n                │   ├── Catalina\n                │   ├── catalina.policy\n                │   ├── catalina.properties\n                │   ├── context.xml\n                │   ├── jaspic-providers.xml\n                │   ├── jaspic-providers.xsd\n                │   ├── logging.properties\n                │   ├── server.xml\n                │   ├── tomcat-users.xml\n                │   ├── tomcat-users.xsd\n                │   └── web.xml\n                ├── CONTRIBUTING.md\n                ├── lib //All jars in this dir shares among all applications\n                │   ├── servlet-api.jar\n                │   ├── websocket-api.jar\n                │   └── ...\n                ├── LICENSE\n                ├── logs\n                │   ├── catalina.2020-04-05.log\n                │   └── ...\n                ├── NOTICE\n                ├── original libs.zip\n                ├── README.md\n                ├── RELEASE-NOTES\n                ├── RUNNING.txt\n                ├── temp //Tomcat temp files. Useless for us\n                │   └── safeToDelete.tmp\n                ├── webapps //Put war or exploded files here\n                │   ├── docs\n                │   ├── host-manager\n                │   ├── manager\n                │   └── ROOT\n                └── work\n                └── Catalina\n                `}\n            </GenericCode>\n        </Frame>\n    )\n}\n\nfunction getWeblogicFeatures() {\n    return (\n        <Frame title={'weblogic features'}>\n            <Bullet title={'1. Coherence:'}> cache server for session. Clustering for session, if all servers go down,\n                user\n                will not be logged out.</Bullet>\n            <Bullet title={'2. SLA:'}> promises to keep success on a gate way for example 80% and on the other\n                70%</Bullet>\n            <Bullet title={'3. CICD:'}> let’s say we update the project,-→ logged in user will not thrown out and new\n                users\n                will be on new</Bullet>\n        </Frame>\n    )\n}"]},"metadata":{},"sourceType":"module"}