{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/arash/SanDisk/MyCheatBook/src/components/popup-handler.js\";\nimport React from \"react\";\nimport { createPopper } from '@popperjs/core';\nimport { EventDispatcher, Events } from \"../tools/event-dispatcher\";\n\nclass PopupHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    PopupHandler.instance = this;\n    this.shouldUpdate = false;\n  }\n  /**\n   *\n   * @param name this name must be unique\n   * @param anchor element | 'cursor' | {getBoundingClientRect: ()=>{some rect}}\n   * @param content the popup jsx which you wanna show\n   * @param options popper options + the following:\n   * <p>\n   *     fields:<br>\n   *     arrow: [true | false]: to show an arrow. declare 'modifiers: [{name: 'offset', options: {offset: [5, 5],},},]' to place your content as you wish<br>\n   *     className: the css class name of yours<br>\n   *     hideOnClick: [true | false]: to hide when user clicks anywhere<br>\n   *     interactive: [true | false]: to hide when cursor moves outside automatically<br>\n   * </p>\n   * <br>\n   * <p>\n   *     methods:<br>\n   *     onHideListener: method to be called on hide<br>\n   *     onClickOutSide: method to be called on outside click<br>\n   * </p>\n   */\n\n\n  static showPopup(name, anchor, content, options) {\n    PopupHandler.instance.show(name, anchor, content, options);\n  }\n\n  static hidePopup(name) {\n    PopupHandler.instance.hide(name);\n  }\n\n  show(name, anchor, content, options) {\n    let a = this.state.items;\n\n    if (!a[name]) {\n      a[name] = {\n        name: name,\n        anchor: anchor,\n        reference: undefined,\n        content: content,\n        options: options,\n        r: /*#__PURE__*/React.createRef(),\n        isVisible: false,\n        isProcessed: false,\n        popper: undefined,\n        eventDispatcher: undefined\n      };\n    } else {\n      let t = a[name];\n      t.anchor = anchor;\n      t.content = content;\n      t.options = options;\n      t.isProcessed = false;\n    }\n\n    this.setState({\n      items: a\n    });\n    this.shouldUpdate = true;\n  }\n\n  hide(name) {\n    if (this.state.items[name]) {\n      let temp = this.state.items;\n      let item = temp[name];\n      delete temp[name];\n\n      if (item.eventDispatcher !== undefined) {\n        this.clearEventDispatcher(item);\n      }\n\n      if (item.options && item.options.onHideListener) {\n        item.options.onHideListener();\n      }\n\n      this.shouldUpdate = true;\n      this.setState({\n        items: temp\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return this.shouldUpdate;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    let i;\n\n    for (i in this.state.items) {\n      i = prevState.items[i];\n\n      if (!i.isProcessed) {\n        let readyToShow = this.prepare(i);\n\n        if (!i.popper) {\n          i.popper = createPopper(i.reference, i.r.current, i.options);\n          if (readyToShow) this.visible(i);\n        } else {\n          i.popper.update();\n        }\n\n        i.isProcessed = true;\n      }\n    }\n  }\n\n  prepare(item) {\n    let readyToShow = true;\n    item.reference = item.anchor;\n\n    if (item.reference === 'cursor') {\n      this.trackMousePointer(item);\n      readyToShow = false;\n    }\n\n    if (item.options) {\n      if (item.options.onClickOutside || item.options.hideOnClick) this.handleOutsideClick(item);\n      if (item.options.interactive) this.handleInteractive(item);\n    }\n\n    return readyToShow;\n  }\n\n  trackMousePointer(item) {\n    let rect = {\n      width: 5,\n      height: 5,\n      top: 0,\n      right: 5,\n      bottom: 5,\n      left: 0\n    };\n    item.reference = {\n      getBoundingClientRect: () => rect\n    };\n    this.getEventDispatcher(item).register(Events.MOUSE_MOVE, ({\n      clientX: x,\n      clientY: y\n    }) => {\n      try {\n        if (!item.isVisible) this.visible(item);\n        rect.left = x;\n        rect.top = y;\n        rect.right = rect.left + rect.width;\n        rect.bottom = rect.top + rect.height;\n        item.popper.update();\n      } catch (e) {}\n    });\n  }\n\n  handleOutsideClick(item) {\n    this.getEventDispatcher(item).register(Events.MOUSE_DOWN, ({\n      pageX: x,\n      pageY: y\n    }) => {\n      try {\n        if (item.options.onClickOutside) {\n          let rect = item.r.current.getBoundingClientRect();\n          if (x <= rect.left || x >= rect.right || y <= rect.top || y >= rect.bottom) item.options.onClickOutside();\n        }\n\n        if (item.options.hideOnClick) this.hide(item.name);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  handleInteractive(item) {\n    this.getEventDispatcher(item).register(Events.MOUSE_MOVE, ({\n      clientX: x,\n      clientY: y\n    }) => {\n      try {\n        let rect1 = item.reference.getBoundingClientRect();\n        let rect2 = item.r.current.getBoundingClientRect();\n\n        if (!item.interactiveOffset) {\n          let min = 2;\n          item.interactiveOffset = [min, min];\n\n          try {\n            item.interactiveOffset = item.options.modifiers.filter(h => h.name === 'offset')[0].options.offset;\n            if (item.interactiveOffset[0] === 0) item.interactiveOffset[0] = min;\n            if (item.interactiveOffset[1] === 0) item.interactiveOffset[1] = min;\n          } catch (e) {}\n        }\n\n        let o = item.interactiveOffset;\n\n        if (!(x >= rect1.left - o[1] && x <= rect1.right + o[1] && y >= rect1.top - o[0] && y <= rect1.bottom + o[0] || x >= rect2.left - o[1] && x <= rect2.right + o[1] && y >= rect2.top - o[0] && y <= rect2.bottom + o[0])) {\n          this.hide(item.name);\n        }\n      } catch (e) {}\n    });\n  }\n\n  getEventDispatcher(item) {\n    if (!item.eventDispatcher) item.eventDispatcher = new EventDispatcher();\n    return item.eventDispatcher;\n  }\n\n  clearEventDispatcher(item) {\n    item.eventDispatcher.unregister();\n    item.eventDispatcher = undefined;\n  }\n\n  visible(item) {\n    item.r.current.style.display = 'block';\n    item.isVisible = true;\n  }\n\n  getItemsSJX() {\n    let arr = [];\n    let i;\n\n    for (i in this.state.items) {\n      i = this.state.items[i];\n\n      if (i.options && i.options.arrow) {\n        let cls;\n        if (i.options.className) cls = i.options.className;\n        arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: i.r,\n          className: 'popup-window ' + cls,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'arrow',\n            \"data-popper-arrow\": true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'arrow-cover'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), i.content]\n        }, i.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this));\n      } else {\n        arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: i.r,\n          className: 'popup-container',\n          children: i.content\n        }, i.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 26\n        }, this));\n      }\n    }\n\n    return arr;\n  }\n\n  render() {\n    return this.getItemsSJX();\n  }\n\n}\n\nexport default PopupHandler;","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/components/popup-handler.js"],"names":["React","createPopper","EventDispatcher","Events","PopupHandler","Component","constructor","props","state","items","instance","shouldUpdate","showPopup","name","anchor","content","options","show","hidePopup","hide","a","reference","undefined","r","createRef","isVisible","isProcessed","popper","eventDispatcher","t","setState","temp","item","clearEventDispatcher","onHideListener","shouldComponentUpdate","nextProps","nextState","nextContext","componentDidUpdate","prevProps","prevState","snapshot","i","readyToShow","prepare","current","visible","update","trackMousePointer","onClickOutside","hideOnClick","handleOutsideClick","interactive","handleInteractive","rect","width","height","top","right","bottom","left","getBoundingClientRect","getEventDispatcher","register","MOUSE_MOVE","clientX","x","clientY","y","e","MOUSE_DOWN","pageX","pageY","console","error","rect1","rect2","interactiveOffset","min","modifiers","filter","h","offset","o","unregister","style","display","getItemsSJX","arr","arrow","cls","className","push","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {createPopper} from '@popperjs/core';\nimport {EventDispatcher, Events} from \"../tools/event-dispatcher\";\n\nclass PopupHandler extends React.Component {\n    static instance;\n\n    constructor(props) {\n        super(props);\n        this.state = {items: []};\n        PopupHandler.instance = this;\n        this.shouldUpdate = false;\n    }\n\n    /**\n     *\n     * @param name this name must be unique\n     * @param anchor element | 'cursor' | {getBoundingClientRect: ()=>{some rect}}\n     * @param content the popup jsx which you wanna show\n     * @param options popper options + the following:\n     * <p>\n     *     fields:<br>\n     *     arrow: [true | false]: to show an arrow. declare 'modifiers: [{name: 'offset', options: {offset: [5, 5],},},]' to place your content as you wish<br>\n     *     className: the css class name of yours<br>\n     *     hideOnClick: [true | false]: to hide when user clicks anywhere<br>\n     *     interactive: [true | false]: to hide when cursor moves outside automatically<br>\n     * </p>\n     * <br>\n     * <p>\n     *     methods:<br>\n     *     onHideListener: method to be called on hide<br>\n     *     onClickOutSide: method to be called on outside click<br>\n     * </p>\n     */\n    static showPopup(name, anchor, content, options) {\n        PopupHandler.instance.show(name, anchor, content, options);\n    }\n\n    static hidePopup(name) {\n        PopupHandler.instance.hide(name);\n    }\n\n    show(name, anchor, content, options) {\n        let a = this.state.items;\n        if (!a[name]) {\n            a[name] = {\n                name: name,\n                anchor: anchor,\n                reference: undefined,\n                content: content,\n                options: options,\n                r: React.createRef(),\n                isVisible: false,\n                isProcessed: false,\n                popper: undefined,\n                eventDispatcher: undefined,\n            };\n        } else {\n            let t = a[name];\n            t.anchor = anchor;\n            t.content = content;\n            t.options = options;\n            t.isProcessed = false;\n        }\n        this.setState({items: a});\n        this.shouldUpdate = true;\n    }\n\n    hide(name) {\n        if (this.state.items[name]) {\n            let temp = this.state.items;\n            let item = temp[name];\n            delete temp[name];\n\n            if (item.eventDispatcher !== undefined) {\n                this.clearEventDispatcher(item);\n            }\n\n            if (item.options && item.options.onHideListener) {\n                item.options.onHideListener();\n            }\n\n            this.shouldUpdate = true;\n            this.setState({items: temp});\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return this.shouldUpdate;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        let i;\n        for (i in this.state.items) {\n            i = prevState.items[i];\n            if (!i.isProcessed) {\n                let readyToShow = this.prepare(i);\n                if (!i.popper) {\n                    i.popper = createPopper(i.reference, i.r.current, i.options);\n                    if (readyToShow)\n                        this.visible(i);\n                } else {\n                    i.popper.update();\n                }\n\n                i.isProcessed = true;\n            }\n        }\n    }\n\n    prepare(item) {\n        let readyToShow = true;\n        item.reference = item.anchor;\n        if (item.reference === 'cursor') {\n            this.trackMousePointer(item);\n            readyToShow = false;\n        }\n\n        if (item.options) {\n            if (item.options.onClickOutside || item.options.hideOnClick)\n                this.handleOutsideClick(item);\n            if (item.options.interactive)\n                this.handleInteractive(item);\n        }\n\n        return readyToShow;\n    }\n\n    trackMousePointer(item) {\n        let rect = {width: 5, height: 5, top: 0, right: 5, bottom: 5, left: 0};\n        item.reference = {getBoundingClientRect: () => rect};\n        this.getEventDispatcher(item).register(Events.MOUSE_MOVE, ({clientX: x, clientY: y}) => {\n            try {\n                if (!item.isVisible)\n                    this.visible(item);\n                rect.left = x;\n                rect.top = y;\n                rect.right = rect.left + rect.width;\n                rect.bottom = rect.top + rect.height;\n                item.popper.update();\n            } catch (e) {\n            }\n        });\n    }\n\n    handleOutsideClick(item) {\n        this.getEventDispatcher(item).register(Events.MOUSE_DOWN, ({pageX: x, pageY: y}) => {\n            try {\n                if (item.options.onClickOutside) {\n                    let rect = item.r.current.getBoundingClientRect();\n                    if (x <= rect.left || x >= rect.right || y <= rect.top || y >= rect.bottom)\n                        item.options.onClickOutside();\n                }\n                if (item.options.hideOnClick)\n                    this.hide(item.name);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    handleInteractive(item) {\n        this.getEventDispatcher(item).register(Events.MOUSE_MOVE, ({clientX: x, clientY: y}) => {\n            try {\n                let rect1 = item.reference.getBoundingClientRect();\n                let rect2 = item.r.current.getBoundingClientRect();\n                if (!item.interactiveOffset) {\n                    let min = 2;\n                    item.interactiveOffset = [min, min];\n                    try {\n                        item.interactiveOffset = item.options.modifiers.filter(h => h.name === 'offset')[0].options.offset;\n                        if (item.interactiveOffset[0] === 0)\n                            item.interactiveOffset[0] = min;\n                        if (item.interactiveOffset[1] === 0)\n                            item.interactiveOffset[1] = min;\n                    } catch (e) {\n                    }\n                }\n                let o = item.interactiveOffset;\n                if (!(\n                    (x >= rect1.left - o[1] && x <= rect1.right + o[1] && y >= rect1.top - o[0] && y <= rect1.bottom + o[0]) ||\n                    (x >= rect2.left - o[1] && x <= rect2.right + o[1] && y >= rect2.top - o[0] && y <= rect2.bottom + o[0])\n                )) {\n                    this.hide(item.name);\n                }\n            } catch (e) {\n            }\n        });\n    }\n\n    getEventDispatcher(item) {\n        if (!item.eventDispatcher)\n            item.eventDispatcher = new EventDispatcher();\n        return item.eventDispatcher;\n    }\n\n    clearEventDispatcher(item) {\n        item.eventDispatcher.unregister();\n        item.eventDispatcher = undefined;\n    }\n\n    visible(item) {\n        item.r.current.style.display = 'block';\n        item.isVisible = true;\n    }\n\n    getItemsSJX() {\n        let arr = [];\n        let i;\n        for (i in this.state.items) {\n            i = this.state.items[i];\n            if (i.options && i.options.arrow) {\n                let cls;\n                if (i.options.className)\n                    cls = i.options.className;\n                arr.push(\n                    <div ref={i.r} className={'popup-window ' + cls} key={i.name}>\n                        <div className={'arrow'} data-popper-arrow/>\n                        <div className={'arrow-cover'}/>\n                        {i.content}\n                    </div>\n                );\n            } else {\n                arr.push(<div ref={i.r} className={'popup-container'} key={i.name}>{i.content}</div>);\n            }\n        }\n\n        return arr;\n    }\n\n    render() {\n        return this.getItemsSJX();\n    }\n}\n\nexport default PopupHandler;"]},"metadata":{},"sourceType":"module"}