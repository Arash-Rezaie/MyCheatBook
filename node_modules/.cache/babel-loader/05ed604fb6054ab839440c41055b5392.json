{"ast":null,"code":"const Events = {\n  /**Triggered when the mouse button is clicked and released*/\n  CLICK: 'click',\n\n  /**Triggered when the mouse button is clicked and released twice.*/\n  DB_CLICK: 'dbclick',\n\n  /**Triggered when the mouse button is clicked*/\n  MOUSE_DOWN: 'mousedown',\n\n  /**Triggered when the pointer is moved to be within the screen region occupied by the element or one of its descendants*/\n  MOUSE_ENTER: 'mouseenter',\n\n  /**Triggered when the pointer is moved to be outside the screen region occupied by the element and all its descendants.*/\n  MOUSE_LEAVE: 'mouseleave',\n\n  /**Triggered when the pointer is moved while over the element*/\n  MOUSE_MOVE: 'mousemove',\n\n  /**This is the same as for mouseleave, except that this event will trigger while the pointer still over the descendant element.*/\n  MOUSE_OUT: 'mouseout',\n\n  /**This is the same as for mouseenter, except that this event will trigger while the pointer is still over a descendant element.*/\n  MOUSE_OVER: 'mouseover',\n\n  /**Trigger when the mouse button is released*/\n  MOUSE_UP: 'mouseup',\n\n  /**Trigger when right mouse button is pressed*/\n  CONTEXT_MENU: 'contextmenu',\n\n  /**Check if target mouse button is the primary one*/\n  IS_MOUSE_LEFT: 0,\n\n  /**Check if target mouse button is the middle one*/\n  IS_MOUSE_MIDDLE: 1,\n\n  /**Check if target mouse button is the secondary one*/\n  IS_MOUSE_RIGHT: 2,\n\n  /**Check if target mouse button is the back one*/\n  IS_MOUSE_X1: 3,\n\n  /**Check if target mouse button is the forward one*/\n  IS_MOUSE_X2: 4,\n\n  /**Tiggered when the user presses a key*/\n  KEY_DOWN: 'keydown',\n\n  /**Triggered when the user presses and releases a key.*/\n  KEY_PRESS: 'keypress',\n\n  /**Triggered when the user releases the key*/\n  KEY_UP: 'keyup',\n\n  /**Is Triggered when the element loses the focus*/\n  BLUR: 'blur',\n\n  /**Is Triggered when the element gains the focus*/\n  FOCUS: 'focus',\n\n  /**Is triggered when the element is just about to gain the focus.*/\n  FOCUS_IN: 'focusin',\n\n  /**Is Triggered when the element is just about the lose focus*/\n  FOCUS_OUT: 'focusout',\n\n  /**The element that is about to gain or lose the focus.*/\n  RELATED_TARGET: 'relatedTarget',\n\n  /**Triggered if the target button is shift*/\n  SHIFT: 'Shift',\n\n  /**Triggered if the target button is left-shift*/\n  SHIFT_LEFT: 'ShiftLeft',\n\n  /**Triggered if the target button is right-shift*/\n  SHIFT_RIGHT: 'ShiftRight',\n\n  /**Triggered if the target button is Alt*/\n  ALT: 'Alt',\n\n  /**Triggered if the target button is ctrl*/\n  CTRL: 'Ctrl',\n\n  /**Triggered if the target button is cmd in Mac Os*/\n  META: 'Cmd',\n\n  /**Triggered if the target button is a digit*/\n  DIGIT: 'Digit',\n\n  /**Triggered if the target button is enter*/\n  ENTER: 'Enter',\n\n  /**Triggered if the target button is backspace*/\n  BACKSPACE: 'Backspace',\n\n  /**Triggered if the target button is tab*/\n  TAB: 'Tap',\n\n  /**Triggered if the target button is space*/\n  SPACE: 'Space',\n\n  /**Triggered when user scrolls*/\n  SCROLL: 'scroll'\n};\n\nclass EventDispatcher {\n  constructor() {\n    this.eventDispatchers = [];\n  }\n\n  register(event, listener, name = null) {\n    if (!this.eventDispatchers[event]) {\n      let listeners = [];\n      this.eventDispatchers[event] = {\n        listeners: listeners,\n        docListener: e => listeners.forEach(k => k.listener(e))\n      };\n    }\n\n    if (name != null && this.exists(event, name) >= 0) {\n      throw new Error('This event dispatcher has declared before');\n    }\n\n    this.eventDispatchers[event].listeners.push({\n      listener: listener,\n      name: name\n    });\n    document.addEventListener(event, this.eventDispatchers[event].docListener);\n  }\n\n  unregister(event = null, name = null) {\n    if (event != null) {\n      if (name != null) {\n        let i = this.exists(event, name);\n        if (i >= 0) this.eventDispatchers[event].listeners.splice(i, 1);\n        if (this.eventDispatchers[event].listeners.length === 0) this.removeEvent(event);\n      } else {\n        this.removeEvent(event);\n      }\n\n      for (let i in this.eventDispatchers) return; //to check if arr is empty\n\n\n      this.eventDispatchers = [];\n    } else {\n      for (let d in this.eventDispatchers) this.removeDocListener(d);\n\n      this.eventDispatchers = [];\n    }\n  }\n\n  exists(event, name = null) {\n    if (this.eventDispatchers[event]) {\n      if (name == null) {\n        return 0;\n      } else {\n        let a = this.eventDispatchers[event].listeners;\n\n        for (let i = a.length - 1; i >= 0; i--) if (a[i].name === name) return i;\n      }\n    }\n\n    return -1;\n  }\n\n  removeEvent(event) {\n    this.removeDocListener(event);\n    delete this.eventDispatchers[event];\n  }\n\n  removeDocListener(eventName) {\n    document.removeEventListener(eventName, this.eventDispatchers[eventName].docListener);\n  }\n\n}\n\nexport { EventDispatcher, Events };","map":{"version":3,"sources":["/media/arash/usb_stick/my-cheat-book/src/tools/event-dispatcher.js"],"names":["Events","CLICK","DB_CLICK","MOUSE_DOWN","MOUSE_ENTER","MOUSE_LEAVE","MOUSE_MOVE","MOUSE_OUT","MOUSE_OVER","MOUSE_UP","CONTEXT_MENU","IS_MOUSE_LEFT","IS_MOUSE_MIDDLE","IS_MOUSE_RIGHT","IS_MOUSE_X1","IS_MOUSE_X2","KEY_DOWN","KEY_PRESS","KEY_UP","BLUR","FOCUS","FOCUS_IN","FOCUS_OUT","RELATED_TARGET","SHIFT","SHIFT_LEFT","SHIFT_RIGHT","ALT","CTRL","META","DIGIT","ENTER","BACKSPACE","TAB","SPACE","SCROLL","EventDispatcher","eventDispatchers","register","event","listener","name","listeners","docListener","e","forEach","k","exists","Error","push","document","addEventListener","unregister","i","splice","length","removeEvent","d","removeDocListener","a","eventName","removeEventListener"],"mappings":"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","sourcesContent":["const Events = {\n    /**Triggered when the mouse button is clicked and released*/\n    CLICK: 'click',\n    /**Triggered when the mouse button is clicked and released twice.*/\n    DB_CLICK: 'dbclick',\n    /**Triggered when the mouse button is clicked*/\n    MOUSE_DOWN: 'mousedown',\n    /**Triggered when the pointer is moved to be within the screen region occupied by the element or one of its descendants*/\n    MOUSE_ENTER: 'mouseenter',\n    /**Triggered when the pointer is moved to be outside the screen region occupied by the element and all its descendants.*/\n    MOUSE_LEAVE: 'mouseleave',\n    /**Triggered when the pointer is moved while over the element*/\n    MOUSE_MOVE: 'mousemove',\n    /**This is the same as for mouseleave, except that this event will trigger while the pointer still over the descendant element.*/\n    MOUSE_OUT: 'mouseout',\n    /**This is the same as for mouseenter, except that this event will trigger while the pointer is still over a descendant element.*/\n    MOUSE_OVER: 'mouseover',\n    /**Trigger when the mouse button is released*/\n    MOUSE_UP: 'mouseup',\n    /**Trigger when right mouse button is pressed*/\n    CONTEXT_MENU: 'contextmenu',\n    /**Check if target mouse button is the primary one*/\n    IS_MOUSE_LEFT: 0,\n    /**Check if target mouse button is the middle one*/\n    IS_MOUSE_MIDDLE: 1,\n    /**Check if target mouse button is the secondary one*/\n    IS_MOUSE_RIGHT: 2,\n    /**Check if target mouse button is the back one*/\n    IS_MOUSE_X1: 3,\n    /**Check if target mouse button is the forward one*/\n    IS_MOUSE_X2: 4,\n    /**Tiggered when the user presses a key*/\n    KEY_DOWN: 'keydown',\n    /**Triggered when the user presses and releases a key.*/\n    KEY_PRESS: 'keypress',\n    /**Triggered when the user releases the key*/\n    KEY_UP: 'keyup',\n    /**Is Triggered when the element loses the focus*/\n    BLUR: 'blur',\n    /**Is Triggered when the element gains the focus*/\n    FOCUS: 'focus',\n    /**Is triggered when the element is just about to gain the focus.*/\n    FOCUS_IN: 'focusin',\n    /**Is Triggered when the element is just about the lose focus*/\n    FOCUS_OUT: 'focusout',\n    /**The element that is about to gain or lose the focus.*/\n    RELATED_TARGET: 'relatedTarget',\n    /**Triggered if the target button is shift*/\n    SHIFT: 'Shift',\n    /**Triggered if the target button is left-shift*/\n    SHIFT_LEFT: 'ShiftLeft',\n    /**Triggered if the target button is right-shift*/\n    SHIFT_RIGHT: 'ShiftRight',\n    /**Triggered if the target button is Alt*/\n    ALT: 'Alt',\n    /**Triggered if the target button is ctrl*/\n    CTRL: 'Ctrl',\n    /**Triggered if the target button is cmd in Mac Os*/\n    META: 'Cmd',\n    /**Triggered if the target button is a digit*/\n    DIGIT: 'Digit',\n    /**Triggered if the target button is enter*/\n    ENTER: 'Enter',\n    /**Triggered if the target button is backspace*/\n    BACKSPACE: 'Backspace',\n    /**Triggered if the target button is tab*/\n    TAB: 'Tap',\n    /**Triggered if the target button is space*/\n    SPACE: 'Space',\n    /**Triggered when user scrolls*/\n    SCROLL: 'scroll',\n};\n\nclass EventDispatcher {\n    eventDispatchers = [];\n\n    register(event, listener, name = null) {\n        if (!this.eventDispatchers[event]) {\n            let listeners = [];\n            this.eventDispatchers[event] = {\n                listeners: listeners, docListener: e => listeners.forEach(k => k.listener(e))\n            };\n        }\n        if (name != null && this.exists(event, name) >= 0) {\n            throw new Error('This event dispatcher has declared before');\n        }\n\n        this.eventDispatchers[event].listeners.push({listener: listener, name: name});\n        document.addEventListener(event, this.eventDispatchers[event].docListener);\n    }\n\n    unregister(event = null, name = null) {\n        if (event != null) {\n            if (name != null) {\n                let i = this.exists(event, name);\n                if (i >= 0)\n                    this.eventDispatchers[event].listeners.splice(i, 1);\n                if (this.eventDispatchers[event].listeners.length === 0)\n                    this.removeEvent(event);\n            } else {\n                this.removeEvent(event);\n            }\n            for (let i in this.eventDispatchers) return;//to check if arr is empty\n            this.eventDispatchers = [];\n        } else {\n            for (let d in this.eventDispatchers)\n                this.removeDocListener(d);\n            this.eventDispatchers = [];\n        }\n    }\n\n    exists(event, name = null) {\n        if (this.eventDispatchers[event]) {\n            if (name == null) {\n                return 0;\n            } else {\n                let a = this.eventDispatchers[event].listeners;\n                for (let i = a.length - 1; i >= 0; i--)\n                    if (a[i].name === name)\n                        return i;\n            }\n        }\n        return -1;\n    }\n\n    removeEvent(event) {\n        this.removeDocListener(event);\n        delete this.eventDispatchers[event];\n    }\n\n    removeDocListener(eventName) {\n        document.removeEventListener(eventName, this.eventDispatchers[eventName].docListener);\n    }\n}\n\nexport {\n    EventDispatcher\n    ,\n    Events\n};"]},"metadata":{},"sourceType":"module"}