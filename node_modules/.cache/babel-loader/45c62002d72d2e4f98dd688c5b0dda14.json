{"ast":null,"code":"import _classCallCheck from\"/media/arash/SanDisk/MyCheatBook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/media/arash/SanDisk/MyCheatBook/node_modules/@babel/runtime/helpers/esm/createClass\";import{Circle,DrawBox,Line,Rectangle,Text}from\"../../components/draw-box\";export var DrawBoxHandler=/*#__PURE__*/function(){function DrawBoxHandler(){var _this=this;_classCallCheck(this,DrawBoxHandler);this.METHOD_POINTERS={text:function text(){return new Text();},circle:function circle(){return new Circle();},line:function line(){return _this.generateLine();},rect:function rect(){return new Rectangle();},node:function node(){return _this.generateNode();},cap:function cap(){return _this.generateCaption();},hline:function hline(){return _this.generateHLine();},vline:function vline(){return _this.generateVLine();},vect:function vect(){return _this.generateVector();},hvect:function hvect(){return _this.generateHVector();},// id: (d, o) => this.container[d] = o,\n// pos: (d, o) => o.setPosition(d),\n// align: (d, o) => o.alignTo(d),\n// offset: (d, o) => o.setOffset(d),\nlabel:function label(d,o){return o.setLabel(d);},color:function color(d,o){return o.setColor(d);},fillColor:function fillColor(d,o){return o.setFillColor(d);},strokeColor:function strokeColor(d,o){return o.setStrokeColor(d);},strokeWidth:function strokeWidth(d,o){return o.setStrokeWidth(d);},strokeStyle:function strokeStyle(d,o){return o.setStrokeStyle(d);},radius:function radius(d,o){return o.setRadius(d);},fontSize:function fontSize(d,o){return o.setFontSize(d);},fontStyle:function fontStyle(d,o){return o.setFontStyle(d);},lineto:function lineto(d,o){return o.lineto(d);},arrow:function arrow(d,o){return o.showArrow(d[0],d[1]);},len:function len(d,o){return o.setLength(d);},between:function between(d,o){return o.between(d);},width:function width(d,o){return o.setWidth(d);},height:function height(d,o){return o.setHeight(d);},conn:function conn(d,o){return o.connectTo(d);},captions:function captions(d,o){return o.setCaptions(d);}};this.drawBox=new DrawBox();this.container={};}/**\n     * @param itemConf it is an object with fields:<br/>\n     * {\n     *    shape: ['text', 'circle', 'line', 'rect', 'node', 'cap', 'hline', 'vline', 'vect', 'hvect']<br/>\n     *\n     *    --- generic ------<br/>\n     *    id: string<br/>\n     *    pos: [x, y]<br/>\n     *    align: shape<br/>\n     *    offset: [dx, dy]<br/>\n     *    label: [string, Text-object<br/>\n     *    color: ['green', 'blue', 'red', 'yellow', 'purple', 'brown', 'orange', 'pink'], (set fill & stroke together)<br/>\n     *    fillColor: color<br/>\n     *    strokeColor: color<br/>\n     *    strokeWidth: int<br/>\n     *    strokeStyle: [int, int], (make stroke dashed)<br/>\n     *\n     *    --- circle ------<br/>\n     *    radius: int<br/>\n     *\n     *    --- Text ------<br/>\n     *    fontSize: value, (ex. '20px' or '12em'<br/>\n     *    fontStyle: ['bold', 'italic', 'bold italic'<br/>\n     *\n     *    --- all line types ------<br/>\n     *    lineto: [x,y] or [intR, length] or [intD, length]<br/>\n     *    arrow: [dir([true, false]), places([0 - 1])]<br/>\n     *    between: [id1, id2, gap]<br/>\n     *\n     *    --- hline & vline & hvect ------<br/>\n     *    len: int<br/>\n     *\n     *    --- rectangle ------<br/>\n     *    width: int<br/>\n     *    height: int<br/>\n     *\n     *    --- node & cap ------<br/>\n     *    conn: ref-id. (connect to the aligned shape)<br/>\n     *    captions: [{t:string, c: 'color string', w:width, offset:[x=0,y=0]}]<br/>\n     * }\n     */_createClass(DrawBoxHandler,[{key:\"addShape\",value:function addShape(itemConf){this.drawBox.addShape(this.generateShape(itemConf));return this;}},{key:\"generateShape\",value:function generateShape(itemConf){var o=this.METHOD_POINTERS[itemConf.shape](itemConf);this.initShape(itemConf,o);var t;for(t in itemConf){if(t!=='shape'&&t!=='id'&&t!=='pos'&&t!=='align'&&t!=='offset'){this.METHOD_POINTERS[t](itemConf[t],o);}}return o;}},{key:\"initShape\",value:function initShape(conf,o){if(conf.id)this.container[conf.id]=o;if(conf.pos)o.setPosition(conf.pos);if(conf.align)o.alignTo(this.container[conf.align]);if(conf.offset){o.setOffset(conf.offset);}return o;}},{key:\"generateNode\",value:function generateNode(){var _this2=this;//crate new circle\nvar o=new Circle().setRadius(20).setStrokeWidth(3).setStrokeColor('black').setFillColor('yellow');//redirect setLabel to a new method\nthis.applyCustomLabel(o,function(lbl){return new Text().setPosition(o.getCenterPoint()).setLabel(lbl).setFontSize('20px').setOffset([0,6]);});o['connectTo']=function(refId){_this2.drawBox.addShape(_this2.generateVector().superBetween(o,_this2.container[refId],5));return o;};o['setCaptions']=function(caps){if(caps[0]===undefined)caps=[caps];caps.forEach(function(v,i){_this2.drawBox.addShape(_this2.generateCaption().alignTo(o).setOffset(v.offset?v.offset:[28,caps.length*-11.5+i*25]).setWidth(v.w).setHeight(20).setLabel(v.t).setColor(v.c).setStrokeWidth(2));});return o;};return o;}},{key:\"generateCaption\",value:function generateCaption(){var _this3=this;var o=new Rectangle();this.applyCustomLabel(o,function(lbl){return new Text().setPosition(o.getCenterPoint()).setLabel(lbl).setOffset([0,5]).setFontStyle('bold');});o['connectTo']=function(refId){_this3.drawBox.addShape(new Line().between(o,_this3.container[refId],5).setStrokeColor('red').setFillColor('red').setStrokeWidth(1));return o;};return o;}},{key:\"generateLine\",value:function generateLine(){var _this4=this;var labelProducer=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var o=new Line();o['superBetween']=o.between;o[\"between\"]=function(data){return o.superBetween(_this4.container[data[0]],_this4.container[data[1]],data[2]);};this.applyCustomLabel(o,labelProducer);return o;}},{key:\"generateHLine\",value:function generateHLine(){var o=this.generateLine();o['setLength']=function(l){return l>0?o.lineTo(['0D',l]):o.lineTo(['180D',-l]);};return o;}},{key:\"generateVLine\",value:function generateVLine(){var o=this.generateLine();o['setLength']=function(l){return l>0?o.lineTo(['90D',l]):o.lineTo(['270D',-l]);};return o;}},{key:\"generateVector\",value:function generateVector(){var labelProducer=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;return this.generateLine(labelProducer).setStrokeColor('black').setFillColor('black').setStrokeWidth(2).showArrow(1,1);}},{key:\"generateHVector\",value:function generateHVector(){var o=this.generateVector(function(lbl){return new Text().setPosition(o.getCenterPoint()).setLabel(lbl).setOffset([0,-6]).setFontStyle('');});o['setLength']=function(l){return l>0?o.lineTo(['0D',l]):o.lineTo(['180D',-l]);};return o;}},{key:\"applyCustomLabel\",value:function applyCustomLabel(shape){var _this5=this;var inCaseOfSimpleText=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;shape['setText']=shape.setLabel;shape['setLabel']=function(lbl){return typeof lbl==='string'?shape.setText(inCaseOfSimpleText?inCaseOfSimpleText(lbl):lbl):shape.setText(_this5.generateShape(lbl).alignTo(shape));};}},{key:\"alterShape\",value:function alterShape(id,m){m(this.container[id]);return this;}},{key:\"render\",value:function render(canvas){this.drawBox.render(canvas);}}]);return DrawBoxHandler;}();","map":{"version":3,"sources":["/media/arash/SanDisk/MyCheatBook/src/contents/git/draw-box-handler.js"],"names":["Circle","DrawBox","Line","Rectangle","Text","DrawBoxHandler","METHOD_POINTERS","text","circle","line","generateLine","rect","node","generateNode","cap","generateCaption","hline","generateHLine","vline","generateVLine","vect","generateVector","hvect","generateHVector","label","d","o","setLabel","color","setColor","fillColor","setFillColor","strokeColor","setStrokeColor","strokeWidth","setStrokeWidth","strokeStyle","setStrokeStyle","radius","setRadius","fontSize","setFontSize","fontStyle","setFontStyle","lineto","arrow","showArrow","len","setLength","between","width","setWidth","height","setHeight","conn","connectTo","captions","setCaptions","drawBox","container","itemConf","addShape","generateShape","shape","initShape","t","conf","id","pos","setPosition","align","alignTo","offset","setOffset","applyCustomLabel","lbl","getCenterPoint","refId","superBetween","caps","undefined","forEach","v","i","length","w","c","labelProducer","data","l","lineTo","inCaseOfSimpleText","setText","m","canvas","render"],"mappings":"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","sourcesContent":["import {Circle, DrawBox, Line, Rectangle, Text} from \"../../components/draw-box\";\n\nexport class DrawBoxHandler {\n    const\n    METHOD_POINTERS = {\n        text: () => new Text(),\n        circle: () => new Circle(),\n        line: () => this.generateLine(),\n        rect: () => new Rectangle(),\n        node: () => this.generateNode(),\n        cap: () => this.generateCaption(),\n        hline: () => this.generateHLine(),\n        vline: () => this.generateVLine(),\n        vect: () => this.generateVector(),\n        hvect: () => this.generateHVector(),\n        // id: (d, o) => this.container[d] = o,\n        // pos: (d, o) => o.setPosition(d),\n        // align: (d, o) => o.alignTo(d),\n        // offset: (d, o) => o.setOffset(d),\n        label: (d, o) => o.setLabel(d),\n        color: (d, o) => o.setColor(d),\n        fillColor: (d, o) => o.setFillColor(d),\n        strokeColor: (d, o) => o.setStrokeColor(d),\n        strokeWidth: (d, o) => o.setStrokeWidth(d),\n        strokeStyle: (d, o) => o.setStrokeStyle(d),\n        radius: (d, o) => o.setRadius(d),\n        fontSize: (d, o) => o.setFontSize(d),\n        fontStyle: (d, o) => o.setFontStyle(d),\n        lineto: (d, o) => o.lineto(d),\n        arrow: (d, o) => o.showArrow(d[0], d[1]),\n        len: (d, o) => o.setLength(d),\n        between: (d, o) => o.between(d),\n        width: (d, o) => o.setWidth(d),\n        height: (d, o) => o.setHeight(d),\n        conn: (d, o) => o.connectTo(d),\n        captions: (d, o) => o.setCaptions(d),\n    };\n\n    constructor() {\n        this.drawBox = new DrawBox();\n        this.container = {};\n    }\n\n    /**\n     * @param itemConf it is an object with fields:<br/>\n     * {\n     *    shape: ['text', 'circle', 'line', 'rect', 'node', 'cap', 'hline', 'vline', 'vect', 'hvect']<br/>\n     *\n     *    --- generic ------<br/>\n     *    id: string<br/>\n     *    pos: [x, y]<br/>\n     *    align: shape<br/>\n     *    offset: [dx, dy]<br/>\n     *    label: [string, Text-object<br/>\n     *    color: ['green', 'blue', 'red', 'yellow', 'purple', 'brown', 'orange', 'pink'], (set fill & stroke together)<br/>\n     *    fillColor: color<br/>\n     *    strokeColor: color<br/>\n     *    strokeWidth: int<br/>\n     *    strokeStyle: [int, int], (make stroke dashed)<br/>\n     *\n     *    --- circle ------<br/>\n     *    radius: int<br/>\n     *\n     *    --- Text ------<br/>\n     *    fontSize: value, (ex. '20px' or '12em'<br/>\n     *    fontStyle: ['bold', 'italic', 'bold italic'<br/>\n     *\n     *    --- all line types ------<br/>\n     *    lineto: [x,y] or [intR, length] or [intD, length]<br/>\n     *    arrow: [dir([true, false]), places([0 - 1])]<br/>\n     *    between: [id1, id2, gap]<br/>\n     *\n     *    --- hline & vline & hvect ------<br/>\n     *    len: int<br/>\n     *\n     *    --- rectangle ------<br/>\n     *    width: int<br/>\n     *    height: int<br/>\n     *\n     *    --- node & cap ------<br/>\n     *    conn: ref-id. (connect to the aligned shape)<br/>\n     *    captions: [{t:string, c: 'color string', w:width, offset:[x=0,y=0]}]<br/>\n     * }\n     */\n    addShape(itemConf) {\n        this.drawBox.addShape(this.generateShape(itemConf));\n        return this;\n    }\n\n    generateShape(itemConf) {\n        let o = this.METHOD_POINTERS[itemConf.shape](itemConf);\n        this.initShape(itemConf, o);\n        let t;\n        for (t in itemConf) {\n            if (t !== 'shape' && t !== 'id' && t !== 'pos' && t !== 'align' && t !== 'offset') {\n                this.METHOD_POINTERS[t](itemConf[t], o);\n            }\n        }\n        return o;\n    }\n\n    initShape(conf, o) {\n        if (conf.id)\n            this.container[conf.id] = o;\n        if (conf.pos)\n            o.setPosition(conf.pos);\n        if (conf.align)\n            o.alignTo(this.container[conf.align]);\n        if (conf.offset) {\n            o.setOffset(conf.offset);\n        }\n        return o;\n    }\n\n    generateNode() {\n        //crate new circle\n        let o = new Circle()\n            .setRadius(20)\n            .setStrokeWidth(3)\n            .setStrokeColor('black')\n            .setFillColor('yellow');\n\n        //redirect setLabel to a new method\n        this.applyCustomLabel(o, lbl =>\n            new Text()\n                .setPosition(o.getCenterPoint())\n                .setLabel(lbl)\n                .setFontSize('20px')\n                .setOffset([0, 6]));\n        o['connectTo'] = refId => {\n            this.drawBox.addShape(this.generateVector()\n                .superBetween(o, this.container[refId], 5));\n            return o;\n        };\n        o['setCaptions'] = caps => {\n            if (caps[0] === undefined)\n                caps = [caps];\n            caps.forEach((v, i) => {\n                this.drawBox.addShape(\n                    this.generateCaption()\n                        .alignTo(o)\n                        .setOffset(v.offset ? v.offset : [28, (caps.length * -11.5 + (i * 25))])\n                        .setWidth(v.w)\n                        .setHeight(20)\n                        .setLabel(v.t)\n                        .setColor(v.c)\n                        .setStrokeWidth(2)\n                )\n            })\n            return o;\n        };\n        return o;\n    }\n\n    generateCaption() {\n        let o = new Rectangle()\n        this.applyCustomLabel(o, lbl =>\n            new Text()\n                .setPosition(o.getCenterPoint())\n                .setLabel(lbl)\n                .setOffset([0, 5])\n                .setFontStyle('bold'));\n        o['connectTo'] = refId => {\n            this.drawBox.addShape(new Line()\n                .between(o, this.container[refId], 5)\n                .setStrokeColor('red')\n                .setFillColor('red')\n                .setStrokeWidth(1));\n            return o;\n        };\n        return o;\n    }\n\n    generateLine(labelProducer = null) {\n        let o = new Line();\n        o['superBetween'] = o.between;\n        o[\"between\"] = data => o.superBetween(this.container[data[0]], this.container[data[1]], data[2]);\n        this.applyCustomLabel(o, labelProducer);\n        return o;\n    }\n\n    generateHLine() {\n        let o = this.generateLine()\n        o['setLength'] = l =>\n            l > 0 ?\n                o.lineTo(['0D', l]) :\n                o.lineTo(['180D', -l])\n        return o;\n    }\n\n    generateVLine() {\n        let o = this.generateLine()\n        o['setLength'] = l =>\n            l > 0 ?\n                o.lineTo(['90D', l]) :\n                o.lineTo(['270D', -l])\n        return o;\n    }\n\n    generateVector(labelProducer = null) {\n        return this.generateLine(labelProducer)\n            .setStrokeColor('black')\n            .setFillColor('black')\n            .setStrokeWidth(2)\n            .showArrow(1, 1);\n    }\n\n    generateHVector() {\n        let o = this.generateVector(lbl =>\n            new Text()\n                .setPosition(o.getCenterPoint())\n                .setLabel(lbl)\n                .setOffset([0, -6])\n                .setFontStyle(''));\n        o['setLength'] = l =>\n            l > 0 ?\n                o.lineTo(['0D', l]) :\n                o.lineTo(['180D', -l])\n        return o;\n    }\n\n    applyCustomLabel(shape, inCaseOfSimpleText = null) {\n        shape['setText'] = shape.setLabel;\n        shape['setLabel'] = lbl => {\n            return (typeof lbl === 'string') ?\n                shape.setText(inCaseOfSimpleText ? inCaseOfSimpleText(lbl) : lbl) :\n                shape.setText(this.generateShape(lbl).alignTo(shape))\n        };\n    }\n\n    alterShape(id, m) {\n        m(this.container[id]);\n        return this;\n    }\n\n    render(canvas) {\n        this.drawBox.render(canvas);\n    }\n}"]},"metadata":{},"sourceType":"module"}